[
  {
    "goal": "Amazon SDE",
    "topic": "Data Structures",
    "subtopic": "Arrays & Strings",
    "question": "Which technique helps in solving problems like finding subarrays with a specific sum in linear time?",
    "correct_answer": "Sliding window",
    "distractors": ["Two-pointer technique", "Binary search", "Greedy method"],
    "context": "Sliding window is a common technique used for problems involving subarrays or substrings with specific conditions, such as sums or lengths.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Data Structures",
    "subtopic": "Arrays & Strings",
    "question": "What is the time complexity of searching for an element in an unsorted array?",
    "correct_answer": "O(n)",
    "distractors": ["O(1)", "O(log n)", "O(n log n)"],
    "context": "In an unsorted array, each element must be checked one by one, resulting in O(n) time complexity.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Data Structures",
    "subtopic": "Arrays & Strings",
    "question": "Which method is commonly used to check if a string has all unique characters?",
    "correct_answer": "Using a hash set",
    "distractors": ["Using recursion", "Binary search", "Prefix sum array"],
    "context": "A hash set is used to track seen characters, allowing fast lookup to check for duplicates in a string.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Data Structures",
    "subtopic": "Arrays & Strings",
    "question": "In which scenario is a prefix sum array typically used?",
    "correct_answer": "To compute the sum of elements in a subarray efficiently",
    "distractors": ["To reverse the array", "To sort the array", "To find the maximum element"],
    "context": "A prefix sum array helps in constant-time computation of subarray sums by storing cumulative sums.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Data Structures",
    "subtopic": "Arrays & Strings",
    "question": "What is the space complexity of reversing a string in-place?",
    "correct_answer": "O(1)",
    "distractors": ["O(n)", "O(log n)", "O(n^2)"],
    "context": "In-place reversal modifies the string without using extra space, resulting in O(1) space complexity.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Data Structures",
    "subtopic": "Linked Lists",
    "question": "Which linked list allows traversal in both forward and backward directions?",
    "correct_answer": "Doubly linked list",
    "distractors": ["Singly linked list", "Circular linked list", "Unrolled linked list"],
    "context": "A doubly linked list contains two pointers per node: one pointing to the next node and one to the previous.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Data Structures",
    "subtopic": "Linked Lists",
    "question": "What is a major advantage of a circular linked list over a singly linked list?",
    "correct_answer": "It allows continuous traversal from the last node to the first",
    "distractors": ["It uses less memory", "It stores data in a sorted manner", "It eliminates null pointers"],
    "context": "In a circular linked list, the last node points to the first, enabling continuous iteration.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Data Structures",
    "subtopic": "Linked Lists",
    "question": "Which operation is more efficient in a linked list than in an array?",
    "correct_answer": "Insertion at the beginning",
    "distractors": ["Random access", "Sorting", "Binary search"],
    "context": "Linked lists allow constant-time insertion at the head, unlike arrays that require shifting elements.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Data Structures",
    "subtopic": "Linked Lists",
    "question": "Which data structure is commonly used to detect cycles in a linked list?",
    "correct_answer": "Floyd’s cycle-finding algorithm",
    "distractors": ["Depth-first search", "Breadth-first search", "QuickSort"],
    "context": "Floyd’s cycle-finding algorithm (also known as the Tortoise and Hare algorithm) efficiently detects loops in a linked list.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Data Structures",
    "subtopic": "Linked Lists",
    "question": "Which condition signifies the end of traversal in a non-circular singly linked list?",
    "correct_answer": "The next pointer is null",
    "distractors": ["The current pointer is null", "The head becomes null", "All nodes have been visited twice"],
    "context": "In a singly linked list, the last node’s next pointer is null, indicating the end of the list.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Arrays & Strings",
    "subtopic": "Array Manipulation",
    "question": "What is the time complexity of finding the maximum element in an unsorted array of size n?",
    "correct_answer": "O(n)",
    "distractors": ["O(log n)", "O(n log n)", "O(1)"],
    "context": "Finding the maximum element in an unsorted array requires examining each element at least once, making it a linear operation with O(n) time complexity.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Arrays & Strings",
    "subtopic": "Two Pointer Technique",
    "question": "Which approach is most efficient for checking if a string is a palindrome?",
    "correct_answer": "Two pointers from both ends",
    "distractors": ["Reverse the string and compare", "Use recursion with substring", "Convert to array and sort"],
    "context": "The two-pointer technique checks palindromes by comparing characters from both ends moving inward, achieving O(n) time and O(1) space complexity.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Arrays & Strings",
    "subtopic": "Sliding Window",
    "question": "What technique is optimal for finding the maximum sum of k consecutive elements in an array?",
    "correct_answer": "Sliding window technique",
    "distractors": ["Nested loops for all subarrays", "Dynamic programming", "Divide and conquer"],
    "context": "Sliding window technique maintains a window of k elements and slides it across the array, updating the sum incrementally for O(n) time complexity.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Linked Lists",
    "subtopic": "Singly Linked List",
    "question": "What is the time complexity of inserting a node at the beginning of a singly linked list?",
    "correct_answer": "O(1)",
    "distractors": ["O(n)", "O(log n)", "O(n²)"],
    "context": "Inserting at the beginning of a singly linked list requires only updating the new node's next pointer and the head pointer, making it a constant time operation.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Linked Lists",
    "subtopic": "Cycle Detection",
    "question": "Which algorithm is used to detect a cycle in a linked list with O(1) space complexity?",
    "correct_answer": "Floyd's Cycle Detection (Tortoise and Hare)",
    "distractors": ["Breadth-first search", "Using a hash set", "Recursive traversal"],
    "context": "Floyd's Cycle Detection algorithm uses two pointers moving at different speeds to detect cycles in O(n) time and O(1) space complexity.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Linked Lists",
    "subtopic": "Doubly Linked List",
    "question": "What is the main advantage of a doubly linked list over a singly linked list?",
    "correct_answer": "Bidirectional traversal capability",
    "distractors": ["Lower memory usage", "Faster insertion at head", "Better cache locality"],
    "context": "Doubly linked lists have both next and previous pointers, allowing traversal in both directions, which is useful for operations like deletion of a given node.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Linked Lists",
    "subtopic": "Circular Linked List",
    "question": "In a circular singly linked list, what condition indicates we've traversed the entire list?",
    "correct_answer": "Current pointer equals the starting pointer",
    "distractors": ["Current pointer becomes null", "Next pointer becomes null", "Previous pointer becomes null"],
    "context": "In circular linked lists, the last node points back to the first node, so traversal completion is detected when we return to the starting position.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Arrays & Strings",
    "subtopic": "String Matching",
    "question": "What is the time complexity of the KMP (Knuth-Morris-Pratt) string matching algorithm?",
    "correct_answer": "O(n + m)",
    "distractors": ["O(n * m)", "O(n²)", "O(m log n)"],
    "context": "KMP algorithm preprocesses the pattern to create a failure function, enabling linear time string matching where n is text length and m is pattern length.",
    "difficulty": "advanced",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Linked Lists",
    "subtopic": "List Reversal",
    "question": "What is the space complexity of reversing a singly linked list iteratively?",
    "correct_answer": "O(1)",
    "distractors": ["O(n)", "O(log n)", "O(n²)"],
    "context": "Iterative reversal of a linked list uses only a constant number of pointers (previous, current, next) regardless of list size, achieving O(1) space complexity.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Arrays & Strings",
    "subtopic": "Dynamic Programming on Arrays",
    "question": "Which approach solves the maximum subarray problem (Kadane's algorithm) optimally?",
    "correct_answer": "Single pass with running maximum",
    "distractors": ["Divide and conquer recursion", "Nested loops checking all subarrays", "Binary search on answer"],
    "context": "Kadane's algorithm finds maximum subarray sum in O(n) time by maintaining current sum and global maximum, resetting current sum when it becomes negative.",
    "difficulty": "advanced",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Data Structures",
    "subtopic": "Arrays & Strings",
    "question": "Given an array of integers `nums` and an integer `target`, return indices of the two numbers such that they add up to `target`. Assume that each input would have exactly one solution, and you may not use the same element twice. What is the optimal time complexity for solving this problem?",
    "correct_answer": "O(n)",
    "distractors": [
      "O(n^2)",
      "O(log n)",
      "O(n log n)"
    ],
    "context": "This problem, often called 'Two Sum', can be efficiently solved using a hash map to store previously seen numbers and their indices, allowing for constant time lookups for the complement.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Data Structures",
    "subtopic": "Arrays & Strings",
    "question": "Which of the following operations has an average time complexity of O(1) for adding an element to a dynamically sized array (like `ArrayList` in Java or `std::vector` in C++)?",
    "correct_answer": "Appending an element at the end",
    "distractors": [
      "Inserting an element at the beginning",
      "Inserting an element in the middle",
      "Deleting an element from the beginning"
    ],
    "context": "Appending an element to a dynamic array typically involves adding it to the next available slot. While resizing operations can take O(n), these are amortized over many appends, resulting in an average O(1) complexity.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Data Structures",
    "subtopic": "Arrays & Strings",
    "question": "What is the most efficient way to check if a given string is a palindrome, ignoring cases and non-alphanumeric characters?",
    "correct_answer": "Using two pointers, one from the start and one from the end, moving inwards while sanitizing characters.",
    "distractors": [
      "Reversing the string and comparing it to the original.",
      "Converting the string to a character array and iterating with a single pointer.",
      "Using a stack to store characters and then comparing."
    ],
    "context": "The two-pointer approach avoids the overhead of creating a new reversed string and allows for in-place comparison after necessary character sanitization.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Data Structures",
    "subtopic": "Arrays & Strings",
    "question": "Given a string `s`, find the length of the longest substring without repeating characters. If `s = \"abcabcbb\"`, what is the expected output?",
    "correct_answer": "3",
    "distractors": [
      "1",
      "2",
      "4"
    ],
    "context": "This problem can be solved using a sliding window approach with a hash set to keep track of characters in the current window. For \"abcabcbb\", the longest substrings without repeating characters are \"abc\", \"bca\", \"cab\", and \"cbb\", all of length 3.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Data Structures",
    "subtopic": "Arrays & Strings",
    "question": "Which sorting algorithm is typically used in `Arrays.sort()` for primitive types in Java and offers an average time complexity of O(n log n)?",
    "correct_answer": "Dual-Pivot Quicksort",
    "distractors": [
      "Merge Sort",
      "Heap Sort",
      "Insertion Sort"
    ],
    "context": "Java's `Arrays.sort()` for primitive types leverages Dual-Pivot Quicksort, which is an optimized version of Quicksort, providing excellent average-case performance.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Data Structures",
    "subtopic": "Linked Lists (Singly, Doubly, Circular)",
    "question": "What is the primary advantage of a Doubly Linked List over a Singly Linked List?",
    "correct_answer": "Ability to traverse in both forward and backward directions.",
    "distractors": [
      "Reduced memory consumption per node.",
      "Faster insertion at the beginning of the list.",
      "Simplified deletion of a specific node without a reference to its previous node."
    ],
    "context": "A Doubly Linked List node contains pointers to both its next and previous nodes, enabling bidirectional traversal, which is not possible with a Singly Linked List.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Data Structures",
    "subtopic": "Linked Lists (Singly, Doubly, Circular)",
    "question": "When detecting a cycle in a Singly Linked List using the 'Floyd's Cycle-Finding Algorithm' (tortoise and hare), what condition signifies the presence of a cycle?",
    "correct_answer": "The fast pointer meets the slow pointer.",
    "distractors": [
      "The fast pointer reaches the end of the list (null).",
      "The slow pointer reaches the end of the list (null).",
      "The fast pointer moves twice as many steps as the slow pointer."
    ],
    "context": "Floyd's Cycle-Finding Algorithm uses two pointers, one moving at twice the speed of the other. If a cycle exists, the faster pointer will eventually 'catch up' to the slower pointer within the cycle.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Data Structures",
    "subtopic": "Linked Lists (Singly, Doubly, Circular)",
    "question": "Consider a Circular Linked List. If you have a pointer to any node in the list, how can you efficiently find the head of the list?",
    "correct_answer": "By traversing the list until you reach the node whose 'next' pointer points back to the starting node.",
    "distractors": [
      "It is impossible to find the head without a direct reference in a circular linked list.",
      "By reversing the entire linked list until the last node becomes the new head.",
      "By iterating through the list and finding the node with the smallest data value."
    ],
    "context": "In a Circular Linked List, the last node points back to the first node (head). Therefore, traversing from any node until you encounter the node that points back to your starting node's address will lead you to the head (if you know the head reference or can identify it by some unique property, otherwise, you can only detect the start of the cycle). More precisely, if you know a unique property of the head, or if it's a sentinel node. For a generic circular linked list, you'd iterate until you find the node whose 'next' pointer is the current node when starting the traversal (if you loop back to the *same* node you started from). A common way is to advance one step, then traverse until you meet the first node again, making the node after that the head if that's the only reference to the head. A simpler method is to assume the starting node *is* the head, and traverse until you come back to it. For this question, assuming we are trying to find the original start of the list in a specific common implementation where the 'last' node points to the 'first' node (head), iterating until the 'next' of current node is the 'head' itself is correct.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Data Structures",
    "subtopic": "Linked Lists (Singly, Doubly, Circular)",
    "question": "What is the time complexity for deleting a node from a Singly Linked List, given only a pointer to the node to be deleted (and not its previous node)?",
    "correct_answer": "O(1) if it's not the tail node, O(N) or impossible if it's the tail.",
    "distractors": [
      "O(1)",
      "O(N)",
      "O(log N)"
    ],
    "context": "If you have a pointer to the node to be deleted, you can copy the data from the next node to the current node and then delete the next node. This is O(1). However, this approach fails if the node to be deleted is the tail node, requiring a traversal from the head (O(N)) to find the previous node or making it impossible without a pointer to the previous node.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Data Structures",
    "subtopic": "Linked Lists (Singly, Doubly, Circular)",
    "question": "Which type of linked list is most suitable for implementing a Least Recently Used (LRU) cache, and why?",
    "correct_answer": "Doubly Linked List, because it allows O(1) removal from anywhere and O(1) addition to the front/back.",
    "distractors": [
      "Singly Linked List, for its simplicity and memory efficiency.",
      "Circular Linked List, for easy traversal back to the head.",
      "Arrays, for their O(1) access time."
    ],
    "context": "An LRU cache typically uses a combination of a hash map and a Doubly Linked List. The hash map provides O(1) lookup for keys, and the Doubly Linked List allows for O(1) updates to the recency of items (moving them to the front) and O(1) eviction of the least recently used item from the tail.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Data Structures",
    "subtopic": "Stacks & Queues",
    "question": "Which data structure follows the Last-In-First-Out (LIFO) principle?",
    "correct_answer": "Stack",
    "distractors": ["Queue", "Heap", "Linked List"],
    "context": "A stack is a linear data structure that follows the LIFO principle where the last inserted element is accessed first.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Data Structures",
    "subtopic": "Stacks & Queues",
    "question": "What is the primary use of a priority queue?",
    "correct_answer": "To process elements based on priority rather than insertion order",
    "distractors": ["To store elements in sorted order", "To allow constant-time insertion", "To maintain FIFO access"],
    "context": "A priority queue allows elements with higher priority to be dequeued before others, irrespective of their insertion order.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Data Structures",
    "subtopic": "Stacks & Queues",
    "question": "Which algorithm typically uses a queue to find the shortest path in an unweighted graph?",
    "correct_answer": "Breadth-First Search (BFS)",
    "distractors": ["Depth-First Search (DFS)", "Dijkstra's Algorithm", "Bellman-Ford Algorithm"],
    "context": "BFS uses a queue to explore nodes level-by-level and is ideal for finding shortest paths in unweighted graphs.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Data Structures",
    "subtopic": "Stacks & Queues",
    "question": "Which operation is used to add an element to the top of a stack?",
    "correct_answer": "Push",
    "distractors": ["Enqueue", "Insert", "Append"],
    "context": "The push operation adds a new element to the top of the stack in constant time.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Data Structures",
    "subtopic": "Stacks & Queues",
    "question": "Which data structure is most suitable for implementing a browser's backtracking feature?",
    "correct_answer": "Stack",
    "distractors": ["Queue", "Heap", "Hash Table"],
    "context": "A stack is suitable for browser backtracking as it allows returning to the most recently visited page using the LIFO mechanism.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Data Structures",
    "subtopic": "Trees & Graphs",
    "question": "Which traversal visits the root node before its child nodes?",
    "correct_answer": "Preorder traversal",
    "distractors": ["Inorder traversal", "Postorder traversal", "Level-order traversal"],
    "context": "Preorder traversal of a tree processes the root first, then recursively visits the left and right subtrees.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Data Structures",
    "subtopic": "Trees & Graphs",
    "question": "Which algorithm is commonly used to detect cycles in an undirected graph?",
    "correct_answer": "Union-Find",
    "distractors": ["Dijkstra’s algorithm", "Floyd-Warshall", "DFS with topological sort"],
    "context": "Union-Find (Disjoint Set Union) is an efficient technique for cycle detection in undirected graphs by tracking connected components.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Data Structures",
    "subtopic": "Trees & Graphs",
    "question": "In a binary search tree (BST), where are values smaller than the root typically located?",
    "correct_answer": "In the left subtree",
    "distractors": ["In the right subtree", "At the root", "Randomly across the tree"],
    "context": "In a BST, all nodes in the left subtree of a node contain smaller values than the node itself.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Data Structures",
    "subtopic": "Trees & Graphs",
    "question": "What is the time complexity of searching in a balanced binary search tree?",
    "correct_answer": "O(log n)",
    "distractors": ["O(n)", "O(1)", "O(n log n)"],
    "context": "A balanced BST reduces the height of the tree to log(n), allowing efficient search operations in O(log n) time.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Data Structures",
    "subtopic": "Trees & Graphs",
    "question": "Which graph traversal algorithm is best suited for exploring all reachable nodes from a source in the least number of steps?",
    "correct_answer": "Breadth-First Search (BFS)",
    "distractors": ["Depth-First Search", "Kruskal's algorithm", "Prim’s algorithm"],
    "context": "BFS explores nodes level by level and ensures the shortest path from the source to all other reachable nodes in an unweighted graph.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Stacks & Queues",
    "subtopic": "Stack Operations",
    "question": "What is the time complexity of push and pop operations in a stack implemented using arrays?",
    "correct_answer": "O(1)",
    "distractors": ["O(n)", "O(log n)", "O(n²)"],
    "context": "Stack operations push and pop in array implementation only require updating the top pointer and accessing the top element, making both operations constant time O(1).",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Stacks & Queues",
    "subtopic": "Queue Implementation",
    "question": "Which data structure is most efficient for implementing a queue with O(1) enqueue and dequeue operations?",
    "correct_answer": "Circular array with head and tail pointers",
    "distractors": ["Simple array with single pointer", "Stack with two operations", "Singly linked list with head pointer only"],
    "context": "Circular arrays with head and tail pointers enable O(1) enqueue and dequeue by maintaining separate pointers for front and rear, avoiding the need to shift elements.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Stacks & Queues",
    "subtopic": "Priority Queue",
    "question": "What is the time complexity of extracting the minimum element from a min-heap?",
    "correct_answer": "O(log n)",
    "distractors": ["O(1)", "O(n)", "O(n log n)"],
    "context": "Extracting minimum from a min-heap requires removing the root and re-heapifying by bubbling down, which takes O(log n) time due to the tree height.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Stacks & Queues",
    "subtopic": "Stack Applications",
    "question": "Which approach is optimal for checking balanced parentheses in an expression?",
    "correct_answer": "Stack-based matching algorithm",
    "distractors": ["Counter-based approach", "Recursive string parsing", "Two-pointer technique"],
    "context": "Stack-based algorithms handle balanced parentheses by pushing opening brackets and matching them with closing brackets in LIFO order, ensuring proper nesting.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Stacks & Queues",
    "subtopic": "Heap Operations",
    "question": "What is the time complexity of building a heap from an unsorted array using the bottom-up approach?",
    "correct_answer": "O(n)",
    "distractors": ["O(n log n)", "O(n²)", "O(log n)"],
    "context": "Bottom-up heap construction starts from the last non-leaf node and heapifies downward, achieving O(n) complexity due to the mathematical property that most nodes are near the leaves.",
    "difficulty": "advanced",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Trees & Graphs",
    "subtopic": "Binary Tree Traversal",
    "question": "Which traversal method visits the root node between visiting left and right subtrees?",
    "correct_answer": "Inorder traversal",
    "distractors": ["Preorder traversal", "Postorder traversal", "Level-order traversal"],
    "context": "Inorder traversal follows the pattern: left subtree, root, right subtree, making it useful for binary search trees to retrieve elements in sorted order.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Trees & Graphs",
    "subtopic": "Binary Search Tree",
    "question": "What is the worst-case time complexity for search operations in an unbalanced binary search tree?",
    "correct_answer": "O(n)",
    "distractors": ["O(log n)", "O(1)", "O(n log n)"],
    "context": "In worst-case scenarios, an unbalanced BST degenerates into a linear structure (like a linked list), making search operations O(n) instead of the optimal O(log n).",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Trees & Graphs",
    "subtopic": "Graph Traversal",
    "question": "Which graph traversal algorithm guarantees finding the shortest path in an unweighted graph?",
    "correct_answer": "Breadth-First Search (BFS)",
    "distractors": ["Depth-First Search (DFS)", "Dijkstra's algorithm", "A* search algorithm"],
    "context": "BFS explores nodes level by level from the source, ensuring that when a node is first visited, it's reached via the shortest path in unweighted graphs.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Trees & Graphs",
    "subtopic": "Graph Algorithms",
    "question": "What is the time complexity of Dijkstra's algorithm using a binary heap?",
    "correct_answer": "O((V + E) log V)",
    "distractors": ["O(V²)", "O(E log V)", "O(V log E)"],
    "context": "Dijkstra's algorithm with binary heap performs V extract-min operations and up to E decrease-key operations, each taking O(log V) time, resulting in O((V + E) log V) complexity.",
    "difficulty": "advanced",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Trees & Graphs",
    "subtopic": "Tree Properties",
    "question": "In a complete binary tree with n nodes, what is the height of the tree?",
    "correct_answer": "O(log n)",
    "distractors": ["O(n)", "O(n log n)", "O(√n)"],
    "context": "A complete binary tree fills all levels except possibly the last, and the last level is filled from left to right, resulting in height O(log n) where n is the number of nodes.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Data Structures",
    "subtopic": "Stacks",
    "question": "Which of the following problems can be most efficiently solved using a stack?",
    "correct_answer": "Checking for balanced parentheses in an expression.",
    "distractors": [
      "Finding the shortest path in an unweighted graph.",
      "Implementing a First-In-First-Out (FIFO) queue.",
      "Sorting an array of integers in ascending order."
    ],
    "context": "Stacks are Last-In-First-Out (LIFO) data structures, making them ideal for problems that require processing items in reverse order of their arrival, such as validating nested structures like parentheses.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Data Structures",
    "subtopic": "Queues",
    "question": "In a scenario where tasks need to be processed in the order they arrive, which data structure would be the most appropriate choice?",
    "correct_answer": "Queue",
    "distractors": [
      "Stack",
      "Heap",
      "Hash Map"
    ],
    "context": "Queues operate on a First-In-First-Out (FIFO) principle, meaning the first element added to the queue will be the first one to be removed, which is essential for maintaining processing order based on arrival.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Data Structures",
    "subtopic": "Priority Queues / Heaps",
    "question": "Which data structure is typically used to implement a Priority Queue?",
    "correct_answer": "Heap (specifically a Min-Heap or Max-Heap)",
    "distractors": [
      "Stack",
      "Queue",
      "Hash Table"
    ],
    "context": "Priority Queues are abstract data types where each element has a priority, and elements with higher priority are served before elements with lower priority. Heaps provide efficient (logarithmic time) insertion and extraction of the minimum or maximum element, making them ideal for this purpose.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Data Structures",
    "subtopic": "Stacks & Queues",
    "question": "What is the time complexity of pushing an element onto a stack implemented using a dynamic array (like `std::vector` in C++ or `ArrayList` in Java), assuming amortized analysis?",
    "correct_answer": "O(1)",
    "distractors": [
      "O(N)",
      "O(log N)",
      "O(N log N)"
    ],
    "context": "While occasional resizing of the underlying array might take O(N) time, over a sequence of push operations, the average or amortized time complexity for each push operation is O(1).",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Data Structures",
    "subtopic": "Heaps",
    "question": "Given an array of integers, what is the most efficient way to find the Kth largest element?",
    "correct_answer": "Using a Min-Heap of size K.",
    "distractors": [
      "Sorting the array and accessing the Kth element.",
      "Using a Max-Heap and extracting K elements.",
      "Iterating through the array K times to find the Kth largest."
    ],
    "context": "To find the Kth largest element efficiently, a Min-Heap of size K can be used. Iterate through the array; if the current element is greater than the heap's minimum, remove the minimum and insert the current element. The root of the heap will be the Kth largest element after processing all elements.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Data Structures",
    "subtopic": "Trees",
    "question": "Which tree traversal algorithm visits the left subtree, then the root, and then the right subtree?",
    "correct_answer": "In-order traversal",
    "distractors": [
      "Pre-order traversal",
      "Post-order traversal",
      "Level-order traversal"
    ],
    "context": "In-order traversal for a Binary Search Tree (BST) visits nodes in ascending order of their values. The sequence is typically Left -> Root -> Right.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Data Structures",
    "subtopic": "Graphs",
    "question": "What is the most suitable algorithm for finding the shortest path between two nodes in an unweighted graph?",
    "correct_answer": "Breadth-First Search (BFS)",
    "distractors": [
      "Depth-First Search (DFS)",
      "Dijkstra's Algorithm",
      "Prim's Algorithm"
    ],
    "context": "BFS explores all the neighbor nodes at the current depth level before moving on to nodes at the next depth level. This characteristic guarantees that the first time a node is visited, it is reached via the shortest path from the source node in an unweighted graph.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Data Structures",
    "subtopic": "Trees",
    "question": "What is the maximum number of nodes at level `L` (where root is at level 0) in a perfect binary tree?",
    "correct_answer": "2^L",
    "distractors": [
      "L",
      "2L",
      "2^(L+1) - 1"
    ],
    "context": "In a perfect binary tree, each node has exactly two children, except for the leaves. At level 0, there is 1 node (2^0). At level 1, there are 2 nodes (2^1). At level 2, there are 4 nodes (2^2), and so on. Thus, at level L, there are 2^L nodes.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Data Structures",
    "subtopic": "Graphs",
    "question": "Which algorithm is typically used to find the Minimum Spanning Tree (MST) in a connected, undirected graph with weighted edges?",
    "correct_answer": "Kruskal's Algorithm or Prim's Algorithm",
    "distractors": [
      "Breadth-First Search (BFS)",
      "Depth-First Search (DFS)",
      "Floyd-Warshall Algorithm"
    ],
    "context": "Both Kruskal's and Prim's algorithms are greedy algorithms commonly used to find the Minimum Spanning Tree (MST) of a graph. Kruskal's adds edges in increasing order of weights as long as they don't form a cycle, while Prim's grows a tree from a starting vertex.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Data Structures",
    "subtopic": "Trees",
    "question": "When would a self-balancing binary search tree (like AVL Tree or Red-Black Tree) be preferred over a regular Binary Search Tree?",
    "correct_answer": "When frequent insertions and deletions might lead to skewed trees and O(N) worst-case time complexity.",
    "distractors": [
      "When memory efficiency is the absolute top priority.",
      "When only searching operations are performed frequently.",
      "When the data is always inserted in sorted order."
    ],
    "context": "Regular Binary Search Trees can degrade to O(N) time complexity for operations like search, insertion, and deletion if they become skewed. Self-balancing BSTs maintain a balanced height, guaranteeing O(log N) worst-case time complexity for these operations, even with frequent updates.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Data Structures",
    "subtopic": "Binary Tree",
    "question": "Which traversal method of a binary tree visits the left child, then the root, then the right child?",
    "correct_answer": "In-order traversal",
    "distractors": ["Pre-order traversal", "Post-order traversal", "Level-order traversal"],
    "context": "In-order traversal of a binary tree processes nodes in the order: left child, root, and then right child.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Data Structures",
    "subtopic": "Binary Search Tree",
    "question": "Which property distinguishes a binary search tree from a general binary tree?",
    "correct_answer": "Left child values are less than the parent, right child values are greater",
    "distractors": ["Every node has two children", "Only leaf nodes hold values", "All values are unique"],
    "context": "A binary search tree (BST) maintains an ordering where the left child of a node contains values less than the node, and the right child contains greater values.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Data Structures",
    "subtopic": "Binary Search Tree",
    "question": "Which operation in a binary search tree has an average-case time complexity of O(log n)?",
    "correct_answer": "Search",
    "distractors": ["Insertion", "Traversal", "Balancing"],
    "context": "The average-case time complexity for searching in a binary search tree is O(log n) when the tree is balanced.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Data Structures",
    "subtopic": "Binary Tree",
    "question": "Which type of binary tree guarantees all levels are fully filled except possibly the last, which is filled left to right?",
    "correct_answer": "Complete binary tree",
    "distractors": ["Full binary tree", "Perfect binary tree", "Balanced binary tree"],
    "context": "A complete binary tree ensures that all levels are filled, and the last level is filled from left to right.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Data Structures",
    "subtopic": "Binary Tree",
    "question": "What is the maximum number of nodes at level 'l' in a binary tree?",
    "correct_answer": "2^l",
    "distractors": ["l", "2*l", "l^2"],
    "context": "In a binary tree, the number of nodes at level l can be at most 2^l, starting from level 0 at the root.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Data Structures",
    "subtopic": "Balanced Trees",
    "question": "What property must an AVL tree maintain after every insertion or deletion?",
    "correct_answer": "The height difference between left and right subtrees of any node is at most 1",
    "distractors": ["All nodes must be full", "All leaves must be at the same level", "Each node must have two children"],
    "context": "An AVL tree is a self-balancing binary search tree that maintains a height difference of at most 1 between left and right subtrees of every node.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Data Structures",
    "subtopic": "Balanced Trees",
    "question": "In a Red-Black Tree, which of the following is a guaranteed property?",
    "correct_answer": "Every path from root to null has the same number of black nodes",
    "distractors": ["All red nodes must have red children", "All leaf nodes must be black", "The root must be a leaf"],
    "context": "A key property of Red-Black Trees is that every path from root to null must contain the same number of black nodes to ensure balanced height.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Data Structures",
    "subtopic": "Balanced Trees",
    "question": "Which operation can cause a Red-Black Tree to perform rotations to maintain balance?",
    "correct_answer": "Insertion",
    "distractors": ["Traversal", "Search", "In-order display"],
    "context": "Insertion in a Red-Black Tree can lead to imbalance and trigger rotations to preserve its properties.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Data Structures",
    "subtopic": "Balanced Trees",
    "question": "Which rotation is used in an AVL tree to fix a Left-Right imbalance?",
    "correct_answer": "Left rotation followed by right rotation",
    "distractors": ["Single right rotation", "Single left rotation", "Double left rotation"],
    "context": "A Left-Right case in AVL trees requires a double rotation: first left on the child, then right on the parent.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Data Structures",
    "subtopic": "Binary Search Tree",
    "question": "What happens if a binary search tree becomes unbalanced due to insertions in sorted order?",
    "correct_answer": "It degenerates into a linked list",
    "distractors": ["It converts into a heap", "It increases in width but not height", "It self-balances automatically"],
    "context": "A BST becomes skewed (like a linked list) when elements are inserted in strictly sorted order without balancing.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Binary Trees",
    "subtopic": "Tree Structure",
    "question": "What is the maximum number of nodes at level k in a binary tree?",
    "correct_answer": "2^k",
    "distractors": ["k", "2k", "k^2"],
    "context": "In a binary tree, each node can have at most 2 children, so at level k there can be at most 2^k nodes, where the root is at level 0.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Binary Search Trees",
    "subtopic": "BST Operations",
    "question": "What property must be maintained when inserting a node into a Binary Search Tree?",
    "correct_answer": "Left subtree values < root < right subtree values",
    "distractors": ["Tree must remain complete", "Tree height must be minimized", "All leaf nodes at same level"],
    "context": "BST insertion maintains the ordering property where all nodes in the left subtree have values less than the root, and all nodes in the right subtree have values greater than the root.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Binary Trees",
    "subtopic": "Tree Validation",
    "question": "Which approach is most efficient to validate if a binary tree is a valid Binary Search Tree?",
    "correct_answer": "Inorder traversal with range checking",
    "distractors": ["Level-order traversal", "Checking each node with its immediate children only", "Preorder traversal with sorting"],
    "context": "Inorder traversal with range checking validates BST by ensuring each node's value falls within the valid range determined by its ancestors, providing O(n) time complexity.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Binary Search Trees",
    "subtopic": "Tree Operations",
    "question": "What is the time complexity of finding the kth smallest element in a BST using inorder traversal?",
    "correct_answer": "O(k)",
    "distractors": ["O(n)", "O(log n)", "O(k log n)"],
    "context": "Finding the kth smallest element using inorder traversal stops after visiting k nodes, making the time complexity O(k) since inorder traversal visits nodes in sorted order.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Binary Trees",
    "subtopic": "Tree Algorithms",
    "question": "Which algorithm is optimal for finding the Lowest Common Ancestor (LCA) of two nodes in a binary tree?",
    "correct_answer": "Bottom-up recursive approach",
    "distractors": ["Level-order traversal", "Preorder traversal with path storage", "Inorder traversal"],
    "context": "Bottom-up recursive LCA approach returns the LCA when both target nodes are found in different subtrees, achieving O(n) time and O(h) space complexity where h is tree height.",
    "difficulty": "advanced",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Balanced Trees",
    "subtopic": "AVL Trees",
    "question": "What is the maximum height difference allowed between left and right subtrees in an AVL tree?",
    "correct_answer": "1",
    "distractors": ["0", "2", "log n"],
    "context": "AVL trees maintain balance by ensuring the height difference between left and right subtrees of any node is at most 1, requiring rotations when this property is violated.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Balanced Trees",
    "subtopic": "AVL Rotations",
    "question": "Which rotation is needed when a node has a balance factor of +2 and its left child has a balance factor of -1?",
    "correct_answer": "Left-Right rotation",
    "distractors": ["Right rotation", "Left rotation", "Right-Left rotation"],
    "context": "Left-Right rotation is required for the Left-Right case where the left subtree is heavier and the left child's right subtree causes the imbalance, requiring two rotations to fix.",
    "difficulty": "advanced",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Balanced Trees",
    "subtopic": "Red-Black Trees",
    "question": "What is the maximum possible height of a Red-Black tree with n nodes?",
    "correct_answer": "2 * log(n + 1)",
    "distractors": ["log n", "n", "log(n + 1)"],
    "context": "Red-Black trees guarantee that the longest path from root to leaf is at most twice the shortest path, resulting in maximum height of 2 * log(n + 1) for n nodes.",
    "difficulty": "advanced",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Binary Search Trees",
    "subtopic": "Tree Conversion",
    "question": "What is the time complexity of converting a sorted array to a balanced BST?",
    "correct_answer": "O(n)",
    "distractors": ["O(n log n)", "O(n²)", "O(log n)"],
    "context": "Converting a sorted array to balanced BST uses divide-and-conquer approach, visiting each element exactly once to create nodes, resulting in O(n) time complexity.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Balanced Trees",
    "subtopic": "Tree Comparison",
    "question": "What is the key advantage of Red-Black trees over AVL trees?",
    "correct_answer": "Fewer rotations needed during insertions and deletions",
    "distractors": ["Better worst-case search time", "Lower memory overhead", "Simpler implementation"],
    "context": "Red-Black trees require fewer rotations during insertions and deletions compared to AVL trees because they have more relaxed balancing constraints, making them more efficient for frequent modifications.",
    "difficulty": "advanced",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Data Structures",
    "subtopic": "Binary Trees",
    "question": "Which binary tree traversal visits the root node first, then the left subtree, and finally the right subtree?",
    "correct_answer": "Pre-order traversal",
    "distractors": [
      "In-order traversal",
      "Post-order traversal",
      "Level-order traversal"
    ],
    "context": "Pre-order traversal is characterized by the sequence: Root -> Left Subtree -> Right Subtree. This traversal is often used to create a copy of the tree or to obtain an expression tree's prefix notation.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Data Structures",
    "subtopic": "Binary Search Trees",
    "question": "What property must a binary tree satisfy to be classified as a Binary Search Tree (BST)?",
    "correct_answer": "For every node, all values in its left subtree are less than its own value, and all values in its right subtree are greater than its own value.",
    "distractors": [
      "Every node has at most two children.",
      "The tree is always perfectly balanced.",
      "All leaf nodes are at the same level."
    ],
    "context": "The fundamental property of a Binary Search Tree (BST) is its ordering. This property enables efficient searching, insertion, and deletion operations with an average time complexity of O(log N).",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Data Structures",
    "subtopic": "Binary Search Trees",
    "question": "What is the worst-case time complexity for searching for an element in an unbalanced Binary Search Tree?",
    "correct_answer": "O(N)",
    "distractors": [
      "O(log N)",
      "O(N log N)",
      "O(1)"
    ],
    "context": "In the worst-case scenario, an unbalanced BST can degenerate into a structure resembling a linked list (e.g., if elements are inserted in sorted order). In such a case, searching for an element requires traversing all N nodes, leading to O(N) complexity.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Data Structures",
    "subtopic": "Balanced Trees (AVL)",
    "question": "What is the maximum permissible difference in height between the left and right subtrees of any node in an AVL tree?",
    "correct_answer": "1",
    "distractors": [
      "0",
      "2",
      "Any value, as long as it's balanced eventually"
    ],
    "context": "AVL trees are self-balancing binary search trees that maintain a strict balance factor. The 'balance factor' of a node is defined as the height of its left subtree minus the height of its right subtree, and its absolute value must be no more than 1.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Data Structures",
    "subtopic": "Binary Trees",
    "question": "Given a binary tree, if you need to print all nodes level by level starting from the root, which traversal algorithm would be most appropriate?",
    "correct_answer": "Level-order traversal (using a queue)",
    "distractors": [
      "Pre-order traversal",
      "In-order traversal",
      "Post-order traversal"
    ],
    "context": "Level-order traversal systematically explores all nodes at the current depth before moving to the next depth. A queue is typically used to manage the nodes to be visited at each level, ensuring FIFO (First-In, First-Out) processing.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Data Structures",
    "subtopic": "Balanced Trees (Red-Black)",
    "question": "Which property of a Red-Black Tree ensures that the longest path from any node to a leaf is no more than twice the length of the shortest path from that node to a leaf?",
    "correct_answer": "Every simple path from a node to a descendant leaf contains the same number of black nodes.",
    "distractors": [
      "Every node is either red or black.",
      "The root is black.",
      "If a node is red, then both its children are black."
    ],
    "context": "The 'black-height' property (Property 5 of Red-Black Trees) is crucial for maintaining the tree's balance. It guarantees that the height difference between any two paths from a node to its descendant leaves is limited, preventing severe skewness.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Data Structures",
    "subtopic": "Binary Search Trees",
    "question": "To find the successor of a node in a Binary Search Tree, what is the general approach if the node has a right child?",
    "correct_answer": "Find the minimum value in its right subtree.",
    "distractors": [
      "Find the maximum value in its left subtree.",
      "Its parent node.",
      "Its left child."
    ],
    "context": "The successor of a node in a BST is the next largest node. If a node has a right child, the smallest node in its right subtree will be its immediate successor.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Data Structures",
    "subtopic": "Balanced Trees (AVL, Red-Black)",
    "question": "Why are rotations (e.g., single or double rotations) necessary operations in self-balancing binary search trees like AVL and Red-Black trees?",
    "correct_answer": "To restore the balance property after an insertion or deletion.",
    "distractors": [
      "To change the order of elements within the tree.",
      "To increase the overall height of the tree.",
      "To convert a binary tree into a linked list."
    ],
    "context": "Rotations are fundamental operations in balanced BSTs. They are used to re-arrange nodes in the tree to maintain the balance property (e.g., AVL's height balance, Red-Black's black-height) whenever an insertion or deletion operation would otherwise violate it, ensuring logarithmic time complexity.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Data Structures",
    "subtopic": "Binary Trees",
    "question": "In a full binary tree, if `L` is the number of leaf nodes, what is the total number of internal nodes?",
    "correct_answer": "L - 1",
    "distractors": [
      "L",
      "2L - 1",
      "L + 1"
    ],
    "context": "A full binary tree is a tree in which every node has either zero or two children. In such a tree, the number of internal nodes (non-leaf nodes) is always one less than the number of leaf nodes.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Data Structures",
    "subtopic": "Balanced Trees (Red-Black)",
    "question": "Compared to an AVL tree, what is a typical advantage of a Red-Black Tree?",
    "correct_answer": "Fewer rotations are generally required during insertions and deletions.",
    "distractors": [
      "Stricter height balance, leading to faster worst-case search times.",
      "Simpler implementation due to fewer balancing rules.",
      "Lower memory overhead per node."
    ],
    "context": "While AVL trees maintain a stricter balance (height difference of at most 1), Red-Black trees are less strictly balanced. This looser balance often results in fewer rotations on average for insertion and deletion operations, making them slightly faster for update-heavy workloads, though AVL trees might offer slightly better worst-case search times.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Data Structures",
    "subtopic": "Trie",
    "question": "Which data structure is most efficient for storing and searching a large set of strings with shared prefixes?",
    "correct_answer": "Trie",
    "distractors": ["Hash Table", "Binary Search Tree", "Stack"],
    "context": "A Trie, or prefix tree, is highly efficient for searching and storing strings that share common prefixes.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Data Structures",
    "subtopic": "Trie",
    "question": "In a Trie, what does each edge typically represent?",
    "correct_answer": "A character",
    "distractors": ["A word", "A node", "A hash value"],
    "context": "In a Trie, each edge between nodes represents a single character in the stored strings.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Data Structures",
    "subtopic": "Trie",
    "question": "What is the worst-case time complexity to search a word of length 'L' in a Trie?",
    "correct_answer": "O(L)",
    "distractors": ["O(log L)", "O(n)", "O(1)"],
    "context": "Searching in a Trie involves following 'L' character edges, making the complexity O(L), where L is the length of the word.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Data Structures",
    "subtopic": "Trie",
    "question": "Which application commonly uses Tries for performance optimization?",
    "correct_answer": "Autocomplete systems",
    "distractors": ["Sorting algorithms", "File compression", "Pathfinding algorithms"],
    "context": "Autocomplete features use Tries to efficiently match and suggest completions based on input prefixes.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Data Structures",
    "subtopic": "Trie",
    "question": "Which condition indicates the end of a valid word in a Trie?",
    "correct_answer": "A boolean flag is set to true at a node",
    "distractors": ["The node has no children", "The character is a space", "The node has a special key"],
    "context": "In a Trie, a node contains a flag that is set to true when it marks the end of a valid word.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Data Structures",
    "subtopic": "Graphs",
    "question": "Which graph traversal technique uses a queue to explore nodes level by level?",
    "correct_answer": "Breadth-First Search (BFS)",
    "distractors": ["Depth-First Search (DFS)", "Topological Sort", "Dijkstra's Algorithm"],
    "context": "BFS uses a queue and explores all neighbors of a node before moving to the next level.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Data Structures",
    "subtopic": "Graphs",
    "question": "Which data structure is typically used to implement Depth-First Search (DFS)?",
    "correct_answer": "Stack",
    "distractors": ["Queue", "Heap", "Linked List"],
    "context": "DFS uses a stack (either explicitly or via recursion) to backtrack and explore nodes deeply.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Data Structures",
    "subtopic": "Graphs",
    "question": "Which representation is most space-efficient for sparse graphs?",
    "correct_answer": "Adjacency list",
    "distractors": ["Adjacency matrix", "Edge list", "Incidence matrix"],
    "context": "For sparse graphs, adjacency lists store only the connected nodes, reducing memory usage compared to matrices.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Data Structures",
    "subtopic": "Graphs",
    "question": "What is the time complexity of BFS for a graph with V vertices and E edges?",
    "correct_answer": "O(V + E)",
    "distractors": ["O(V^2)", "O(VE)", "O(log V + E)"],
    "context": "BFS visits each vertex and edge once, leading to a time complexity of O(V + E).",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Data Structures",
    "subtopic": "Graphs",
    "question": "Which traversal is best suited for detecting cycles in a directed graph?",
    "correct_answer": "DFS with recursion stack",
    "distractors": ["BFS with visited array", "Topological sort", "Minimum spanning tree"],
    "context": "Cycle detection in directed graphs is efficiently done using DFS with a recursion stack to track visited paths.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Trie (Prefix Trees)",
    "subtopic": "Trie Operations",
    "question": "What is the time complexity of searching for a word of length m in a Trie?",
    "correct_answer": "O(m)",
    "distractors": ["O(n)", "O(log n)", "O(m log n)"],
    "context": "Searching in a Trie requires traversing from root to leaf following the characters of the word, making the time complexity O(m) where m is the length of the word being searched.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Trie (Prefix Trees)",
    "subtopic": "Trie Applications",
    "question": "Which operation is most efficiently solved using a Trie data structure?",
    "correct_answer": "Finding all words with a given prefix",
    "distractors": ["Finding the longest word", "Sorting words alphabetically", "Finding anagrams of a word"],
    "context": "Tries excel at prefix-based operations because all words sharing a prefix share the same path from root, allowing efficient traversal to find all words with a given prefix in O(p + k) time where p is prefix length and k is number of matching words.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Trie (Prefix Trees)",
    "subtopic": "Memory Optimization",
    "question": "What technique can reduce memory usage in a Trie when dealing with sparse character sets?",
    "correct_answer": "Using HashMap instead of fixed-size arrays for children",
    "distractors": ["Compressing common prefixes", "Using linked lists for children", "Storing only leaf nodes"],
    "context": "Using HashMap for children nodes instead of fixed-size arrays (like size 26 for alphabets) saves memory in sparse tries by only storing existing child nodes, reducing space complexity for nodes with few children.",
    "difficulty": "advanced",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Trie (Prefix Trees)",
    "subtopic": "Trie Construction",
    "question": "What is the space complexity of building a Trie from n words with average length m?",
    "correct_answer": "O(n * m)",
    "distractors": ["O(n)", "O(m)", "O(n + m)"],
    "context": "Building a Trie from n words with average length m requires creating nodes for each character position, resulting in O(n * m) space complexity in the worst case when words share no common prefixes.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Graph representations and traversals",
    "subtopic": "Graph Representation",
    "question": "Which graph representation is more space-efficient for sparse graphs?",
    "correct_answer": "Adjacency List",
    "distractors": ["Adjacency Matrix", "Edge List", "Incidence Matrix"],
    "context": "Adjacency lists use O(V + E) space and are more efficient for sparse graphs where E << V², while adjacency matrices always use O(V²) space regardless of edge density.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Graph representations and traversals",
    "subtopic": "DFS Applications",
    "question": "Which problem is best solved using Depth-First Search (DFS)?",
    "correct_answer": "Detecting cycles in a directed graph",
    "distractors": ["Finding shortest path in unweighted graph", "Level-order traversal", "Finding minimum spanning tree"],
    "context": "DFS is optimal for cycle detection in directed graphs using color-coding (white, gray, black) where encountering a gray node during traversal indicates a back edge and thus a cycle.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Graph representations and traversals",
    "subtopic": "BFS Applications",
    "question": "What is the time complexity of BFS traversal in a graph with V vertices and E edges?",
    "correct_answer": "O(V + E)",
    "distractors": ["O(V²)", "O(E log V)", "O(V log E)"],
    "context": "BFS visits each vertex once and examines each edge once when using adjacency list representation, resulting in O(V + E) time complexity where V is vertices and E is edges.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Graph representations and traversals",
    "subtopic": "Graph Algorithms",
    "question": "Which traversal method is used in topological sorting of a Directed Acyclic Graph (DAG)?",
    "correct_answer": "DFS with post-order processing",
    "distractors": ["BFS with queue", "DFS with pre-order processing", "Random traversal"],
    "context": "Topological sorting uses DFS with post-order processing where nodes are added to result after exploring all descendants, ensuring dependencies are processed before dependents in the final ordering.",
    "difficulty": "advanced",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Trie (Prefix Trees)",
    "subtopic": "Advanced Trie Operations",
    "question": "What is the most efficient approach to implement auto-complete functionality?",
    "correct_answer": "Trie with frequency-based ranking at nodes",
    "distractors": ["Sorted array with binary search", "Hash table with prefix matching", "Suffix tree with pattern matching"],
    "context": "Trie with frequency-based ranking stores word frequencies at nodes, enabling efficient auto-complete by traversing to prefix node and returning most frequent completions in O(p + k log k) time where p is prefix length and k is number of suggestions.",
    "difficulty": "advanced",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Graph representations and traversals",
    "subtopic": "Connected Components",
    "question": "Which algorithm efficiently finds the number of connected components in an undirected graph?",
    "correct_answer": "DFS or BFS from unvisited nodes",
    "distractors": ["Dijkstra's algorithm", "Kruskal's algorithm", "Floyd-Warshall algorithm"],
    "context": "Finding connected components uses DFS or BFS starting from each unvisited node, incrementing component count for each new traversal start, achieving O(V + E) time complexity.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Data Structures",
    "subtopic": "Trie (Prefix Trees)",
    "question": "Which of the following is the most suitable application for a Trie (Prefix Tree)?",
    "correct_answer": "Autocomplete and spell checking systems.",
    "distractors": [
      "Storing unique integers for fast lookup.",
      "Finding the shortest path in a weighted graph.",
      "Managing a priority queue of tasks."
    ],
    "context": "Tries are tree-like data structures that store a dynamic set of strings where the keys are usually strings. They are highly optimized for operations involving prefixes, making them excellent for tasks like autocomplete, spell checkers, and IP routing.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Data Structures",
    "subtopic": "Graph Representations",
    "question": "Which graph representation is generally preferred for a sparse graph (a graph with relatively few edges compared to the number of vertices) to save memory?",
    "correct_answer": "Adjacency List",
    "distractors": [
      "Adjacency Matrix",
      "Incidence Matrix",
      "Edge List (without explicit adjacency)"
    ],
    "context": "An Adjacency List represents a graph as an array of linked lists where the index of the array represents a vertex, and each linked list stores the vertices adjacent to the vertex. For sparse graphs, it uses less memory than an Adjacency Matrix because it only stores existing edges.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Data Structures",
    "subtopic": "Graph Traversals (BFS)",
    "question": "Which graph traversal algorithm uses a queue to explore vertices layer by layer, guaranteeing the shortest path in an unweighted graph?",
    "correct_answer": "Breadth-First Search (BFS)",
    "distractors": [
      "Depth-First Search (DFS)",
      "Dijkstra's Algorithm",
      "Prim's Algorithm"
    ],
    "context": "BFS explores all the neighbor nodes at the current depth level before moving on to nodes at the next depth level. This level-by-level exploration, facilitated by a queue, ensures that the first time a node is visited, it is reached via the shortest path from the source node in an unweighted graph.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Data Structures",
    "subtopic": "Graph Traversals (DFS)",
    "question": "Which data structure is inherently used to implement Depth-First Search (DFS) iteratively?",
    "correct_answer": "Stack",
    "distractors": [
      "Queue",
      "Hash Map",
      "Priority Queue"
    ],
    "context": "DFS explores as far as possible along each branch before backtracking. This behavior naturally aligns with the Last-In-First-Out (LIFO) property of a stack, whether implemented recursively (using the call stack) or iteratively.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Data Structures",
    "subtopic": "Trie (Prefix Trees)",
    "question": "What is the time complexity to search for a word of length `M` in a Trie containing `N` total nodes, assuming the alphabet size is `K`?",
    "correct_answer": "O(M)",
    "distractors": [
      "O(N)",
      "O(M * K)",
      "O(log M)"
    ],
    "context": "Searching for a word in a Trie involves traversing the tree based on the characters of the word. The number of nodes visited is directly proportional to the length of the word `M`, making the search time complexity O(M), regardless of the total number of words in the Trie.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Data Structures",
    "subtopic": "Graph Representations",
    "question": "For a dense graph (a graph with a large number of edges relative to its vertices), which representation typically offers faster `hasEdge(u, v)` (checking if an edge exists between two vertices) operations?",
    "correct_answer": "Adjacency Matrix",
    "distractors": [
      "Adjacency List",
      "Edge List",
      "Incidence List"
    ],
    "context": "An Adjacency Matrix represents a graph using a 2D array where `matrix[u][v]` is 1 if an edge exists between `u` and `v`, and 0 otherwise. This allows for O(1) checking of edge existence, which is highly efficient for dense graphs where many edges exist.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Data Structures",
    "subtopic": "Graph Traversals (DFS)",
    "question": "Which of the following problems is typically solved using Depth-First Search (DFS) for its efficiency in exploring a path fully before backtracking?",
    "correct_answer": "Detecting cycles in a graph.",
    "distractors": [
      "Finding the shortest path in a weighted graph.",
      "Finding connected components in an undirected graph (can be done with both, but BFS is often simpler for this specific application or DFS if path matters).",
      "Building a minimum spanning tree."
    ],
    "context": "DFS is well-suited for cycle detection because if a DFS encounters an already visited node that is still in the current recursion stack (for directed graphs) or is an already visited ancestor (for undirected graphs), a cycle is present.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Data Structures",
    "subtopic": "Trie (Prefix Trees)",
    "question": "What is the primary space complexity concern when implementing a Trie for a large set of strings, especially if the alphabet size (K) is large?",
    "correct_answer": "The large number of pointers (K per node) which can lead to high memory consumption.",
    "distractors": [
      "The string data stored at each leaf node.",
      "The overhead of storing `isEnd` boolean flags.",
      "The depth of the tree."
    ],
    "context": "Each node in a Trie typically has an array or a hash map of pointers (or references) to its children, one for each character in the alphabet. If the alphabet size (K) is large, and the Trie is sparse (many children pointers are null), this can lead to significant memory wastage, a common challenge in Trie implementations.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Data Structures",
    "subtopic": "Graph Traversals (BFS)",
    "question": "When performing a BFS on a graph, how can you reconstruct the shortest path from a source node to a target node?",
    "correct_answer": "By maintaining a `parent` map (or array) during traversal, and then backtracking from the target to the source.",
    "distractors": [
      "By simply counting the levels traversed by the BFS.",
      "By using a stack to store all visited nodes in order.",
      "It is not possible to reconstruct the path with standard BFS alone."
    ],
    "context": "During a BFS, when a node `v` is visited from `u`, you can record that `u` is the parent of `v`. After BFS completes, to reconstruct the shortest path to a target, you simply follow the parent pointers from the target node back to the source node.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Data Structures",
    "subtopic": "Graph Representations",
    "question": "For a graph with `V` vertices and `E` edges, what is the time complexity of adding an edge to an Adjacency List representation?",
    "correct_answer": "O(1) (average case for `std::list` or similar, or O(degree) for sorted lists)",
    "distractors": [
      "O(V)",
      "O(E)",
      "O(V^2)"
    ],
    "context": "Adding an edge (u, v) to an adjacency list usually involves adding 'v' to the adjacency list of 'u' (and 'u' to 'v' for undirected graphs). If the adjacency lists are implemented with dynamic arrays or linked lists, appending takes amortized O(1). If maintaining sorted lists, it would be O(degree) for insertion. For simplicity and general understanding, O(1) average case is the most common answer.",
    "difficulty": "advance",
    "type": "mcq"
  },
   {
    "goal": "Amazon SDE",
    "topic": "Data Structures",
    "subtopic": "Hash Tables",
    "question": "What is the average-case time complexity for inserting an element into a hash table?",
    "correct_answer": "O(1)",
    "distractors": ["O(log n)", "O(n)", "O(n log n)"],
    "context": "Hash tables provide average-case constant time complexity, O(1), for insertion, lookup, and deletion using hash functions.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Data Structures",
    "subtopic": "Hash Tables",
    "question": "Which of the following is a common method for handling collisions in hash tables?",
    "correct_answer": "Chaining",
    "distractors": ["Merging", "Partitioning", "Dividing"],
    "context": "Chaining is a collision resolution technique where each slot in a hash table contains a list to store multiple items.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Data Structures",
    "subtopic": "Hash Tables",
    "question": "What causes collisions in a hash table?",
    "correct_answer": "Multiple keys hash to the same index",
    "distractors": ["The table is too small", "Keys are too large", "The keys are not unique"],
    "context": "Collisions occur when two distinct keys hash to the same index in a hash table.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Data Structures",
    "subtopic": "Hash Tables",
    "question": "Why are hash tables not suitable for ordered data retrieval?",
    "correct_answer": "They do not maintain key order",
    "distractors": ["They have slow insertion", "They duplicate keys", "They use too much memory"],
    "context": "Hash tables do not maintain the order of keys, making them inefficient for ordered data access.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Data Structures",
    "subtopic": "Hash Tables",
    "question": "Which operation benefits most from using a hash map?",
    "correct_answer": "Fast key-value lookup",
    "distractors": ["In-order traversal", "Sorting values", "Storing duplicate keys"],
    "context": "Hash maps are designed for fast key-based retrieval of values, offering near O(1) performance for lookups.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Data Structures",
    "subtopic": "Disjoint Set",
    "question": "Which two operations are fundamental in the disjoint-set data structure?",
    "correct_answer": "Find and Union",
    "distractors": ["Insert and Delete", "Merge and Split", "Push and Pop"],
    "context": "The disjoint-set (Union-Find) structure relies on two operations: Find (to determine set membership) and Union (to combine sets).",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Data Structures",
    "subtopic": "Disjoint Set",
    "question": "What is the main purpose of path compression in the Union-Find algorithm?",
    "correct_answer": "To flatten the structure of the tree for faster future operations",
    "distractors": ["To compress duplicate values", "To store paths in memory", "To remove unused nodes"],
    "context": "Path compression is used in Union-Find to flatten trees, ensuring that each node points directly to the root, thus optimizing future Find operations.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Data Structures",
    "subtopic": "Disjoint Set",
    "question": "What data structure is commonly used to implement Union-Find?",
    "correct_answer": "Array",
    "distractors": ["Linked list", "Queue", "Stack"],
    "context": "Union-Find is typically implemented using arrays to track the parent of each element and manage set representatives efficiently.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Data Structures",
    "subtopic": "Disjoint Set",
    "question": "Which algorithm commonly uses disjoint sets for cycle detection?",
    "correct_answer": "Kruskal’s algorithm",
    "distractors": ["Prim’s algorithm", "Floyd-Warshall", "Bellman-Ford"],
    "context": "Kruskal’s algorithm uses the disjoint-set structure to detect cycles while building a minimum spanning tree.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Data Structures",
    "subtopic": "Disjoint Set",
    "question": "What does the Find operation return in a disjoint set?",
    "correct_answer": "The representative (root) of the set",
    "distractors": ["The size of the set", "The index of the element", "The number of subsets"],
    "context": "The Find operation locates the representative of the set, typically the root of the tree in Union-Find.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Hash Tables / Hash Maps",
    "subtopic": "Hash Operations",
    "question": "What is the average time complexity of insertion, deletion, and search operations in a hash table?",
    "correct_answer": "O(1)",
    "distractors": ["O(log n)", "O(n)", "O(n log n)"],
    "context": "Hash tables provide O(1) average time complexity for basic operations by using hash functions to directly compute the index location, assuming uniform distribution and proper load factor management.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Hash Tables / Hash Maps",
    "subtopic": "Collision Resolution",
    "question": "Which collision resolution technique maintains O(1) average time complexity even with high load factors?",
    "correct_answer": "Separate chaining with linked lists",
    "distractors": ["Linear probing", "Quadratic probing", "Double hashing"],
    "context": "Separate chaining maintains O(1) average complexity by storing colliding elements in linked lists at each bucket, while open addressing methods like probing can degrade to O(n) with high load factors.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Hash Tables / Hash Maps",
    "subtopic": "Hash Function Design",
    "question": "What is the primary goal of a good hash function?",
    "correct_answer": "Uniform distribution of keys across buckets",
    "distractors": ["Minimize memory usage", "Maximize collision frequency", "Ensure sorted order of elements"],
    "context": "A good hash function distributes keys uniformly across available buckets to minimize collisions and maintain efficient O(1) operations, avoiding clustering that degrades performance.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Hash Tables / Hash Maps",
    "subtopic": "Load Factor",
    "question": "What typically happens when a hash table's load factor exceeds 0.75?",
    "correct_answer": "Rehashing with larger table size",
    "distractors": ["Compression of existing entries", "Switching to binary search", "Converting to linked list"],
    "context": "When load factor exceeds 0.75, hash tables typically trigger rehashing by creating a larger table (usually double size) and redistributing all elements to maintain efficient O(1) operations.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Hash Tables / Hash Maps",
    "subtopic": "Hash Applications",
    "question": "Which problem is most efficiently solved using a hash map approach?",
    "correct_answer": "Two Sum problem - finding pair with target sum",
    "distractors": ["Finding kth largest element", "Binary tree traversal", "Graph shortest path"],
    "context": "Two Sum problem is optimally solved using hash maps by storing seen numbers and their indices, allowing O(n) solution by checking if (target - current) exists in the map for each element.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Disjoint Set (Union-Find)",
    "subtopic": "Union-Find Operations",
    "question": "What is the time complexity of Find operation in Union-Find with path compression?",
    "correct_answer": "O(α(n)) - inverse Ackermann function",
    "distractors": ["O(1)", "O(log n)", "O(n)"],
    "context": "Union-Find with path compression achieves O(α(n)) amortized time complexity for Find operations, where α(n) is the inverse Ackermann function, which is practically constant for all realistic input sizes.",
    "difficulty": "advanced",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Disjoint Set (Union-Find)",
    "subtopic": "Union by Rank",
    "question": "What optimization technique prevents Union-Find trees from becoming skewed?",
    "correct_answer": "Union by rank (or size)",
    "distractors": ["Path compression only", "Random union order", "Breadth-first union"],
    "context": "Union by rank optimization attaches the tree with smaller rank to the root of the tree with larger rank during union operations, preventing degenerate linear chains and maintaining logarithmic height.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Disjoint Set (Union-Find)",
    "subtopic": "Union-Find Applications",
    "question": "Which algorithm commonly uses Union-Find data structure for cycle detection?",
    "correct_answer": "Kruskal's Minimum Spanning Tree algorithm",
    "distractors": ["Dijkstra's shortest path", "Bellman-Ford algorithm", "Floyd-Warshall algorithm"],
    "context": "Kruskal's MST algorithm uses Union-Find to detect cycles when adding edges: if two vertices are already connected (same set), adding the edge would create a cycle, so the edge is rejected.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Disjoint Set (Union-Find)",
    "subtopic": "Connected Components",
    "question": "What is the time complexity of determining if two nodes are in the same connected component using Union-Find?",
    "correct_answer": "O(α(n)) - inverse Ackermann function",
    "distractors": ["O(1)", "O(log n)", "O(n)"],
    "context": "Determining connectivity between two nodes requires two Find operations to get their root representatives, each taking O(α(n)) time with path compression, making the total complexity O(α(n)).",
    "difficulty": "advanced",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Hash Tables / Hash Maps",
    "subtopic": "Advanced Hashing",
    "question": "What is the main advantage of consistent hashing over traditional hashing in distributed systems?",
    "correct_answer": "Minimal data movement when nodes are added/removed",
    "distractors": ["Better collision resolution", "Faster lookup operations", "Lower memory usage"],
    "context": "Consistent hashing minimizes data redistribution in distributed systems by ensuring that when nodes are added or removed, only a small fraction of keys need to be moved, unlike traditional hashing which may require rehashing all data.",
    "difficulty": "advanced",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Data Structures",
    "subtopic": "Hash Tables / Hash Maps",
    "question": "Which of the following operations has an average time complexity of O(1) in a well-implemented hash table?",
    "correct_answer": "Insertion, Deletion, and Search",
    "distractors": [
      "Sorting elements within the table.",
      "Finding the maximum or minimum element.",
      "Resizing the table (when hash collisions are frequent)."
    ],
    "context": "Hash tables provide average constant time complexity (O(1)) for fundamental operations like insertion, deletion, and search, provided a good hash function and collision resolution strategy are used to distribute keys evenly.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Data Structures",
    "subtopic": "Hash Tables / Hash Maps",
    "question": "What is the primary purpose of a hash function in a hash table?",
    "correct_answer": "To map keys to indices in an array (buckets).",
    "distractors": [
      "To sort the keys in ascending order.",
      "To count the frequency of elements.",
      "To balance the tree structure within each bucket."
    ],
    "context": "A hash function takes a key and computes an integer index, or 'hash code', within a fixed range (the size of the underlying array), determining which 'bucket' the key-value pair will be stored in.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Data Structures",
    "subtopic": "Disjoint Set (Union-Find)",
    "question": "What is the main goal of the `find` operation in a Disjoint Set Union (DSU) data structure?",
    "correct_answer": "To determine the representative (root) of the set to which an element belongs.",
    "distractors": [
      "To merge two sets into one.",
      "To check if an element exists in the data structure.",
      "To count the number of elements in a set."
    ],
    "context": "The `find` operation in DSU traverses up the parent pointers from a given element until it reaches the root node, which serves as the representative of its set.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Data Structures",
    "subtopic": "Hash Tables / Hash Maps",
    "question": "In a hash table, what is 'collision resolution by chaining'?",
    "correct_answer": "Storing all elements that hash to the same bucket in a linked list at that bucket.",
    "distractors": [
      "Probing for the next empty slot in the array if a bucket is occupied.",
      "Overwriting existing elements when a collision occurs.",
      "Using a secondary hash function to find a new bucket."
    ],
    "context": "Collision resolution by chaining is a common technique where each 'bucket' of the hash table acts as a pointer to the head of a linked list. All key-value pairs that hash to the same bucket are added to this linked list.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Data Structures",
    "subtopic": "Disjoint Set (Union-Find)",
    "question": "What is the purpose of 'path compression' optimization in a Disjoint Set Union (DSU) data structure?",
    "correct_answer": "To flatten the tree structure during a `find` operation by directly connecting nodes to the root.",
    "distractors": [
      "To reduce the number of disjoint sets.",
      "To optimize the `union` operation by balancing tree heights.",
      "To quickly locate a specific element in the data structure."
    ],
    "context": "Path compression is an optimization technique applied during the `find` operation. As the `find` operation traverses up to the root, it changes the parent pointer of each visited node to point directly to the root, effectively flattening the tree and speeding up future `find` operations on those nodes.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Data Structures",
    "subtopic": "Hash Tables / Hash Maps",
    "question": "Which of the following scenarios is most likely to cause the worst-case O(N) time complexity for a `get` operation in a hash table?",
    "correct_answer": "A poorly designed hash function causing all keys to hash to the same bucket.",
    "distractors": [
      "Inserting keys in sorted order.",
      "Having a very large number of buckets.",
      "Deleting elements frequently from the hash table."
    ],
    "context": "The worst-case scenario for a hash table occurs when all or most keys collide and map to the same bucket. In such a case, operations like `get` would degenerate to traversing a linked list (for chaining) or probing through many slots (for open addressing), resulting in O(N) complexity.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Data Structures",
    "subtopic": "Disjoint Set (Union-Find)",
    "question": "When both 'path compression' and 'union by rank/size' optimizations are applied, what is the amortized time complexity for `find` and `union` operations in a Disjoint Set Union (DSU) data structure with `N` elements?",
    "correct_answer": "Nearly O(1) or O(α(N)) (inverse Ackermann function)",
    "distractors": [
      "O(log N)",
      "O(N)",
      "O(N log N)"
    ],
    "context": "With both path compression and union by rank (or size) optimizations, the amortized time complexity for both `find` and `union` operations becomes extremely close to O(1), often denoted as O(α(N)), where α is the inverse Ackermann function, which grows extraordinarily slowly.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Data Structures",
    "subtopic": "Hash Tables / Hash Maps",
    "question": "In the context of hash tables, what is the 'load factor', and how does it relate to performance?",
    "correct_answer": "It's the ratio of number of elements to number of buckets; a high load factor can increase collision frequency and degrade performance.",
    "distractors": [
      "It's the average length of linked lists in chaining; a low load factor indicates poor memory utilization.",
      "It's the maximum number of probes for open addressing; a high load factor guarantees faster access.",
      "It's the percentage of occupied memory; a low load factor signifies efficient memory usage."
    ],
    "context": "The load factor (number of entries / number of buckets) is a critical metric for hash table performance. As the load factor increases, the probability of collisions rises, which can lead to longer chain traversals or more probes, thus increasing the average time complexity of operations.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Data Structures",
    "subtopic": "Disjoint Set (Union-Find)",
    "question": "Which of the following problems can be efficiently solved using a Disjoint Set Union (DSU) data structure?",
    "correct_answer": "Detecting cycles in an undirected graph during Kruskal's MST algorithm.",
    "distractors": [
      "Finding the shortest path in a weighted graph.",
      "Sorting an array of integers.",
      "Implementing an LRU cache."
    ],
    "context": "DSU is ideal for problems involving grouping elements into sets and performing union or find operations. In Kruskal's algorithm, DSU is used to efficiently check if adding an edge would create a cycle (by checking if its endpoints already belong to the same set) and to merge components.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Data Structures",
    "subtopic": "Hash Tables / Hash Maps",
    "question": "When designing a hash function for string keys, what is a crucial characteristic to aim for to minimize collisions and maintain good performance?",
    "correct_answer": "It should distribute keys uniformly across the hash table's buckets.",
    "distractors": [
      "It should always produce the same hash value for different keys.",
      "It should only consider the first character of the string.",
      "It should be computationally very expensive to ensure security."
    ],
    "context": "A good hash function is paramount for a hash table's efficiency. Its primary goal is to minimize collisions by distributing keys as evenly as possible among the available buckets, thus ensuring that the average length of chains (or probe sequences) remains short.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Data Structures",
    "subtopic": "Sorting and Searching",
    "question": "Which sorting algorithm uses a divide-and-conquer strategy by selecting a pivot element?",
    "correct_answer": "Quick Sort",
    "distractors": ["Bubble Sort", "Selection Sort", "Heap Sort"],
    "context": "Quick Sort is a divide-and-conquer algorithm that partitions the array around a pivot to recursively sort the subarrays.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Data Structures",
    "subtopic": "Sorting and Searching",
    "question": "Which sorting algorithm guarantees O(n log n) time in all cases, including worst case?",
    "correct_answer": "Merge Sort",
    "distractors": ["Quick Sort", "Heap Sort", "Insertion Sort"],
    "context": "Merge Sort consistently performs in O(n log n) time due to its balanced divide-and-conquer approach.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Data Structures",
    "subtopic": "Sorting and Searching",
    "question": "Which sorting algorithm builds a binary heap to sort elements?",
    "correct_answer": "Heap Sort",
    "distractors": ["Quick Sort", "Merge Sort", "Shell Sort"],
    "context": "Heap Sort constructs a binary heap and repeatedly extracts the maximum element to sort the array.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Data Structures",
    "subtopic": "Sorting and Searching",
    "question": "Which sorting algorithm is unstable by default unless modified?",
    "correct_answer": "Heap Sort",
    "distractors": ["Merge Sort", "Counting Sort", "Insertion Sort"],
    "context": "Heap Sort is not a stable sort because it may change the relative order of equal elements unless explicitly handled.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Data Structures",
    "subtopic": "Sorting and Searching",
    "question": "Which algorithm is preferred for sorting large datasets in external memory?",
    "correct_answer": "Merge Sort",
    "distractors": ["Heap Sort", "Quick Sort", "Selection Sort"],
    "context": "Merge Sort is preferred for external sorting because it accesses data sequentially and performs well with disk I/O.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Data Structures",
    "subtopic": "Sorting and Searching",
    "question": "Which sorting algorithm has the best average-case performance among those listed?",
    "correct_answer": "Quick Sort",
    "distractors": ["Bubble Sort", "Insertion Sort", "Selection Sort"],
    "context": "Quick Sort is typically faster than other simple sorting algorithms due to its efficient average-case time of O(n log n).",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Data Structures",
    "subtopic": "Sorting and Searching",
    "question": "What is the worst-case time complexity of Quick Sort?",
    "correct_answer": "O(n^2)",
    "distractors": ["O(n log n)", "O(n)", "O(log n)"],
    "context": "Quick Sort has a worst-case time complexity of O(n^2) when the pivot selections are unbalanced, such as in sorted input.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Data Structures",
    "subtopic": "Sorting and Searching",
    "question": "Which search algorithm requires a sorted array and works by repeatedly dividing the range in half?",
    "correct_answer": "Binary Search",
    "distractors": ["Linear Search", "Depth-First Search", "Breadth-First Search"],
    "context": "Binary Search is efficient for sorted arrays and works by halving the search space in each step, yielding O(log n) time complexity.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Data Structures",
    "subtopic": "Sorting and Searching",
    "question": "Which condition is necessary for binary search to function correctly?",
    "correct_answer": "The input array must be sorted",
    "distractors": ["The array must contain unique elements", "The array must be a heap", "The array must be balanced"],
    "context": "Binary search relies on a sorted array to eliminate half of the remaining elements at each step.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Data Structures",
    "subtopic": "Sorting and Searching",
    "question": "Which sorting algorithm is not based on comparisons?",
    "correct_answer": "Counting Sort",
    "distractors": ["Quick Sort", "Merge Sort", "Heap Sort"],
    "context": "Counting Sort is a non-comparison based sorting algorithm suitable for small ranges of integers and runs in linear time.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Sorting and Searching",
    "subtopic": "Binary Search",
    "question": "What is the time complexity of binary search on a sorted array of n elements?",
    "correct_answer": "O(log n)",
    "distractors": ["O(n)", "O(1)", "O(n log n)"],
    "context": "Binary search eliminates half of the search space in each iteration by comparing the target with the middle element, resulting in O(log n) time complexity for sorted arrays.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Quick Sort",
    "subtopic": "Algorithm Complexity",
    "question": "What is the worst-case time complexity of Quick Sort?",
    "correct_answer": "O(n²)",
    "distractors": ["O(n log n)", "O(n)", "O(log n)"],
    "context": "Quick Sort's worst-case occurs when the pivot is always the smallest or largest element, causing unbalanced partitions that degrade performance to O(n²) with n-1 recursive calls.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Merge Sort",
    "subtopic": "Algorithm Properties",
    "question": "What is the key advantage of Merge Sort over Quick Sort?",
    "correct_answer": "Guaranteed O(n log n) time complexity in all cases",
    "distractors": ["Better space complexity", "In-place sorting capability", "Faster average-case performance"],
    "context": "Merge Sort consistently divides the array into equal halves and merges them, guaranteeing O(n log n) time complexity regardless of input distribution, unlike Quick Sort's O(n²) worst case.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Heap Sort",
    "subtopic": "Heap Operations",
    "question": "What is the time complexity of the heapify operation in Heap Sort?",
    "correct_answer": "O(log n)",
    "distractors": ["O(1)", "O(n)", "O(n log n)"],
    "context": "Heapify operation restores heap property by bubbling an element down to its correct position, traversing at most the height of the heap which is O(log n) for n elements.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Quick Sort",
    "subtopic": "Pivot Selection",
    "question": "Which pivot selection strategy helps achieve better average-case performance in Quick Sort?",
    "correct_answer": "Random pivot selection",
    "distractors": ["Always first element", "Always last element", "Always middle element"],
    "context": "Random pivot selection reduces the probability of worst-case scenarios by avoiding predictable patterns, leading to expected O(n log n) performance even on partially sorted or adversarial inputs.",
    "difficulty": "advanced",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Sorting and Searching",
    "subtopic": "Search Variations",
    "question": "Which approach is optimal for finding the first occurrence of a target in a sorted array with duplicates?",
    "correct_answer": "Modified binary search checking left boundary",
    "distractors": ["Linear search from beginning", "Standard binary search", "Binary search with random pivot"],
    "context": "Modified binary search for first occurrence continues searching in the left half even after finding the target, ensuring the leftmost occurrence is found while maintaining O(log n) complexity.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Merge Sort",
    "subtopic": "Space Complexity",
    "question": "What is the space complexity of the standard Merge Sort algorithm?",
    "correct_answer": "O(n)",
    "distractors": ["O(1)", "O(log n)", "O(n log n)"],
    "context": "Merge Sort requires O(n) auxiliary space to store temporary arrays during the merge process, as it needs to copy elements from both halves before merging them back.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Heap Sort",
    "subtopic": "Algorithm Analysis",
    "question": "What is the total time complexity of building a heap from an unsorted array followed by extracting all elements in sorted order?",
    "correct_answer": "O(n log n)",
    "distractors": ["O(n)", "O(log n)", "O(n²)"],
    "context": "Building heap takes O(n) time using bottom-up approach, but extracting n elements each requiring O(log n) heapify operations results in total O(n log n) complexity for complete Heap Sort.",
    "difficulty": "advanced",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Sorting and Searching",
    "subtopic": "Algorithm Selection",
    "question": "Which sorting algorithm is most suitable when memory usage must be minimized?",
    "correct_answer": "Heap Sort",
    "distractors": ["Merge Sort", "Quick Sort", "Counting Sort"],
    "context": "Heap Sort operates in-place with O(1) auxiliary space complexity while guaranteeing O(n log n) time complexity, making it optimal when memory constraints are critical unlike Merge Sort's O(n) space requirement.",
    "difficulty": "advanced",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Quick Sort",
    "subtopic": "Optimization Techniques",
    "question": "What optimization technique improves Quick Sort performance for small subarrays?",
    "correct_answer": "Switching to Insertion Sort for small subarrays",
    "distractors": ["Using more recursive calls", "Increasing pivot options", "Adding more comparison operations"],
    "context": "Hybrid Quick Sort switches to Insertion Sort when subarray size falls below a threshold (typically 10-20 elements) because Insertion Sort has lower overhead and performs better on small datasets despite O(n²) complexity.",
    "difficulty": "advanced",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Data Structures",
    "subtopic": "Searching",
    "question": "For a sorted array of `N` elements, what is the most efficient algorithm to find a specific element?",
    "correct_answer": "Binary Search",
    "distractors": [
      "Linear Search",
      "Hash Table lookup",
      "Depth-First Search"
    ],
    "context": "Binary Search is a highly efficient algorithm for finding an item from a sorted list of items. It repeatedly divides the search interval in half. If the value of the search key is less than the item in the middle of the interval, narrow the interval to the lower half. Otherwise, narrow it to the upper half.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Data Structures",
    "subtopic": "Quick Sort",
    "question": "In Quick Sort, what is the worst-case time complexity, and when does it typically occur?",
    "correct_answer": "O(N^2), when the pivot selection consistently results in highly unbalanced partitions (e.g., already sorted array).",
    "distractors": [
      "O(N log N), always.",
      "O(N), when the array has duplicate elements.",
      "O(N^2), when the array is randomly shuffled."
    ],
    "context": "Quick Sort's worst-case time complexity of O(N^2) arises when the pivot selection repeatedly yields partitions where one sub-array is empty or contains only one element, leading to a degenerate case similar to bubble sort. This often happens if the array is already sorted or reverse-sorted and a naive pivot (e.g., first or last element) is chosen.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Data Structures",
    "subtopic": "Merge Sort",
    "question": "Which of the following sorting algorithms is known for being a stable sort and having a guaranteed O(N log N) time complexity in all cases (best, average, worst)?",
    "correct_answer": "Merge Sort",
    "distractors": [
      "Quick Sort",
      "Heap Sort",
      "Insertion Sort"
    ],
    "context": "Merge Sort is a divide-and-conquer algorithm that consistently provides O(N log N) time complexity due to its balanced division and merging steps. It's also a stable sorting algorithm, meaning it preserves the relative order of equal elements.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Data Structures",
    "subtopic": "Heap Sort",
    "question": "Heap Sort is an in-place sorting algorithm. What data structure does it primarily use to perform the sorting?",
    "correct_answer": "Binary Heap",
    "distractors": [
      "Binary Search Tree",
      "Hash Table",
      "Queue"
    ],
    "context": "Heap Sort works by first building a Max-Heap (or Min-Heap) from the input array. Then, it repeatedly extracts the maximum (or minimum) element from the heap and places it at the end (or beginning) of the sorted portion of the array. The array itself serves as the underlying storage for the heap, making it in-place.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Data Structures",
    "subtopic": "Sorting",
    "question": "What is the typical auxiliary space complexity of Merge Sort?",
    "correct_answer": "O(N)",
    "distractors": [
      "O(1)",
      "O(log N)",
      "O(N log N)"
    ],
    "context": "Merge Sort requires O(N) auxiliary space because it needs a temporary array of size N during the merging step to combine the sorted sub-arrays. This is one of its drawbacks compared to in-place sorts like Quick Sort or Heap Sort.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Data Structures",
    "subtopic": "Quick Sort",
    "question": "What is the key operation in Quick Sort that divides the array into two sub-arrays?",
    "correct_answer": "Partitioning",
    "distractors": [
      "Merging",
      "Heapifying",
      "Swapping"
    ],
    "context": "The partitioning step in Quick Sort arranges elements around a chosen 'pivot' such that all elements less than the pivot come before it, and all elements greater than the pivot come after it. This places the pivot in its final sorted position.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Data Structures",
    "subtopic": "Heap Sort",
    "question": "The `heapify` operation, crucial for Heap Sort, typically takes what time complexity to maintain the heap property after an element is inserted or deleted from the root of a heap with `N` elements?",
    "correct_answer": "O(log N)",
    "distractors": [
      "O(1)",
      "O(N)",
      "O(N log N)"
    ],
    "context": "The `heapify` operation (or `sift-down` / `percolate-down`) restores the heap property by moving an element down the tree along a path from the root to a leaf, which takes logarithmic time proportional to the height of the heap (log N).",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Data Structures",
    "subtopic": "Sorting",
    "question": "Which of the following sorting algorithms is generally considered the fastest in practice for large, randomly ordered datasets, despite its worst-case O(N^2) complexity?",
    "correct_answer": "Quick Sort",
    "distractors": [
      "Merge Sort",
      "Heap Sort",
      "Bubble Sort"
    ],
    "context": "Despite its O(N^2) worst-case, Quick Sort's average-case O(N log N) performance, combined with its in-place nature and good constant factors, often makes it the fastest practical choice for sorting large, randomly ordered datasets due to cache efficiency and fewer data movements.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Data Structures",
    "subtopic": "Sorting",
    "question": "When considering external sorting (sorting data that doesn't fit in memory), which algorithm is typically preferred and why?",
    "correct_answer": "Merge Sort, due to its sequential access patterns, which are efficient for disk I/O.",
    "distractors": [
      "Quick Sort, because of its in-place nature.",
      "Heap Sort, as it builds a heap iteratively.",
      "Bubble Sort, for its simplicity."
    ],
    "context": "External sorting algorithms are designed for datasets too large to fit into RAM. Merge Sort's divide-and-conquer strategy naturally breaks the data into smaller chunks, sorts them, and then merges them. The merging process involves sequential reads and writes, which is highly efficient for disk I/O operations, unlike Quick Sort's random access patterns.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Data Structures",
    "subtopic": "Sorting",
    "question": "Which sorting algorithm's performance is least affected by the initial order of elements in the array (e.g., sorted, reverse-sorted, random)?",
    "correct_answer": "Merge Sort",
    "distractors": [
      "Quick Sort",
      "Insertion Sort",
      "Bubble Sort"
    ],
    "context": "Merge Sort's divide-and-conquer approach ensures that its O(N log N) time complexity holds true consistently across best, average, and worst-case scenarios, making its performance very predictable regardless of the input array's initial order.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Data Structures",
    "subtopic": "Binary Search",
    "question": "Which condition must be met to apply binary search on an array?",
    "correct_answer": "The array must be sorted",
    "distractors": ["The array must contain unique elements", "The array must be reversed", "The array must be a max heap"],
    "context": "Binary search requires the input array to be sorted in order to correctly eliminate half of the elements each step.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Data Structures",
    "subtopic": "Binary Search",
    "question": "What is the time complexity of binary search on a sorted array?",
    "correct_answer": "O(log n)",
    "distractors": ["O(n)", "O(n log n)", "O(1)"],
    "context": "Binary search halves the search space with each step, resulting in O(log n) time complexity for sorted arrays.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Data Structures",
    "subtopic": "Binary Search",
    "question": "Which binary search variant is used to find the first occurrence of a duplicate value?",
    "correct_answer": "Lower bound",
    "distractors": ["Upper bound", "Standard binary search", "Linear search"],
    "context": "Lower bound binary search helps find the first position where a target value appears in a sorted list with duplicates.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Data Structures",
    "subtopic": "Binary Search",
    "question": "Which binary search modification can help find the square root of a number without using sqrt()?",
    "correct_answer": "Binary search on the value range",
    "distractors": ["Standard binary search", "Modified DFS", "Ternary search"],
    "context": "Binary search can be applied to numerical ranges to find values like square roots by narrowing down potential candidates.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Data Structures",
    "subtopic": "Binary Search",
    "question": "Which condition defines the termination of a binary search loop?",
    "correct_answer": "Left index exceeds the right index",
    "distractors": ["Middle index becomes zero", "Array is fully scanned", "Element is found twice"],
    "context": "In binary search, the loop ends when the search window collapses, i.e., the left index becomes greater than the right.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Data Structures",
    "subtopic": "Recursion",
    "question": "Which property must a recursive function always include to prevent infinite loops?",
    "correct_answer": "A base case",
    "distractors": ["A print statement", "A loop inside", "An exception handler"],
    "context": "Recursion must contain a base case that defines when the recursion should stop to avoid infinite execution.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Data Structures",
    "subtopic": "Backtracking",
    "question": "Which technique is commonly used in problems like N-Queens or Sudoku solving?",
    "correct_answer": "Backtracking",
    "distractors": ["Greedy method", "Binary search", "Dynamic programming"],
    "context": "Backtracking is a trial-and-error approach used in constraint satisfaction problems such as N-Queens and Sudoku.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Data Structures",
    "subtopic": "Backtracking",
    "question": "In backtracking, what does the algorithm do after a failed choice?",
    "correct_answer": "It undoes the last decision and tries the next option",
    "distractors": ["It restarts from the beginning", "It switches to recursion", "It skips the next few steps"],
    "context": "Backtracking explores a path, and when it leads to failure, it undoes the last choice and tries an alternate path.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Data Structures",
    "subtopic": "Recursion",
    "question": "Which of the following problems is typically solved using recursion?",
    "correct_answer": "Calculating factorial of a number",
    "distractors": ["Sorting with bubble sort", "Searching with binary search", "Iterating over a queue"],
    "context": "Factorial is a classic example of a problem solved recursively, where n! = n × (n-1)! until n equals 1.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Data Structures",
    "subtopic": "Backtracking",
    "question": "Why is backtracking considered a depth-first search technique?",
    "correct_answer": "Because it explores each path fully before backtracking",
    "distractors": ["Because it uses a queue", "Because it sorts the data", "Because it visits all nodes at one level"],
    "context": "Backtracking explores one path as deep as possible before stepping back, which aligns with the depth-first strategy.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Binary Search & Variants",
    "subtopic": "Rotated Array Search",
    "question": "What is the key insight for searching in a rotated sorted array using binary search?",
    "correct_answer": "At least one half is always sorted",
    "distractors": ["Both halves are equally rotated", "The pivot point divides into equal parts", "Linear search is required for rotation"],
    "context": "In a rotated sorted array, when we divide it at any point, at least one half maintains the sorted property, allowing us to determine which half to search by comparing elements with the middle value.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Binary Search & Variants",
    "subtopic": "Search Space Reduction",
    "question": "Which technique is used to find the square root of a number using binary search?",
    "correct_answer": "Binary search on answer space from 1 to n",
    "distractors": ["Binary search on array indices", "Linear search with increment", "Recursive division by 2"],
    "context": "Finding square root using binary search involves searching in the answer space from 1 to n, where we check if mid*mid equals, exceeds, or falls short of the target number, adjusting bounds accordingly.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Binary Search & Variants",
    "subtopic": "Peak Element",
    "question": "What is the time complexity of finding a peak element in an unsorted array using binary search?",
    "correct_answer": "O(log n)",
    "distractors": ["O(n)", "O(n log n)", "O(1)"],
    "context": "Finding a peak element uses binary search by comparing middle element with its neighbors and moving toward the higher neighbor, guaranteeing a peak exists in that direction, achieving O(log n) complexity.",
    "difficulty": "advanced",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Binary Search & Variants",
    "subtopic": "Matrix Search",
    "question": "How can binary search be applied to search in a row-wise and column-wise sorted matrix?",
    "correct_answer": "Start from top-right corner and eliminate row or column",
    "distractors": ["Apply binary search on each row", "Flatten matrix and use standard binary search", "Use divide and conquer on quadrants"],
    "context": "In a row-wise and column-wise sorted matrix, starting from top-right corner allows elimination of entire row (if target < current) or column (if target > current), achieving O(m+n) complexity.",
    "difficulty": "advanced",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Binary Search & Variants",
    "subtopic": "Search Bounds",
    "question": "What modification is needed in binary search to find the last occurrence of a target in a sorted array with duplicates?",
    "correct_answer": "Continue searching in right half even after finding target",
    "distractors": ["Search from the end of array", "Use linear search after first occurrence", "Apply reverse binary search"],
    "context": "Finding last occurrence requires continuing the search in the right half even after finding the target, updating the result and searching right until the rightmost occurrence is found.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Recursion & Backtracking",
    "subtopic": "N-Queens Problem",
    "question": "What is the primary backtracking strategy used in solving the N-Queens problem?",
    "correct_answer": "Place queen row by row and backtrack on conflicts",
    "distractors": ["Place all queens first then check conflicts", "Use dynamic programming with memoization", "Generate all permutations then filter"],
    "context": "N-Queens problem uses backtracking by placing queens row by row, checking for conflicts (same column, diagonal), and backtracking when no valid position exists in current row, trying next position in previous row.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Recursion & Backtracking",
    "subtopic": "Subset Generation",
    "question": "What is the time complexity of generating all subsets of a set with n elements using backtracking?",
    "correct_answer": "O(2^n)",
    "distractors": ["O(n!)", "O(n^2)", "O(n log n)"],
    "context": "Generating all subsets involves making a binary choice (include/exclude) for each of the n elements, resulting in 2^n total subsets, making the time complexity O(2^n).",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Recursion & Backtracking",
    "subtopic": "Sudoku Solver",
    "question": "What optimization technique improves the efficiency of backtracking-based Sudoku solver?",
    "correct_answer": "Constraint propagation and most constrained variable heuristic",
    "distractors": ["Random cell selection", "Row-wise filling strategy", "Precomputing all possibilities"],
    "context": "Sudoku solver efficiency improves with constraint propagation (reducing possibilities after each placement) and most constrained variable heuristic (choosing cells with fewest valid options first), reducing search space significantly.",
    "difficulty": "advanced",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Recursion & Backtracking",
    "subtopic": "Palindrome Partitioning",
    "question": "What is the core recursive structure in palindrome partitioning problem?",
    "correct_answer": "Try all possible cuts and recurse on remaining substring",
    "distractors": ["Check all substrings for palindrome property", "Use dynamic programming table", "Apply two-pointer technique"],
    "context": "Palindrome partitioning uses recursion by trying each possible cut position, checking if the prefix is a palindrome, and if so, recursively partitioning the remaining suffix, backtracking when needed.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Recursion & Backtracking",
    "subtopic": "Combination Generation",
    "question": "What is the space complexity of generating all combinations of k elements from n elements using backtracking?",
    "correct_answer": "O(k)",
    "distractors": ["O(n)", "O(n choose k)", "O(n!)"],
    "context": "Space complexity for generating combinations is O(k) for the recursion stack depth and current combination storage, though the total output size is O(n choose k), the algorithm space usage is bounded by combination size k.",
    "difficulty": "advanced",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Data Structures",
    "subtopic": "Binary Search",
    "question": "What is the time complexity of a standard Binary Search algorithm on a sorted array of `N` elements?",
    "correct_answer": "O(log N)",
    "distractors": [
      "O(N)",
      "O(N log N)",
      "O(1)"
    ],
    "context": "Binary Search repeatedly divides the search space in half. With each comparison, the number of elements to check is reduced by half, leading to a logarithmic time complexity.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Data Structures",
    "subtopic": "Recursion",
    "question": "What is the fundamental requirement for a recursive function to terminate without infinite loops?",
    "correct_answer": "A well-defined base case.",
    "distractors": [
      "A large enough stack memory.",
      "Global variables for state management.",
      "Using memoization for all subproblems."
    ],
    "context": "A recursive function must have one or more base cases, which are conditions that, when met, stop the recursion and provide a direct solution without further recursive calls, preventing infinite loops.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Data Structures",
    "subtopic": "Binary Search Variants",
    "question": "In a sorted array with duplicate elements, if you want to find the *first* occurrence of a target value, which modification to standard binary search is crucial?",
    "correct_answer": "If the middle element is the target, search in the left half for an earlier occurrence.",
    "distractors": [
      "If the middle element is the target, search in the right half for an earlier occurrence.",
      "Always return the first element of the array.",
      "Linear search from the beginning once the target is found."
    ],
    "context": "To find the first occurrence, when `arr[mid] == target`, instead of stopping, you record the `mid` as a potential answer and continue searching in the left half (`end = mid - 1`) to see if an even earlier occurrence exists.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Data Structures",
    "subtopic": "Recursion & Backtracking",
    "question": "Which of the following problems is a classic example of a problem best solved using a backtracking algorithm?",
    "correct_answer": "N-Queens problem",
    "distractors": [
      "Sorting an array using Merge Sort.",
      "Finding an element in a sorted array using Binary Search.",
      "Calculating the sum of elements in an array iteratively."
    ],
    "context": "Backtracking is an algorithmic technique for solving problems recursively by trying to build a solution incrementally. If at any point the current partial solution cannot be extended to a complete valid solution, the algorithm backtracks (reverses its last choice) and tries a different option. The N-Queens problem, finding all permutations, or solving Sudoku are prime examples.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Data Structures",
    "subtopic": "Binary Search Variants",
    "question": "Given a rotated sorted array `[4,5,6,7,0,1,2]`, what is the time complexity to find a specific element using a modified binary search approach?",
    "correct_answer": "O(log N)",
    "distractors": [
      "O(N)",
      "O(N log N)",
      "O(1)"
    ],
    "context": "Even with rotation, a sorted array retains a property where at least one half will always be sorted. A modified binary search can identify the sorted half and proceed to search within it, maintaining O(log N) complexity.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Data Structures",
    "subtopic": "Recursion",
    "question": "What is a potential drawback of using recursion extensively in a program, especially for deep recursion?",
    "correct_answer": "Increased memory usage due to the call stack and potential for Stack Overflow errors.",
    "distractors": [
      "Reduced code readability.",
      "Always slower execution time compared to iteration.",
      "Difficulty in parallelizing operations."
    ],
    "context": "Each recursive call adds a new frame to the call stack. For very deep recursion, this can lead to significant memory consumption and potentially exhaust the available stack space, resulting in a 'Stack Overflow' error.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Data Structures",
    "subtopic": "Binary Search Variants",
    "question": "To implement `sqrt(x)` using binary search for a non-negative integer `x` (finding the integer square root), what would be the typical range for your binary search?",
    "correct_answer": "From 0 to x (or x/2 for optimization)",
    "distractors": [
      "From 1 to infinity.",
      "From -x to x.",
      "Only positive integers greater than x."
    ],
    "context": "To find the integer square root of `x`, the search space for the square root lies between 0 and `x` (or `x/2` if `x > 1` as no square root will be greater than `x/2` plus 1). Binary search repeatedly narrows this range.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Data Structures",
    "subtopic": "Backtracking",
    "question": "In the context of backtracking algorithms, what does the term 'pruning' refer to?",
    "correct_answer": "Eliminating branches of the search tree that are guaranteed not to lead to a valid solution.",
    "distractors": [
      "Increasing the depth of the recursion.",
      "Adding more choices to the solution space.",
      "Revisiting already explored paths."
    ],
    "context": "Pruning is a critical optimization in backtracking. By identifying and discarding partial solutions that cannot possibly lead to a complete valid solution, pruning significantly reduces the search space and improves the algorithm's efficiency.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Data Structures",
    "subtopic": "Recursion & Backtracking",
    "question": "What is the primary benefit of dynamic programming over simple recursion for problems with overlapping subproblems?",
    "correct_answer": "Avoids redundant computations by storing results of subproblems.",
    "distractors": [
      "Guarantees a faster worst-case time complexity.",
      "Always uses less memory.",
      "Simplifies the problem definition."
    ],
    "context": "Dynamic programming (often implemented recursively with memoization or iteratively) optimizes recursive solutions by storing the results of subproblems to avoid recomputing them. This significantly reduces the time complexity for problems exhibiting overlapping subproblems.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Data Structures",
    "subtopic": "Binary Search",
    "question": "Which of the following statements about Binary Search is TRUE?",
    "correct_answer": "It is not suitable for linked lists without modifications due to O(N) access to the middle element.",
    "distractors": [
      "It requires the data to be unsorted.",
      "It performs best on small datasets where linear scan is faster.",
      "Its space complexity is O(N) due to recursion."
    ],
    "context": "Binary Search relies on direct access to the middle element of the data structure. Arrays provide O(1) random access, making them suitable. Linked lists, however, require O(N) time to reach the middle element, making standard binary search inefficient without converting it to an array or using more complex list structures.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Data Structures",
    "subtopic": "Dynamic Programming",
    "question": "Which programming technique solves overlapping subproblems by storing results of solved subproblems?",
    "correct_answer": "Dynamic Programming",
    "distractors": ["Greedy Algorithm", "Divide and Conquer", "Recursion"],
    "context": "Dynamic Programming stores solutions to overlapping subproblems to avoid recomputation and optimize performance.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Data Structures",
    "subtopic": "Dynamic Programming",
    "question": "What is the typical time complexity of solving the 0/1 Knapsack problem using Dynamic Programming?",
    "correct_answer": "O(n × W)",
    "distractors": ["O(n log W)", "O(n)", "O(W^2)"],
    "context": "The 0/1 Knapsack problem uses a 2D DP table of size n × W, where n is the number of items and W is the capacity.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Data Structures",
    "subtopic": "Dynamic Programming",
    "question": "Which problem is a classic example of optimal substructure and overlapping subproblems?",
    "correct_answer": "Fibonacci sequence",
    "distractors": ["Depth-first traversal", "Breadth-first search", "Binary search"],
    "context": "The Fibonacci problem breaks down into smaller overlapping subproblems, making it ideal for dynamic programming solutions.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Data Structures",
    "subtopic": "Dynamic Programming",
    "question": "What technique can convert a recursive DP solution to an iterative one?",
    "correct_answer": "Tabulation",
    "distractors": ["Memoization", "Greedy method", "Binary recursion"],
    "context": "Tabulation builds the DP table from the bottom up and is the iterative alternative to top-down memoized recursion.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Data Structures",
    "subtopic": "Dynamic Programming",
    "question": "In which type of DP approach are results stored only when subproblems are first solved?",
    "correct_answer": "Memoization",
    "distractors": ["Tabulation", "Greedy", "Backtracking"],
    "context": "Memoization is a top-down DP approach that stores results of subproblems during recursive calls to avoid recomputation.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Data Structures",
    "subtopic": "Greedy Algorithms",
    "question": "What is the core strategy behind greedy algorithms?",
    "correct_answer": "Make the locally optimal choice at each step",
    "distractors": ["Always choose the maximum input", "Explore all options recursively", "Store all solutions in a table"],
    "context": "Greedy algorithms choose the best available option at each step, hoping for a global optimum.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Data Structures",
    "subtopic": "Greedy Algorithms",
    "question": "Which of the following problems can be solved optimally using a greedy approach?",
    "correct_answer": "Activity Selection Problem",
    "distractors": ["0/1 Knapsack Problem", "Fibonacci Calculation", "Sudoku Solver"],
    "context": "The Activity Selection Problem can be solved optimally using a greedy strategy by choosing the earliest finishing activity.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Data Structures",
    "subtopic": "Greedy Algorithms",
    "question": "Why might a greedy algorithm fail where dynamic programming succeeds?",
    "correct_answer": "It lacks consideration of future consequences",
    "distractors": ["It uses more memory", "It is slower", "It cannot handle loops"],
    "context": "Greedy algorithms focus on immediate benefit and may miss optimal solutions that require future planning, unlike DP.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Data Structures",
    "subtopic": "Greedy Algorithms",
    "question": "Which data structure is often used to implement greedy solutions involving priorities?",
    "correct_answer": "Priority Queue",
    "distractors": ["Stack", "Hash Map", "Linked List"],
    "context": "Greedy algorithms often rely on priority queues to extract the best (highest or lowest) priority item efficiently.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Data Structures",
    "subtopic": "Greedy Algorithms",
    "question": "Which greedy algorithm is used for finding a minimum spanning tree?",
    "correct_answer": "Kruskal's Algorithm",
    "distractors": ["Dijkstra’s Algorithm", "Floyd-Warshall", "Depth-First Search"],
    "context": "Kruskal’s algorithm builds a minimum spanning tree by greedily selecting the smallest edges using a disjoint-set structure.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Dynamic Programming",
    "subtopic": "Optimal Substructure",
    "question": "What is the key characteristic that makes a problem suitable for dynamic programming approach?",
    "correct_answer": "Optimal substructure and overlapping subproblems",
    "distractors": [
      "Linear time complexity requirement",
      "Recursive nature with no repeated calculations",
      "Greedy choice property at each step"
    ],
    "context": "Dynamic programming is applicable when a problem exhibits optimal substructure (optimal solution contains optimal solutions to subproblems) and overlapping subproblems (same subproblems are solved multiple times).",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Dynamic Programming",
    "subtopic": "Fibonacci Sequence",
    "question": "What is the time complexity of calculating the nth Fibonacci number using memoization?",
    "correct_answer": "O(n)",
    "distractors": [
      "O(2^n)",
      "O(n²)",
      "O(log n)"
    ],
    "context": "Using memoization in Fibonacci calculation, each number from 0 to n is calculated exactly once and stored, resulting in O(n) time complexity instead of the exponential O(2^n) of naive recursion.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Dynamic Programming",
    "subtopic": "Knapsack Problem",
    "question": "In the 0/1 Knapsack problem with capacity W and n items, what is the space complexity of the optimized DP solution?",
    "correct_answer": "O(W)",
    "distractors": [
      "O(n × W)",
      "O(n²)",
      "O(n + W)"
    ],
    "context": "The 0/1 Knapsack problem can be solved using a 2D DP table of size n×W, but it can be optimized to use only O(W) space by using a single array and processing items in reverse order.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Dynamic Programming",
    "subtopic": "Longest Common Subsequence",
    "question": "What is the recurrence relation for the Longest Common Subsequence (LCS) problem?",
    "correct_answer": "LCS[i][j] = LCS[i-1][j-1] + 1 if chars match, else max(LCS[i-1][j], LCS[i][j-1])",
    "distractors": [
      "LCS[i][j] = LCS[i-1][j] + LCS[i][j-1]",
      "LCS[i][j] = min(LCS[i-1][j], LCS[i][j-1]) + 1",
      "LCS[i][j] = LCS[i-1][j-1] + (chars match ? 0 : 1)"
    ],
    "context": "In LCS, if characters at current positions match, we add 1 to the LCS of previous positions. If they don't match, we take the maximum of excluding either character.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "subtopic": "Edit Distance",
    "topic": "Dynamic Programming",
    "question": "What is the minimum number of operations needed to convert 'CAT' to 'DOG' using edit distance (insert, delete, replace)?",
    "correct_answer": "3",
    "distractors": [
      "2",
      "4",
      "6"
    ],
    "context": "Edit distance between 'CAT' and 'DOG' requires 3 operations: replace C→D, replace A→O, replace T→G. Each position requires a replacement operation since no characters match.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Greedy Algorithms",
    "subtopic": "Activity Selection",
    "question": "What is the optimal strategy for the Activity Selection problem?",
    "correct_answer": "Select activities in order of earliest finish time",
    "distractors": [
      "Select activities in order of earliest start time",
      "Select activities in order of shortest duration",
      "Select activities in order of latest start time"
    ],
    "context": "The Activity Selection problem is optimally solved by greedily selecting activities that finish earliest, as this leaves maximum room for subsequent activities.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Greedy Algorithms",
    "subtopic": "Huffman Coding",
    "question": "In Huffman coding, how are characters with higher frequency typically encoded?",
    "correct_answer": "With shorter bit sequences",
    "distractors": [
      "With longer bit sequences",
      "With fixed-length codes",
      "With lexicographically smaller codes"
    ],
    "context": "Huffman coding assigns shorter bit sequences to more frequent characters and longer sequences to less frequent ones, minimizing the total encoding length through optimal prefix-free codes.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Greedy Algorithms",
    "subtopic": "Fractional Knapsack",
    "question": "What is the greedy choice criterion for the Fractional Knapsack problem?",
    "correct_answer": "Select items by highest value-to-weight ratio",
    "distractors": [
      "Select items by highest value",
      "Select items by lowest weight",
      "Select items by largest size"
    ],
    "context": "In Fractional Knapsack, the optimal greedy strategy is to sort items by value-to-weight ratio and select items with highest ratios first, taking fractions when necessary.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Dynamic Programming",
    "subtopic": "Coin Change",
    "question": "What is the time complexity of the dynamic programming solution for the coin change problem with amount n and m coin denominations?",
    "correct_answer": "O(n × m)",
    "distractors": [
      "O(n + m)",
      "O(n²)",
      "O(m × 2^n)"
    ],
    "context": "The coin change DP solution uses a table of size n+1 and for each amount, it considers all m coin denominations, resulting in O(n × m) time complexity.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Greedy Algorithms",
    "subtopic": "Minimum Spanning Tree",
    "question": "Which property ensures that Kruskal's algorithm produces a minimum spanning tree?",
    "correct_answer": "Cut property - minimum weight edge crossing any cut is in MST",
    "distractors": [
      "Cycle property - maximum weight edge in any cycle is not in MST",
      "Path property - shortest path between any two vertices",
      "Degree property - minimum degree vertices are prioritized"
    ],
    "context": "Kruskal's algorithm works because of the cut property: for any cut that separates vertices into two sets, the minimum weight edge crossing the cut must be in the MST.",
    "difficulty": "advanced",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Data Structures",
    "subtopic": "Dynamic Programming",
    "question": "Which of the following is a key characteristic that indicates a problem might be solvable using Dynamic Programming?",
    "correct_answer": "Overlapping subproblems and optimal substructure.",
    "distractors": [
      "The problem can be solved by making locally optimal choices at each step.",
      "It involves traversing a tree or graph in a specific order.",
      "The solution can be found by repeatedly dividing the problem into independent halves."
    ],
    "context": "Dynamic Programming applies to problems that can be broken down into smaller subproblems where the same subproblems are encountered multiple times (overlapping subproblems), and the optimal solution to the overall problem can be constructed from the optimal solutions of its subproblems (optimal substructure).",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Data Structures",
    "subtopic": "Greedy Algorithms",
    "question": "A Greedy Algorithm makes choices that are: ",
    "correct_answer": "Locally optimal at each step with the hope of finding a global optimum.",
    "distractors": [
      "Guaranteed to find the globally optimal solution in all cases.",
      "Random to explore different solution paths.",
      "Dependent on future outcomes after exhaustive analysis."
    ],
    "context": "Greedy algorithms build a solution piece by piece, always choosing the next piece that offers the most immediate benefit. While this often works, it does not guarantee a globally optimal solution for all problems.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Data Structures",
    "subtopic": "Dynamic Programming",
    "question": "When solving the Fibonacci sequence `F(n) = F(n-1) + F(n-2)` using dynamic programming with memoization, what is the primary benefit over a naive recursive solution?",
    "correct_answer": "It avoids redundant computations of already calculated Fibonacci numbers.",
    "distractors": [
      "It uses less memory than the recursive solution.",
      "It converts the problem into a strictly iterative one.",
      "It guarantees a solution in O(1) time complexity."
    ],
    "context": "A naive recursive solution for Fibonacci recalculates F(n-1) and F(n-2) multiple times. Memoization (top-down DP) stores the results of these subproblems as they are computed, allowing them to be retrieved in O(1) time when needed again, drastically improving performance.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Data Structures",
    "subtopic": "Greedy Algorithms",
    "question": "For the Activity Selection Problem (given a set of activities with start and finish times, select the maximum number of non-overlapping activities), what greedy strategy leads to an optimal solution?",
    "correct_answer": "Always choose the activity that finishes earliest among the compatible ones.",
    "distractors": [
      "Always choose the activity that starts earliest.",
      "Always choose the activity with the shortest duration.",
      "Always choose the activity that uses the most resources."
    ],
    "context": "The greedy choice of selecting the activity with the earliest finish time leaves the maximum time available for subsequent activities, ensuring an optimal solution for the Activity Selection Problem.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Data Structures",
    "subtopic": "Dynamic Programming",
    "question": "What is the common term for the technique in Dynamic Programming where solutions to subproblems are stored in a table (e.g., an array or 2D array) and built up from the base cases?",
    "correct_answer": "Tabulation (Bottom-Up DP)",
    "distractors": [
      "Memoization (Top-Down DP)",
      "Backtracking",
      "Divide and Conquer"
    ],
    "context": "Tabulation, or bottom-up dynamic programming, solves subproblems first, typically by filling out a table iteratively from the base cases, and then uses these stored solutions to solve larger problems.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Data Structures",
    "subtopic": "Greedy Algorithms",
    "question": "Which of the following classical algorithms uses a greedy approach?",
    "correct_answer": "Kruskal's Algorithm for Minimum Spanning Tree.",
    "distractors": [
      "Floyd-Warshall Algorithm for All-Pairs Shortest Path.",
      "Bellman-Ford Algorithm for Shortest Path with Negative Weights.",
      "Matrix Chain Multiplication (Dynamic Programming)."
    ],
    "context": "Kruskal's Algorithm builds a Minimum Spanning Tree by repeatedly adding the next cheapest edge that does not form a cycle, which is a greedy choice that leads to a globally optimal solution for MST.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Data Structures",
    "subtopic": "Dynamic Programming",
    "question": "For the 0/1 Knapsack Problem (items have weights and values, choose items to maximize value without exceeding capacity, each item can be taken at most once), why is a greedy approach generally not optimal, and why is Dynamic Programming suitable?",
    "correct_answer": "A greedy choice based on value/weight ratio might not leave optimal space for subsequent items; DP considers all combinations for optimal substructure.",
    "distractors": [
      "Greedy works best for 0/1 Knapsack as it's simpler; DP is overkill.",
      "The problem has no optimal substructure, so DP fails.",
      "The greedy approach is only optimal if all item weights are equal."
    ],
    "context": "The 0/1 Knapsack Problem often fails with a simple greedy strategy because a locally optimal choice (e.g., taking the item with the highest value-to-weight ratio) might prevent a globally optimal solution by not leaving enough capacity for other valuable items. Dynamic Programming, by considering all subproblem combinations and building optimal solutions iteratively, correctly solves this problem.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Data Structures",
    "subtopic": "Greedy Algorithms",
    "question": "In what specific type of problem is a greedy strategy guaranteed to yield the optimal solution?",
    "correct_answer": "Problems exhibiting both the greedy choice property and optimal substructure.",
    "distractors": [
      "Any problem that can be solved with recursion.",
      "Problems with overlapping subproblems only.",
      "Problems where only one sequence of choices is possible."
    ],
    "context": "A greedy algorithm produces a globally optimal solution if the problem exhibits two key properties: the 'greedy choice property' (a globally optimal solution can be reached by making a locally optimal choice) and 'optimal substructure' (an optimal solution to the problem contains optimal solutions to subproblems).",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Data Structures",
    "subtopic": "Dynamic Programming",
    "question": "What is the primary difference in memory usage between memoization (top-down DP) and tabulation (bottom-up DP) for a problem like calculating the Nth Fibonacci number?",
    "correct_answer": "Memoization uses call stack memory for recursion; tabulation uses an iterative array/table.",
    "distractors": [
      "Memoization always uses less memory.",
      "Tabulation is always stack-based.",
      "Both have identical memory footprints regardless of problem structure."
    ],
    "context": "Memoization is typically implemented with recursion, which consumes call stack memory. Tabulation is implemented iteratively, filling an array or table, and generally avoids the recursive call stack overhead, often leading to better constant factors in space, though both ultimately use O(N) space for Fibonacci.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Data Structures",
    "subtopic": "Dynamic Programming",
    "question": "Which of the following problems requires dynamic programming because a purely greedy approach fails to find the optimal solution?",
    "correct_answer": "Longest Common Subsequence (LCS)",
    "distractors": [
      "Huffman Coding (Greedy)",
      "Coin Change Problem (making change with minimum coins, if specific coin denominations are present making greedy fail)",
      "Fractional Knapsack Problem (Greedy)"
    ],
    "context": "The Longest Common Subsequence problem exhibits optimal substructure and overlapping subproblems, making it a classic DP candidate. A greedy approach (e.g., always picking the earliest matching character) would not guarantee the longest subsequence. While a simple Coin Change problem *can* be greedy with standard denominations, a general Coin Change problem (making exact change with minimum coins, with arbitrary denominations) is a DP problem where greedy often fails. For this question, LCS is a clear-cut DP example where greedy fails.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Data Structures",
    "subtopic": "Graph Algorithms",
    "question": "Which algorithm is widely used to find the shortest path from a single source in graphs with non-negative weights?",
    "correct_answer": "Dijkstra’s Algorithm",
    "distractors": ["Prim’s Algorithm", "Kruskal’s Algorithm", "Floyd-Warshall Algorithm"],
    "context": "Dijkstra’s Algorithm efficiently computes the shortest path from a source node to all other nodes in a graph with non-negative edge weights.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Data Structures",
    "subtopic": "Graph Algorithms",
    "question": "Which data structure is typically used in Dijkstra’s algorithm to find the node with the minimum distance?",
    "correct_answer": "Priority Queue",
    "distractors": ["Stack", "Hash Table", "Deque"],
    "context": "Dijkstra’s Algorithm uses a priority queue (or min-heap) to always select the node with the smallest tentative distance.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Data Structures",
    "subtopic": "Graph Algorithms",
    "question": "What is a key limitation of Dijkstra’s algorithm?",
    "correct_answer": "It cannot handle graphs with negative edge weights",
    "distractors": ["It only works on directed graphs", "It requires recursion", "It uses more memory than Bellman-Ford"],
    "context": "Dijkstra’s algorithm fails in graphs with negative edge weights because it assumes once a node is visited with a shortest path, it won’t change.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Data Structures",
    "subtopic": "Graph Algorithms",
    "question": "Which algorithm can detect negative weight cycles in a graph?",
    "correct_answer": "Bellman-Ford Algorithm",
    "distractors": ["Dijkstra’s Algorithm", "Kruskal’s Algorithm", "Topological Sort"],
    "context": "Bellman-Ford can handle negative weights and detect negative weight cycles by relaxing edges repeatedly and checking for updates in the final pass.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Data Structures",
    "subtopic": "Graph Algorithms",
    "question": "What is the time complexity of Bellman-Ford algorithm?",
    "correct_answer": "O(V × E)",
    "distractors": ["O(V + E)", "O(V log E)", "O(E^2)"],
    "context": "Bellman-Ford has a time complexity of O(V × E), where V is the number of vertices and E is the number of edges.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Data Structures",
    "subtopic": "Graph Algorithms",
    "question": "Which algorithm relaxes all edges V-1 times to compute shortest paths?",
    "correct_answer": "Bellman-Ford Algorithm",
    "distractors": ["Dijkstra’s Algorithm", "DFS", "Floyd-Warshall Algorithm"],
    "context": "Bellman-Ford computes shortest paths by repeatedly relaxing all edges for V-1 iterations, ensuring all possible shortest paths are found.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Data Structures",
    "subtopic": "Graph Algorithms",
    "question": "Which of the following is true about the output of Dijkstra’s algorithm?",
    "correct_answer": "It gives the shortest path from a source to all other nodes",
    "distractors": ["It gives only one shortest path", "It gives minimum spanning tree", "It always detects negative cycles"],
    "context": "Dijkstra’s algorithm calculates the shortest distance from a given source node to all reachable nodes in the graph.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Data Structures",
    "subtopic": "Graph Algorithms",
    "question": "Which algorithm should be used when a graph has both negative and positive edge weights?",
    "correct_answer": "Bellman-Ford Algorithm",
    "distractors": ["Dijkstra’s Algorithm", "Prim’s Algorithm", "Topological Sort"],
    "context": "Bellman-Ford handles graphs with negative edge weights and is preferred over Dijkstra’s in such scenarios.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Data Structures",
    "subtopic": "Graph Algorithms",
    "question": "Which shortest path algorithm is typically faster on dense graphs with only positive weights?",
    "correct_answer": "Dijkstra’s Algorithm",
    "distractors": ["Bellman-Ford Algorithm", "Kruskal’s Algorithm", "DFS"],
    "context": "Dijkstra’s Algorithm performs efficiently on dense graphs with non-negative weights due to its greedy approach and priority queue optimization.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Data Structures",
    "subtopic": "Graph Algorithms",
    "question": "Which approach is used in both Dijkstra and Bellman-Ford algorithms to update shortest paths?",
    "correct_answer": "Edge relaxation",
    "distractors": ["Edge coloring", "Depth-based traversal", "Node elimination"],
    "context": "Edge relaxation is the process of checking if a shorter path to a node is possible and updating the distance accordingly, used in both algorithms.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Graph Algorithms",
    "subtopic": "Dijkstra's Algorithm",
    "question": "What is the time complexity of Dijkstra's algorithm when implemented with a binary heap?",
    "correct_answer": "O((V + E) log V)",
    "distractors": [
      "O(V²)",
      "O(E log E)",
      "O(V × E)"
    ],
    "context": "Dijkstra's algorithm with binary heap has time complexity O((V + E) log V) where V is vertices and E is edges. Each vertex is extracted once from heap (V log V) and each edge is relaxed once (E log V for heap updates).",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Graph Algorithms",
    "subtopic": "Dijkstra's Algorithm",
    "question": "Which condition makes Dijkstra's algorithm fail to find correct shortest paths?",
    "correct_answer": "Presence of negative edge weights",
    "distractors": [
      "Presence of cycles in the graph",
      "Graph being disconnected",
      "Graph having more edges than vertices"
    ],
    "context": "Dijkstra's algorithm assumes non-negative edge weights. With negative weights, the greedy choice of always selecting the minimum distance vertex may not lead to optimal solutions as shorter paths through negative edges might exist.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Graph Algorithms",
    "subtopic": "Bellman-Ford Algorithm",
    "question": "What is the maximum number of iterations needed by Bellman-Ford algorithm to detect negative cycles?",
    "correct_answer": "V iterations (where V is number of vertices)",
    "distractors": [
      "E iterations (where E is number of edges)",
      "V-1 iterations",
      "log V iterations"
    ],
    "context": "Bellman-Ford algorithm runs for V-1 iterations to find shortest paths. If distances can still be reduced in the Vth iteration, it indicates presence of a negative cycle reachable from the source.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Graph Algorithms",
    "subtopic": "Bellman-Ford Algorithm",
    "question": "What is the time complexity of the Bellman-Ford algorithm?",
    "correct_answer": "O(V × E)",
    "distractors": [
      "O(V²)",
      "O(E log V)",
      "O(V + E)"
    ],
    "context": "Bellman-Ford algorithm has time complexity O(V × E) because it performs V-1 iterations, and in each iteration, it relaxes all E edges once, resulting in V × E operations.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Graph Algorithms",
    "subtopic": "Graph Representation",
    "question": "For a dense graph where E ≈ V², which representation is more space-efficient for shortest path algorithms?",
    "correct_answer": "Adjacency Matrix",
    "distractors": [
      "Adjacency List",
      "Edge List",
      "Incidence Matrix"
    ],
    "context": "For dense graphs where E ≈ V², adjacency matrix uses O(V²) space which is optimal since most entries are filled. Adjacency list would use O(V + E) = O(V²) space but with higher constant factors due to pointer overhead.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Graph Algorithms",
    "subtopic": "Shortest Path Applications",
    "question": "Which algorithm is most suitable for finding shortest paths in a weighted graph with some negative edges but no negative cycles?",
    "correct_answer": "Bellman-Ford Algorithm",
    "distractors": [
      "Dijkstra's Algorithm",
      "Breadth-First Search (BFS)",
      "Depth-First Search (DFS)"
    ],
    "context": "Bellman-Ford algorithm can handle negative edge weights and detect negative cycles, making it suitable for graphs with negative edges. Dijkstra's fails with negative weights, while BFS only works for unweighted graphs.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Graph Algorithms",
    "subtopic": "Dijkstra's Algorithm",
    "question": "In Dijkstra's algorithm, what data structure optimization reduces time complexity from O(V²) to O((V + E) log V)?",
    "correct_answer": "Priority Queue (Min-Heap)",
    "distractors": [
      "Stack",
      "Hash Table",
      "Balanced Binary Search Tree"
    ],
    "context": "Using a priority queue (min-heap) in Dijkstra's algorithm allows efficient extraction of minimum distance vertex in O(log V) time instead of O(V) linear search, reducing overall complexity from O(V²) to O((V + E) log V).",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Graph Algorithms",
    "subtopic": "Graph Traversal",
    "question": "Which traversal algorithm can find shortest path in an unweighted graph?",
    "correct_answer": "Breadth-First Search (BFS)",
    "distractors": [
      "Depth-First Search (DFS)",
      "Topological Sort",
      "Strongly Connected Components"
    ],
    "context": "BFS finds shortest path in unweighted graphs because it explores vertices level by level, guaranteeing that when a vertex is first reached, it's via the shortest path from the source.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Graph Algorithms",
    "subtopic": "All-Pairs Shortest Path",
    "question": "What is the time complexity of Floyd-Warshall algorithm for finding all-pairs shortest paths?",
    "correct_answer": "O(V³)",
    "distractors": [
      "O(V² log V)",
      "O(V × E)",
      "O(V² + E)"
    ],
    "context": "Floyd-Warshall algorithm uses three nested loops over all vertices to find shortest paths between all pairs, resulting in O(V³) time complexity. It uses dynamic programming with intermediate vertices as the third dimension.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Graph Algorithms",
    "subtopic": "Shortest Path Edge Cases",
    "question": "What happens when Dijkstra's algorithm encounters a vertex that has already been processed but a shorter path is found later?",
    "correct_answer": "The algorithm ignores the update since processed vertices have final shortest distances",
    "distractors": [
      "The algorithm updates the distance and reprocesses the vertex",
      "The algorithm throws an error and terminates",
      "The algorithm marks the graph as having negative cycles"
    ],
    "context": "In Dijkstra's algorithm, once a vertex is processed (removed from priority queue), its shortest distance is final and cannot be improved. This property holds only for non-negative edge weights, which is why negative edges break the algorithm.",
    "difficulty": "advanced",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Data Structures",
    "subtopic": "Shortest Path (Dijkstra)",
    "question": "Dijkstra's Algorithm is used to find the shortest paths from a single source vertex to all other vertices in a graph. What is a crucial constraint on the edge weights for Dijkstra's Algorithm to work correctly?",
    "correct_answer": "All edge weights must be non-negative.",
    "distractors": [
      "All edge weights must be positive.",
      "All edge weights must be integers.",
      "Edge weights can be any real number, including negative."
    ],
    "context": "Dijkstra's Algorithm operates on the principle of greedily selecting the unvisited vertex with the smallest known distance. This greedy choice only works if adding edges always increases or maintains the path length, which is guaranteed only with non-negative edge weights.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Data Structures",
    "subtopic": "Shortest Path (Bellman-Ford)",
    "question": "Which shortest path algorithm can correctly find shortest paths in a graph containing negative edge weights, provided there are no negative cycles?",
    "correct_answer": "Bellman-Ford Algorithm",
    "distractors": [
      "Dijkstra's Algorithm",
      "Breadth-First Search (BFS)",
      "Prim's Algorithm"
    ],
    "context": "The Bellman-Ford Algorithm can handle negative edge weights because it systematically relaxes all edges multiple times, iteratively updating shortest path estimates. This allows it to propagate negative edge effects across paths.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Data Structures",
    "subtopic": "Shortest Path (Dijkstra)",
    "question": "What data structure is commonly used to efficiently implement Dijkstra's Algorithm to achieve its typical time complexity of O(E log V) or O(E + V log V)?",
    "correct_answer": "Priority Queue (Min-Heap)",
    "distractors": [
      "Queue",
      "Stack",
      "Hash Map"
    ],
    "context": "A min-priority queue is essential for Dijkstra's Algorithm to quickly extract the vertex with the smallest distance among unvisited vertices. Each extraction takes O(log V) time, and there can be up to E decrease-key operations which also take O(log V), leading to the optimized time complexity.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Data Structures",
    "subtopic": "Shortest Path (Bellman-Ford)",
    "question": "How does the Bellman-Ford Algorithm detect the presence of a negative cycle reachable from the source vertex?",
    "correct_answer": "If, after V-1 relaxations, a V-th relaxation pass still finds an edge that can be relaxed.",
    "distractors": [
      "By using a priority queue to track visited nodes.",
      "By detecting if any edge weight is negative.",
      "If the algorithm completes without visiting all vertices."
    ],
    "context": "The Bellman-Ford algorithm performs V-1 relaxation passes to find shortest paths. If, after V-1 passes, an additional V-th pass can still relax any edge (meaning a shorter path is found), it indicates the presence of a negative cycle reachable from the source, as path lengths would continue to decrease indefinitely.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Data Structures",
    "subtopic": "Shortest Path (Dijkstra)",
    "question": "What is the primary advantage of Dijkstra's algorithm over Bellman-Ford when all edge weights are non-negative?",
    "correct_answer": "Dijkstra's is typically faster with a time complexity of O(E log V) or O(E + V log V) vs. Bellman-Ford's O(V*E).",
    "distractors": [
      "Dijkstra's can detect negative cycles.",
      "Dijkstra's uses less memory.",
      "Dijkstra's is simpler to implement iteratively."
    ],
    "context": "For graphs with non-negative edge weights, Dijkstra's Algorithm, especially with a min-priority queue optimization, is significantly more efficient than Bellman-Ford, offering a better time complexity.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Data Structures",
    "subtopic": "Shortest Path",
    "question": "Which algorithm is suitable for finding all-pairs shortest paths in a graph that may contain negative edge weights but no negative cycles?",
    "correct_answer": "Floyd-Warshall Algorithm",
    "distractors": [
      "Dijkstra's Algorithm (repeatedly for all sources)",
      "Bellman-Ford Algorithm (repeatedly for all sources)",
      "Kruskal's Algorithm"
    ],
    "context": "The Floyd-Warshall algorithm is a dynamic programming algorithm that finds shortest paths between all pairs of vertices in a weighted graph. It can handle negative edge weights, provided there are no negative cycles, and is efficient for dense graphs.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Data Structures",
    "subtopic": "Shortest Path (Bellman-Ford)",
    "question": "What is the worst-case time complexity of the Bellman-Ford Algorithm for a graph with V vertices and E edges?",
    "correct_answer": "O(V * E)",
    "distractors": [
      "O(V + E)",
      "O(E log V)",
      "O(V^3)"
    ],
    "context": "The Bellman-Ford algorithm performs V-1 iterations, and in each iteration, it relaxes all E edges. This leads to a total worst-case time complexity of O(V * E).",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Data Structures",
    "subtopic": "Shortest Path (Dijkstra)",
    "question": "Consider a graph where a new edge with a large positive weight is added. How does this affect the already computed shortest paths using Dijkstra's algorithm from a source, assuming no previous path goes through this new edge?",
    "correct_answer": "It does not change any previously computed shortest paths.",
    "distractors": [
      "It might decrease some shortest paths.",
      "It makes the graph invalid for Dijkstra's.",
      "It causes a negative cycle."
    ],
    "context": "If a new edge is added with a positive weight, and it doesn't create a shorter path than an existing one (which is likely if it's 'large positive' and no previous path used it), the previously computed shortest paths from Dijkstra's would remain valid. Dijkstra's is a shortest path algorithm, not a 'longest path' algorithm.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Data Structures",
    "subtopic": "Shortest Path",
    "question": "In the context of shortest path algorithms, what is 'relaxation'?",
    "correct_answer": "The process of updating the estimated shortest path distance to a vertex if a shorter path is found through an adjacent vertex.",
    "distractors": [
      "The process of removing edges from the graph.",
      "The process of assigning random weights to edges.",
      "The process of marking a vertex as visited."
    ],
    "context": "Relaxation is a fundamental operation in many shortest path algorithms (like Dijkstra's and Bellman-Ford). It involves checking if a shorter path to a vertex 'v' can be achieved by going through an adjacent vertex 'u', and if so, updating the distance to 'v'.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Data Structures",
    "subtopic": "Shortest Path (Bellman-Ford)",
    "question": "Why is the Bellman-Ford algorithm typically less efficient than Dijkstra's algorithm for graphs with non-negative edge weights?",
    "correct_answer": "Bellman-Ford performs V-1 full passes over all edges, whereas Dijkstra's selectively processes vertices using a priority queue.",
    "distractors": [
      "Bellman-Ford has a recursive structure that leads to more overhead.",
      "Bellman-Ford requires more memory to store path information.",
      "Bellman-Ford only works for dense graphs."
    ],
    "context": "Bellman-Ford's iterative approach of relaxing all edges in every pass makes it O(V*E), which is generally slower than Dijkstra's O(E log V) or O(E + V log V) because Dijkstra's uses a priority queue to efficiently extract the next closest unvisited vertex, avoiding unnecessary relaxations.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Data Structures",
    "subtopic": "Minimum Spanning Tree",
    "question": "Which algorithm builds a Minimum Spanning Tree by selecting the smallest edge that connects a new vertex?",
    "correct_answer": "Prim’s Algorithm",
    "distractors": ["Kruskal’s Algorithm", "Dijkstra’s Algorithm", "Bellman-Ford Algorithm"],
    "context": "Prim’s Algorithm grows the MST by always choosing the smallest edge that connects a new vertex to the current tree.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Data Structures",
    "subtopic": "Minimum Spanning Tree",
    "question": "Which MST algorithm uses a greedy strategy and sorts all edges before processing?",
    "correct_answer": "Kruskal’s Algorithm",
    "distractors": ["Prim’s Algorithm", "Dijkstra’s Algorithm", "Floyd-Warshall Algorithm"],
    "context": "Kruskal’s Algorithm sorts all edges and uses a disjoint set to add the smallest edge that doesn't form a cycle.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Data Structures",
    "subtopic": "Minimum Spanning Tree",
    "question": "Which data structure is commonly used with Kruskal’s Algorithm to detect cycles?",
    "correct_answer": "Disjoint Set (Union-Find)",
    "distractors": ["Stack", "Priority Queue", "Adjacency Matrix"],
    "context": "Kruskal’s Algorithm uses a disjoint set to determine whether adding an edge would form a cycle in the MST.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Data Structures",
    "subtopic": "Minimum Spanning Tree",
    "question": "Which MST algorithm performs better with dense graphs using an adjacency matrix?",
    "correct_answer": "Prim’s Algorithm",
    "distractors": ["Kruskal’s Algorithm", "DFS", "Topological Sort"],
    "context": "Prim’s Algorithm is well-suited for dense graphs and can be implemented efficiently using an adjacency matrix and min-heap.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Data Structures",
    "subtopic": "Minimum Spanning Tree",
    "question": "What is the primary goal of a minimum spanning tree?",
    "correct_answer": "To connect all vertices with minimum total edge weight",
    "distractors": ["To find the shortest path between nodes", "To minimize the number of edges", "To sort vertices by degree"],
    "context": "A minimum spanning tree connects all vertices in a graph with the minimum possible total edge weight and no cycles.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Data Structures",
    "subtopic": "String Algorithms",
    "question": "Which string matching algorithm uses a prefix table to avoid unnecessary comparisons?",
    "correct_answer": "Knuth-Morris-Pratt (KMP)",
    "distractors": ["Rabin-Karp", "Naive Matching", "Z-Algorithm"],
    "context": "The KMP algorithm precomputes a prefix table to efficiently skip characters when mismatches occur during string matching.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Data Structures",
    "subtopic": "String Algorithms",
    "question": "Which algorithm hashes substrings to quickly detect potential matches?",
    "correct_answer": "Rabin-Karp",
    "distractors": ["KMP", "Suffix Tree", "Boyer-Moore"],
    "context": "Rabin-Karp uses a rolling hash function to compare the hash of the pattern with the hashes of substrings in the text.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Data Structures",
    "subtopic": "String Algorithms",
    "question": "Which algorithm constructs a Z-array to preprocess all occurrences of a pattern?",
    "correct_answer": "Z-Algorithm",
    "distractors": ["KMP", "Rabin-Karp", "Suffix Tree"],
    "context": "The Z-Algorithm creates a Z-array where each value denotes the length of the longest substring starting from that index which is also a prefix.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Data Structures",
    "subtopic": "String Algorithms",
    "question": "What is the time complexity of the KMP string matching algorithm?",
    "correct_answer": "O(n + m)",
    "distractors": ["O(nm)", "O(log n)", "O(n^2)"],
    "context": "KMP achieves linear time complexity by preprocessing the pattern in O(m) and matching it in O(n), totaling O(n + m).",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Data Structures",
    "subtopic": "String Algorithms",
    "question": "Which of the following string operations benefits from suffix trees?",
    "correct_answer": "Finding the longest repeated substring",
    "distractors": ["Character frequency count", "Checking balanced parentheses", "Reversing a string"],
    "context": "Suffix trees provide an efficient structure to solve complex string problems like finding longest repeated substrings or patterns.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Data Structures",
    "subtopic": "Minimum Spanning Tree",
    "question": "What is the primary goal of a Minimum Spanning Tree (MST) algorithm in a connected, undirected, weighted graph?",
    "correct_answer": "To find a subgraph that connects all vertices with the minimum possible total edge weight and contains no cycles.",
    "distractors": [
      "To find the shortest path between any two vertices.",
      "To detect all cycles within the graph.",
      "To traverse all vertices and edges exactly once."
    ],
    "context": "A Minimum Spanning Tree is a subset of the edges of a connected, edge-weighted undirected graph that connects all the vertices together, without any cycles and with the minimum possible total edge weight.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Data Structures",
    "subtopic": "Minimum Spanning Tree (Prim)",
    "question": "Prim's Algorithm for finding a Minimum Spanning Tree (MST) starts from an arbitrary vertex and grows the MST. What data structure is typically used to efficiently select the next edge to add to the MST?",
    "correct_answer": "Priority Queue (Min-Heap)",
    "distractors": [
      "Queue",
      "Stack",
      "Hash Table"
    ],
    "context": "Prim's Algorithm maintains a set of vertices already included in the MST. At each step, it adds the minimum-weight edge connecting a vertex in the set to a vertex outside the set. A min-priority queue efficiently stores and retrieves these candidate edges based on their weights.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Data Structures",
    "subtopic": "Minimum Spanning Tree (Kruskal)",
    "question": "Which data structure is essential for efficiently implementing Kruskal's Algorithm to detect cycles when adding edges?",
    "correct_answer": "Disjoint Set Union (DSU) / Union-Find",
    "distractors": [
      "Adjacency Matrix",
      "Adjacency List",
      "Binary Search Tree"
    ],
    "context": "Kruskal's Algorithm sorts all edges by weight and adds them to the MST if they don't form a cycle with already added edges. A Disjoint Set Union (DSU) data structure is used to keep track of connected components and efficiently check if adding an edge connects two already connected components (forming a cycle).",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Data Structures",
    "subtopic": "String Algorithms",
    "question": "What is the worst-case time complexity for a naive (brute-force) string matching algorithm, where a pattern of length `M` is searched in a text of length `N`?",
    "correct_answer": "O(N * M)",
    "distractors": [
      "O(N + M)",
      "O(N)",
      "O(M)"
    ],
    "context": "A naive string matching algorithm compares the pattern with every possible `M`-length substring in the text. In the worst case (e.g., pattern 'AAAA' in text 'AAAAAB'), it might perform `M` comparisons for each of the `N-M+1` possible alignments, leading to O(N * M) complexity.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Data Structures",
    "subtopic": "String Algorithms",
    "question": "The Knuth-Morris-Pratt (KMP) algorithm improves upon naive string matching by avoiding unnecessary re-comparisons. What pre-computed information does KMP use to achieve this efficiency?",
    "correct_answer": "A 'LPS' (Longest Proper Prefix which is also a Suffix) array for the pattern.",
    "distractors": [
      "The frequency of each character in the text.",
      "The total length of the text and pattern combined.",
      "A hash value for every substring in the text."
    ],
    "context": "The KMP algorithm pre-processes the pattern to build a 'LPS' array (also known as a prefix function or failure function). This array tells the algorithm how many characters to shift the pattern when a mismatch occurs, without re-comparing already matched characters, thus avoiding redundant checks.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Data Structures",
    "subtopic": "Minimum Spanning Tree",
    "question": "When would Kruskal's algorithm generally be preferred over Prim's algorithm for finding an MST?",
    "correct_answer": "For sparse graphs (fewer edges relative to vertices) or when the graph is given as an edge list.",
    "distractors": [
      "For dense graphs (many edges relative to vertices).",
      "When the graph has negative edge weights.",
      "When finding shortest paths from a single source."
    ],
    "context": "Kruskal's algorithm sorts all edges, making it efficient when the number of edges (E) is significantly less than V^2. For sparse graphs, E log E (or E log V using DSU) is often better than Prim's E log V. It's also natural to use when the graph is provided as a list of edges.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Data Structures",
    "subtopic": "String Algorithms",
    "question": "The Rabin-Karp algorithm uses hashing to find patterns in text. What is a potential issue with its hashing approach that can lead to false positives?",
    "correct_answer": "Hash collisions, where different substrings have the same hash value.",
    "distractors": [
      "It requires the text to be sorted alphabetically.",
      "It cannot handle patterns with repeating characters.",
      "It always runs in O(N*M) time."
    ],
    "context": "Rabin-Karp uses rolling hash to efficiently compare substrings. While it quickly identifies potential matches by comparing hash values, a hash collision (two different strings having the same hash) can occur. Therefore, actual string comparison is still needed for any potential match, leading to 'false positives' if only hashes are compared.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Data Structures",
    "subtopic": "Minimum Spanning Tree",
    "question": "If all edge weights in a connected, undirected graph are distinct, how many Minimum Spanning Trees (MSTs) can exist for that graph?",
    "correct_answer": "Exactly one",
    "distractors": [
      "Zero",
      "Two",
      "Multiple, depending on the graph structure"
    ],
    "context": "A unique property of MSTs is that if all edge weights in a graph are distinct, then the graph has exactly one unique Minimum Spanning Tree. If there are duplicate weights, multiple MSTs with the same total weight can exist.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Data Structures",
    "subtopic": "String Algorithms",
    "question": "Which String Algorithm is commonly used for efficient substring search in text editors and DNA sequence analysis?",
    "correct_answer": "Suffix Trees or Suffix Arrays",
    "distractors": [
      "Bubble Sort",
      "Dijkstra's Algorithm",
      "Breadth-First Search"
    ],
    "context": "Suffix trees and suffix arrays are advanced data structures that allow for very fast substring searching, pattern matching, and other string operations. They are particularly useful when many pattern searches need to be performed on the same large text.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Data Structures",
    "subtopic": "Minimum Spanning Tree",
    "question": "A cut in a graph is a partition of its vertices into two disjoint sets. What property states that for any cut, if an edge crosses the cut and has strictly smaller weight than any other edge crossing the cut, then this edge must be part of *every* Minimum Spanning Tree?",
    "correct_answer": "Cut Property",
    "distractors": [
      "Cycle Property",
      "Path Property",
      "Bridge Property"
    ],
    "context": "The Cut Property (also known as the cut-set property) is a fundamental principle underlying both Prim's and Kruskal's algorithms. It states that if you partition the vertices into two sets (a cut), the minimum weight edge crossing that cut must be part of any MST.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Algorithms",
    "subtopic": "Minimum Spanning Tree (Prim)",
    "question": "What is the time complexity of Prim's algorithm when using a binary heap?",
    "correct_answer": "O((V + E) log V)",
    "distractors": [
      "O(V²)",
      "O(E log E)",
      "O(V log V + E)"
    ],
    "context": "Prim's algorithm builds a minimum spanning tree by starting from an arbitrary vertex and repeatedly adding the minimum weight edge that connects a vertex in the tree to a vertex outside the tree. When implemented with a binary heap, each edge relaxation takes O(log V) time.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Algorithms",
    "subtopic": "Minimum Spanning Tree (Kruskal)",
    "question": "Which data structure is essential for implementing Kruskal's algorithm efficiently?",
    "correct_answer": "Union-Find (Disjoint Set Union)",
    "distractors": [
      "Priority Queue",
      "Binary Search Tree",
      "Hash Table"
    ],
    "context": "Kruskal's algorithm sorts all edges by weight and processes them in order, adding an edge to the MST only if it doesn't create a cycle. Union-Find data structure efficiently detects cycles by checking if two vertices belong to the same connected component.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Algorithms",
    "subtopic": "Minimum Spanning Tree (Prim vs Kruskal)",
    "question": "In which scenario would Prim's algorithm be preferred over Kruskal's algorithm?",
    "correct_answer": "When the graph is dense (E ≈ V²)",
    "distractors": [
      "When the graph is sparse (E ≈ V)",
      "When edges are already sorted",
      "When using adjacency list representation"
    ],
    "context": "Prim's algorithm has time complexity O(V²) with adjacency matrix or O((V + E) log V) with heap, while Kruskal's has O(E log E). For dense graphs where E ≈ V², Prim's O(V²) implementation becomes more efficient than Kruskal's O(V² log V²).",
    "difficulty": "advanced",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Algorithms",
    "subtopic": "String Algorithms (KMP)",
    "question": "What is the main advantage of the KMP (Knuth-Morris-Pratt) algorithm over naive string matching?",
    "correct_answer": "It avoids re-examining previously matched characters in the text",
    "distractors": [
      "It uses less memory space",
      "It works only with ASCII characters",
      "It requires the pattern to be sorted"
    ],
    "context": "KMP algorithm preprocesses the pattern to create a failure function (LPS array) that indicates how many characters can be skipped when a mismatch occurs. This prevents re-scanning characters in the text that were already matched, achieving O(n + m) time complexity.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Algorithms",
    "subtopic": "String Algorithms (Rabin-Karp)",
    "question": "What is the worst-case time complexity of the Rabin-Karp string matching algorithm?",
    "correct_answer": "O(nm)",
    "distractors": [
      "O(n + m)",
      "O(n log m)",
      "O(m log n)"
    ],
    "context": "Rabin-Karp uses rolling hash to find pattern matches in O(n + m) average time. However, in worst case when many hash collisions occur (like searching for 'aaa' in 'aaaaaaa'), every hash match requires character-by-character verification, leading to O(nm) time complexity.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Algorithms",
    "subtopic": "String Algorithms (Z-Algorithm)",
    "question": "What does the Z-array in Z-algorithm represent for a string S?",
    "correct_answer": "Length of longest substring starting from S[i] that matches a prefix of S",
    "distractors": [
      "Number of occurrences of character S[i] in the string",
      "Length of longest palindromic substring starting at S[i]",
      "Distance to the next occurrence of S[i] in the string"
    ],
    "context": "Z-algorithm computes Z-array where Z[i] represents the length of the longest substring starting from position i that is also a prefix of the string. This is useful for pattern matching by concatenating pattern and text with a separator.",
    "difficulty": "advanced",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Algorithms",
    "subtopic": "Minimum Spanning Tree (Properties)",
    "question": "Which property must be satisfied by every edge in a Minimum Spanning Tree?",
    "correct_answer": "Cut property: lightest edge crossing any cut is in some MST",
    "distractors": [
      "Every edge must be the shortest path between its endpoints",
      "Every edge must have unique weight",
      "Every edge must connect vertices of different degrees"
    ],
    "context": "The cut property states that for any cut (partition of vertices into two sets), the lightest edge crossing the cut is guaranteed to be in some minimum spanning tree. This fundamental property is the basis for both Prim's and Kruskal's algorithms.",
    "difficulty": "advanced",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Algorithms",
    "subtopic": "String Algorithms (Suffix Array)",
    "question": "What is the space complexity of a suffix array for a string of length n?",
    "correct_answer": "O(n)",
    "distractors": [
      "O(n²)",
      "O(n log n)",
      "O(1)"
    ],
    "context": "A suffix array is an array of integers representing the starting positions of suffixes of a string in lexicographically sorted order. Since it stores one integer per suffix and there are n suffixes for a string of length n, the space complexity is O(n).",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Algorithms",
    "subtopic": "String Algorithms (Manacher)",
    "question": "What is the time complexity of Manacher's algorithm for finding all palindromic substrings?",
    "correct_answer": "O(n)",
    "distractors": [
      "O(n²)",
      "O(n log n)",
      "O(n³)"
    ],
    "context": "Manacher's algorithm finds all palindromic substrings in linear time by avoiding redundant comparisons. It maintains the rightmost boundary of palindromes found so far and uses previously computed information to skip unnecessary character comparisons, achieving O(n) time complexity.",
    "difficulty": "advanced",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Algorithms",
    "subtopic": "Minimum Spanning Tree (Implementation)",
    "question": "In Kruskal's algorithm, what happens when we try to add an edge between two vertices that are already connected?",
    "correct_answer": "The edge is skipped to avoid creating a cycle",
    "distractors": [
      "The edge replaces the existing path if it has lower weight",
      "The algorithm terminates with an error",
      "The edge is added to create an alternative path"
    ],
    "context": "Kruskal's algorithm processes edges in sorted order by weight. When considering an edge, it uses Union-Find to check if the two vertices are already in the same connected component. If they are, adding the edge would create a cycle, so it's skipped since trees cannot have cycles.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Pattern Matching",
    "subtopic": "KMP Algorithm",
    "question": "What is the primary advantage of the Knuth-Morris-Pratt (KMP) algorithm over naive pattern matching?",
    "correct_answer": "It avoids re-examining characters by using a longest prefix suffix (LPS) array.",
    "distractors": [
      "It uses hashing to compare substrings efficiently.",
      "It relies on brute force comparisons without preprocessing.",
      "It sorts the pattern before matching."
    ],
    "context": "KMP algorithm improves pattern matching by preprocessing the pattern into an LPS array to skip unnecessary comparisons.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Pattern Matching",
    "subtopic": "Rabin-Karp Algorithm",
    "question": "What technique does Rabin-Karp algorithm use to efficiently find pattern matches in a text?",
    "correct_answer": "It uses hashing of the pattern and text substrings for quick comparison.",
    "distractors": [
      "It uses longest prefix suffix array for skipping characters.",
      "It applies binary search on the text.",
      "It sorts the text and pattern before comparison."
    ],
    "context": "Rabin-Karp algorithm uses rolling hash to convert substrings into numeric values for fast comparison.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Pattern Matching",
    "subtopic": "KMP Algorithm",
    "question": "In the KMP algorithm, what does the LPS array represent?",
    "correct_answer": "The length of the longest proper prefix which is also a suffix for each prefix of the pattern.",
    "distractors": [
      "The count of mismatches encountered in pattern matching.",
      "The rolling hash values of pattern substrings.",
      "The indexes where the pattern occurs in the text."
    ],
    "context": "The LPS (Longest Prefix Suffix) array is used in KMP to skip unnecessary character comparisons.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Bit Manipulation",
    "subtopic": "Basics",
    "question": "Which bitwise operation is used to toggle a specific bit in an integer?",
    "correct_answer": "XOR operation with a mask having the bit set at the position to toggle.",
    "distractors": [
      "AND operation with the bit mask.",
      "OR operation with zero mask.",
      "Left shift operation by one."
    ],
    "context": "XOR toggles bits where the mask has 1s, flipping the bit at that position.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Bit Manipulation",
    "subtopic": "Advanced",
    "question": "How can you check if a number is a power of two using bit manipulation?",
    "correct_answer": "Check if the number is greater than zero and (number & (number - 1)) equals zero.",
    "distractors": [
      "Check if number modulo 2 equals zero.",
      "Check if number is equal to its bitwise complement.",
      "Check if number OR (number - 1) equals zero."
    ],
    "context": "A power of two has exactly one bit set, so number & (number - 1) clears the lowest set bit and should be zero.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Bit Manipulation",
    "subtopic": "Bit Counting",
    "question": "What is the fastest bit manipulation trick to count the number of set bits (1s) in an integer?",
    "correct_answer": "Using Brian Kernighan’s algorithm that repeatedly clears the least significant set bit.",
    "distractors": [
      "Using left shift operator to iterate through bits.",
      "Using addition and subtraction of bits.",
      "Using XOR between the number and zero."
    ],
    "context": "Brian Kernighan’s algorithm efficiently counts set bits by removing the least significant bit in each iteration.",
    "difficulty": "advanced",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Pattern Matching",
    "subtopic": "Rabin-Karp Algorithm",
    "question": "Why does Rabin-Karp algorithm use a rolling hash function?",
    "correct_answer": "To quickly compute hash of the next substring by updating the previous hash value.",
    "distractors": [
      "To sort substrings based on hash values.",
      "To build the longest prefix suffix array.",
      "To generate random patterns for comparison."
    ],
    "context": "Rolling hash allows efficient hash recomputation when sliding the window over text, improving performance.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Bit Manipulation",
    "subtopic": "Masking",
    "question": "Which operation can be used to clear the rightmost set bit of an integer?",
    "correct_answer": "number & (number - 1)",
    "distractors": [
      "number | (number - 1)",
      "number ^ (number - 1)",
      "number + (number - 1)"
    ],
    "context": "The expression number & (number - 1) clears the least significant set bit of the number.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Pattern Matching",
    "subtopic": "KMP Algorithm",
    "question": "What is the worst-case time complexity of the KMP pattern matching algorithm?",
    "correct_answer": "O(n + m), where n is the text length and m is the pattern length.",
    "distractors": [
      "O(n * m)",
      "O(m log n)",
      "O(n^2)"
    ],
    "context": "KMP achieves linear time complexity by preprocessing the pattern and using the LPS array.",
    "difficulty": "advanced",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Bit Manipulation",
    "subtopic": "Operations",
    "question": "What does the bitwise AND operation between two integers return?",
    "correct_answer": "A number with bits set to 1 only where both operands have bits set to 1.",
    "distractors": [
      "A number with bits set where either operand has bits set.",
      "A number with all bits flipped.",
      "A number shifted left by the number of set bits."
    ],
    "context": "Bitwise AND compares each bit and sets the result bit to 1 only if both bits are 1.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Data Structures",
    "subtopic": "Pattern Matching (KMP)",
    "question": "The Knuth-Morris-Pratt (KMP) algorithm optimizes string searching by avoiding unnecessary comparisons. This is primarily achieved by pre-processing which part?",
    "correct_answer": "The pattern, to build a 'LPS' array.",
    "distractors": [
      "The text, to create a hash table of substrings.",
      "Both the text and pattern simultaneously.",
      "The entire alphabet, to optimize character lookups."
    ],
    "context": "The KMP algorithm pre-computes a Longest Proper Prefix Suffix (LPS) array for the pattern. This array stores the length of the longest proper prefix of the pattern that is also a suffix of the pattern, enabling efficient shifts upon mismatch without backtracking in the text.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Data Structures",
    "subtopic": "Bit Manipulation",
    "question": "Which bitwise operation can be used to check if a number `N` is odd or even most efficiently?",
    "correct_answer": "N & 1",
    "distractors": [
      "N % 2 == 0",
      "N / 2",
      "N << 1"
    ],
    "context": "The least significant bit (LSB) of an integer is 1 if the number is odd and 0 if the number is even. Performing a bitwise AND with 1 (`N & 1`) isolates the LSB, providing a very fast way to determine parity.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Data Structures",
    "subtopic": "Pattern Matching (Rabin-Karp)",
    "question": "The Rabin-Karp algorithm uses a 'rolling hash' technique. What is the main advantage of using a rolling hash in this context?",
    "correct_answer": "To compute the hash of the next substring in O(1) time from the previous substring's hash.",
    "distractors": [
      "To guarantee unique hash values for all substrings.",
      "To completely eliminate the need for character-by-character comparison.",
      "To ensure the pattern is always at the beginning of the text."
    ],
    "context": "A rolling hash function allows for efficient re-computation of the hash value for a sliding window. Instead of recalculating the entire hash for each new substring, it updates the hash in constant time by subtracting the contribution of the outgoing character and adding the contribution of the incoming character.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Data Structures",
    "subtopic": "Bit Manipulation",
    "question": "To convert a lowercase English character `ch` to its uppercase equivalent using bitwise operations, what would be the typical operation?",
    "correct_answer": "ch & (~' ')",
    "distractors": [
      "ch | ' '",
      "ch ^ ' '",
      "ch + 32"
    ],
    "context": "The ASCII value of a lowercase letter differs from its uppercase counterpart by 32. This difference corresponds to setting/clearing a specific bit. Clearing the 5th bit (0-indexed) of a lowercase character converts it to uppercase. The ASCII value of space (' ') has only the 5th bit set (00100000). So, ANDing with its bitwise NOT (`~' '`) clears that bit.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Data Structures",
    "subtopic": "Bit Manipulation",
    "question": "Which bitwise operation is commonly used to 'toggle' (flip) a specific bit at position `k` in a number `N`?",
    "correct_answer": "N ^ (1 << k)",
    "distractors": [
      "N & (1 << k)",
      "N | (1 << k)",
      "N >> k"
    ],
    "context": "The XOR (^) operator flips a bit if the corresponding bit in the mask is 1, and leaves it unchanged if the mask bit is 0. Shifting 1 left by `k` positions creates a mask with only the `k`-th bit set, allowing you to toggle that specific bit.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Data Structures",
    "subtopic": "Pattern Matching",
    "question": "What is the worst-case time complexity of the KMP algorithm for searching a pattern of length `M` in a text of length `N`?",
    "correct_answer": "O(N + M)",
    "distractors": [
      "O(N * M)",
      "O(N log M)",
      "O(M log N)"
    ],
    "context": "The KMP algorithm has a linear time complexity because its pre-processing step takes O(M) time, and the search step takes O(N) time. It avoids the O(N*M) worst-case of naive string matching by cleverly skipping character comparisons.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Data Structures",
    "subtopic": "Bit Manipulation",
    "question": "How can you efficiently count the number of set bits (1s) in a 32-bit integer `N` without iterating through all bits one by one?",
    "correct_answer": "Using Brian Kernighan's algorithm (N & (N-1) repeatedly).",
    "distractors": [
      "Dividing N by 2 repeatedly.",
      "Using a left shift loop for 32 iterations.",
      "Converting N to a string and counting '1's."
    ],
    "context": "Brian Kernighan's algorithm (N & (N-1)) efficiently counts set bits. Each iteration of `N = N & (N-1)` clears the least significant set bit in `N`. The loop continues until `N` becomes 0, and the number of iterations is the count of set bits.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Data Structures",
    "subtopic": "Pattern Matching (Rabin-Karp)",
    "question": "In the Rabin-Karp algorithm, to minimize the probability of hash collisions, what should be chosen carefully?",
    "correct_answer": "A large prime number for the modulus and a good base for the polynomial hash function.",
    "distractors": [
      "A small, fixed hash value for all substrings.",
      "Converting all characters to uppercase before hashing.",
      "Using only bitwise XOR for hashing."
    ],
    "context": "The effectiveness of Rabin-Karp heavily relies on the hash function. Choosing a large prime number as the modulus and a random/good base for the polynomial hashing function significantly reduces the chance of hash collisions, thereby improving the average-case performance.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Data Structures",
    "subtopic": "Bit Manipulation",
    "question": "To check if a positive integer `N` is a power of 2, which bitwise expression can be used efficiently?",
    "correct_answer": "(N > 0) && ((N & (N - 1)) == 0)",
    "distractors": [
      "N % 2 == 0",
      "N & 1 == 0",
      "N == 2"
    ],
    "context": "A positive integer is a power of 2 if and only if it has exactly one bit set in its binary representation. Brian Kernighan's trick (`N & (N - 1)`) clears the least significant set bit. If `N` is a power of 2, then `N - 1` will have all bits to the right of its single set bit as 1s, and all bits to its left as 0s. Thus, `N & (N - 1)` will be 0 if and only if `N` is a power of 2 (and `N` must be positive).",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Data Structures",
    "subtopic": "Pattern Matching",
    "question": "Between KMP and Rabin-Karp, which algorithm typically performs better on average for large texts and patterns with a good hash function, but has a worst-case scenario that is equivalent to brute-force?",
    "correct_answer": "Rabin-Karp",
    "distractors": [
      "KMP",
      "Both perform equally well in all cases.",
      "Neither is suitable for large texts."
    ],
    "context": "Rabin-Karp's average case performance is very good (O(N+M)) due to rolling hashes. However, in the rare worst-case scenario where many hash collisions occur (often due to a poor hash function or maliciously crafted input), it might degrade to O(N*M) because it would have to perform full character comparisons for every potential match. KMP, on the other hand, guarantees O(N+M) in all cases.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Algorithms",
    "subtopic": "Pattern Matching (KMP)",
    "question": "What is the purpose of the LPS (Longest Proper Prefix which is also Suffix) array in KMP algorithm?",
    "correct_answer": "To determine how many characters to skip when a mismatch occurs",
    "distractors": [
      "To store all possible pattern matches in the text",
      "To calculate the hash value of the pattern",
      "To find the lexicographically smallest rotation of pattern"
    ],
    "context": "The LPS array in KMP algorithm preprocesses the pattern to find the longest proper prefix of the pattern that is also a suffix. When a mismatch occurs at position i, the LPS array tells us the next position in the pattern to compare, avoiding redundant character comparisons and achieving linear time complexity.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Algorithms",
    "subtopic": "Pattern Matching (Rabin-Karp)",
    "question": "In Rabin-Karp algorithm, what technique is used to efficiently compute hash values for all substrings?",
    "correct_answer": "Rolling hash technique",
    "distractors": [
      "Dynamic programming memoization",
      "Divide and conquer approach",
      "Greedy hash selection"
    ],
    "context": "Rabin-Karp uses rolling hash technique where the hash value of the next substring is computed from the current hash value in constant time. This is done by removing the contribution of the first character and adding the contribution of the new character, making the overall algorithm efficient.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Algorithms",
    "subtopic": "Pattern Matching (KMP vs Rabin-Karp)",
    "question": "Which pattern matching algorithm guarantees O(n + m) time complexity in all cases?",
    "correct_answer": "KMP (Knuth-Morris-Pratt)",
    "distractors": [
      "Rabin-Karp algorithm",
      "Boyer-Moore algorithm",
      "Naive string matching"
    ],
    "context": "KMP algorithm guarantees O(n + m) time complexity in all cases by using the failure function to avoid re-examining characters. Rabin-Karp has O(n + m) average case but O(nm) worst case due to hash collisions. Boyer-Moore can be O(nm) in worst case, and naive matching is always O(nm).",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Algorithms",
    "subtopic": "Bit Manipulation",
    "question": "What is the result of the expression (n & (n-1)) for any positive integer n?",
    "correct_answer": "Removes the rightmost set bit of n",
    "distractors": [
      "Sets the rightmost unset bit of n",
      "Counts the number of set bits in n",
      "Finds the position of leftmost set bit"
    ],
    "context": "The expression (n & (n-1)) is a classic bit manipulation trick that removes the rightmost set bit from n. This works because n-1 flips all bits after and including the rightmost set bit, so ANDing with n removes that bit. This technique is used in algorithms like counting set bits.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Algorithms",
    "subtopic": "Bit Manipulation",
    "question": "How can you check if a number is a power of 2 using bit manipulation?",
    "correct_answer": "Check if (n & (n-1)) == 0 and n > 0",
    "distractors": [
      "Check if (n | (n-1)) == n",
      "Check if (n ^ (n-1)) == 1",
      "Check if (n >> 1) == (n-1)"
    ],
    "context": "A number is a power of 2 if it has exactly one set bit. Using the property that (n & (n-1)) removes the rightmost set bit, if n is a power of 2, this operation results in 0. We also need n > 0 to exclude 0 which would also give (0 & -1) == 0 but isn't a power of 2.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Algorithms",
    "subtopic": "Pattern Matching (Rabin-Karp Implementation)",
    "question": "Why is a prime number typically chosen as the modulus in Rabin-Karp algorithm?",
    "correct_answer": "To minimize hash collisions and ensure uniform distribution",
    "distractors": [
      "To make hash computation faster",
      "To reduce memory usage",
      "To handle negative hash values"
    ],
    "context": "In Rabin-Karp algorithm, a prime number is chosen as modulus because prime numbers provide better hash distribution and minimize collisions. Non-prime moduli can create patterns that increase collision probability, especially when the input has repetitive structures, leading to poor performance.",
    "difficulty": "advanced",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Algorithms",
    "subtopic": "Bit Manipulation",
    "question": "What does the XOR operation between two identical numbers always result in?",
    "correct_answer": "0",
    "distractors": [
      "1",
      "The number itself",
      "2 times the number"
    ],
    "context": "XOR (exclusive OR) returns 1 when bits are different and 0 when bits are same. When XORing two identical numbers, all corresponding bits are the same, so all result bits are 0. This property is fundamental in many algorithms like finding single number in array where all others appear twice.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Algorithms",
    "subtopic": "Bit Manipulation",
    "question": "How do you find the position of the rightmost set bit in a number n?",
    "correct_answer": "Using (n & -n) to isolate it, then calculate log₂",
    "distractors": [
      "Using (n | -n) operation",
      "Using (n ^ -n) operation",
      "Using (n + (-n)) operation"
    ],
    "context": "To find the rightmost set bit position, we first isolate it using (n & -n). This works because -n in two's complement flips all bits and adds 1, making (n & -n) give only the rightmost set bit. Then we can find its position using logarithm or bit counting techniques.",
    "difficulty": "advanced",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Algorithms",
    "subtopic": "Pattern Matching (KMP Preprocessing)",
    "question": "What is the time complexity of building the LPS array in KMP algorithm?",
    "correct_answer": "O(m) where m is pattern length",
    "distractors": [
      "O(m²) where m is pattern length",
      "O(n) where n is text length",
      "O(n + m) where n is text and m is pattern length"
    ],
    "context": "Building the LPS array in KMP preprocessing takes O(m) time where m is the pattern length. Although there are nested loops, the inner while loop iterations are bounded by the total number of character comparisons, which is at most 2m across all iterations, making it linear in pattern length.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Algorithms",
    "subtopic": "Bit Manipulation",
    "question": "What is the most efficient way to count the number of set bits in an integer using bit manipulation?",
    "correct_answer": "Using Brian Kernighan's algorithm: while(n) { count++; n = n & (n-1); }",
    "distractors": [
      "Checking each bit position using right shift: while(n) { count += n & 1; n >>= 1; }",
      "Using lookup table for every 4 bits",
      "Converting to string and counting '1' characters"
    ],
    "context": "Brian Kernighan's algorithm efficiently counts set bits by using the property that (n & (n-1)) removes the rightmost set bit. The loop runs only for the number of set bits rather than all bit positions, making it more efficient than checking each bit position individually, especially for numbers with few set bits.",
    "difficulty": "advanced",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Scalability & Load Balancing",
    "subtopic": "Load Balancing",
    "question": "What is the main purpose of a load balancer in a scalable system?",
    "correct_answer": "To distribute incoming network traffic evenly across multiple servers.",
    "distractors": [
      "To store frequently accessed data in memory.",
      "To compress network data for faster transmission.",
      "To monitor the health of client applications."
    ],
    "context": "A load balancer improves system scalability by distributing client requests to multiple backend servers evenly.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Scalability & Load Balancing",
    "subtopic": "Scalability",
    "question": "What does horizontal scaling refer to in system design?",
    "correct_answer": "Adding more machines or servers to handle increased load.",
    "distractors": [
      "Upgrading the CPU or RAM of a single machine.",
      "Caching frequently used data to speed up requests.",
      "Using load balancers to monitor traffic."
    ],
    "context": "Horizontal scaling involves adding more servers, unlike vertical scaling which upgrades existing hardware.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Caching strategies",
    "subtopic": "LRU Cache",
    "question": "What principle does the Least Recently Used (LRU) cache eviction policy follow?",
    "correct_answer": "It removes the least recently accessed items first when the cache is full.",
    "distractors": [
      "It removes the most frequently accessed items first.",
      "It clears the entire cache at regular intervals.",
      "It removes random items when cache reaches capacity."
    ],
    "context": "LRU caching evicts items that have not been used recently to free up space for new data.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Scalability & Load Balancing",
    "subtopic": "Load Balancing",
    "question": "Which load balancing algorithm distributes traffic to the server with the fewest active connections?",
    "correct_answer": "Least Connections algorithm.",
    "distractors": [
      "Round Robin algorithm.",
      "Random Selection algorithm.",
      "Weighted Response Time algorithm."
    ],
    "context": "The Least Connections algorithm directs traffic to the server with the least active requests to balance load efficiently.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Caching strategies",
    "subtopic": "LRU Cache",
    "question": "Which data structure is commonly used to implement an efficient LRU cache?",
    "correct_answer": "A combination of a doubly linked list and a hash map.",
    "distractors": [
      "A single queue data structure.",
      "A simple array and sorting algorithm.",
      "A binary search tree."
    ],
    "context": "An LRU cache is implemented with a hash map for fast access and a doubly linked list to maintain order of usage.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Scalability & Load Balancing",
    "subtopic": "Scalability",
    "question": "What is vertical scaling in system architecture?",
    "correct_answer": "Increasing the resources like CPU or RAM of an existing machine to handle more load.",
    "distractors": [
      "Adding more servers to the system.",
      "Distributing traffic evenly among servers.",
      "Caching data to reduce latency."
    ],
    "context": "Vertical scaling upgrades the capacity of a single machine rather than adding more machines.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Caching strategies",
    "subtopic": "LRU Cache",
    "question": "Why is the LRU cache preferred over FIFO in many real-world applications?",
    "correct_answer": "Because LRU evicts the least recently used items, improving cache hit rate for frequently accessed data.",
    "distractors": [
      "Because FIFO is harder to implement than LRU.",
      "Because LRU evicts items at random for better distribution.",
      "Because FIFO always removes the most recently used items."
    ],
    "context": "LRU cache better retains data that is more likely to be reused, optimizing performance.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Scalability & Load Balancing",
    "subtopic": "Load Balancing",
    "question": "What is a common health check mechanism used by load balancers?",
    "correct_answer": "Periodically sending requests to backend servers to verify they are responsive.",
    "distractors": [
      "Logging all client requests to the server.",
      "Encrypting data transmitted to the servers.",
      "Caching responses from servers for quick access."
    ],
    "context": "Load balancers monitor backend server health by performing regular health checks to avoid routing traffic to down servers.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Caching strategies",
    "subtopic": "LRU Cache",
    "question": "What is the time complexity of accessing an item in an LRU cache implemented with a hashmap and doubly linked list?",
    "correct_answer": "O(1) for both get and put operations.",
    "distractors": [
      "O(log n) for get and O(n) for put.",
      "O(n) for both get and put.",
      "O(n log n) for get and O(1) for put."
    ],
    "context": "Using a hashmap and doubly linked list allows LRU cache operations to be performed in constant time.",
    "difficulty": "advanced",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Scalability & Load Balancing",
    "subtopic": "Scalability",
    "question": "Which of the following is a drawback of horizontal scaling?",
    "correct_answer": "Increased complexity in distributed system management and data consistency.",
    "distractors": [
      "Limited by hardware capacity of a single machine.",
      "Single point of failure due to one machine dependency.",
      "Unable to balance traffic between servers."
    ],
    "context": "Horizontal scaling improves capacity but adds complexity like synchronization and distributed system challenges.",
    "difficulty": "advanced",
    "type": "mcq"
  },
  {
"goal": "Amazon SDE",
"topic": "System Design",
"subtopic": "Scalability",
"question": "Which of the following best describes 'horizontal scaling' in a system design context?",
"correct_answer": "Adding more machines (servers) to distribute the load.",
"distractors": [
"Upgrading existing machines with more powerful CPUs or RAM.",
"Optimizing database queries to run faster.",
"Reducing the number of features in an application."
],
"context": "Horizontal scaling, also known as scaling out, involves adding more nodes (servers, instances) to a system. This approach distributes the workload across multiple machines, increasing the system's capacity and throughput without necessarily making individual machines more powerful.",
"difficulty": "beginner",
"type": "mcq"
},
{
"goal": "Amazon SDE",
"topic": "System Design",
"subtopic": "Load Balancing",
"question": "What is the primary function of a Load Balancer in a distributed system?",
"correct_answer": "To distribute incoming network traffic across multiple servers.",
"distractors": [
"To store frequently accessed data for faster retrieval.",
"To ensure all data is replicated across different regions.",
"To manage user authentication and authorization."
],
"context": "Load balancers act as a reverse proxy, sitting in front of a group of servers and distributing client requests across them. This improves the responsiveness and availability of applications by preventing any single server from becoming a bottleneck and ensuring even resource utilization.",
"difficulty": "beginner",
"type": "mcq"
},
{
"goal": "Amazon SDE",
"topic": "System Design",
"subtopic": "Caching strategies (LRU Cache)",
"question": "When designing a cache, which eviction policy removes the item that has not been accessed for the longest period of time?",
"correct_answer": "Least Recently Used (LRU)",
"distractors": [
"Least Frequently Used (LFU)",
"First-In, First-Out (FIFO)",
"Random Replacement (RR)"
],
"context": "The LRU (Least Recently Used) cache eviction policy discards the least recently used items first. This strategy assumes that items used recently are more likely to be used again soon, making it efficient for many access patterns.",
"difficulty": "beginner",
"type": "mcq"
},
{
"goal": "Amazon SDE",
"topic": "System Design",
"subtopic": "Scalability & Load Balancing",
"question": "In a highly concurrent web application, if a database becomes a bottleneck, which scaling strategy is generally not effective for immediate relief?",
"correct_answer": "Vertical scaling the application servers.",
"distractors": [
"Adding read replicas to the database.",
"Implementing sharding for the database.",
"Optimizing database queries and indexing."
],
"context": "Vertical scaling application servers would increase their individual capacity but wouldn't directly address a database bottleneck. Database-specific scaling solutions like read replicas (for read-heavy workloads), sharding (distributing data across multiple DB instances), or query optimization are more effective for database bottlenecks.",
"difficulty": "intermediate",
"type": "mcq"
},
{
"goal": "Amazon SDE",
"topic": "System Design",
"subtopic": "Caching strategies (LRU Cache)",
"question": "An LRU Cache is typically implemented using a combination of which two data structures to achieve O(1) time complexity for get and put operations?",
"correct_answer": "Hash Map (or Hashtable) and Doubly Linked List",
"distractors": [
"Array and Stack",
"Binary Search Tree and Queue",
"Trie and Singly Linked List"
],
"context": "A hash map provides O(1) average time complexity for checking if an item exists in the cache and retrieving its corresponding node. A doubly linked list allows for O(1) removal of the least recently used item from the tail and O(1) insertion/movement of an item to the head (most recently used position).",
"difficulty": "intermediate",
"type": "mcq"
},
{
"goal": "Amazon SDE",
"topic": "System Design",
"subtopic": "Load Balancing",
"question": "Which load balancing algorithm distributes requests to servers based on the number of active connections each server currently has, sending new requests to the server with the fewest connections?",
"correct_answer": "Least Connection",
"distractors": [
"Round Robin",
"IP Hash",
"Weighted Round Robin"
],
"context": "The Least Connection load balancing algorithm dynamically distributes incoming requests to the server with the fewest active connections. This method is effective in ensuring an even distribution of load, especially when requests vary widely in processing time.",
"difficulty": "intermediate",
"type": "mcq"
},
{
"goal": "Amazon SDE",
"topic": "System Design",
"subtopic": "Scalability",
"question": "When designing a highly available and scalable system, what is the role of 'statelessness' in application servers?",
"correct_answer": "It allows any request to be handled by any server, simplifying scaling and recovery from failures.",
"distractors": [
"It requires servers to store all user session data locally.",
"It makes the system vulnerable to single points of failure.",
"It increases the complexity of load balancing algorithms."
],
"context": "Stateless application servers do not store any client session data locally. This means that any server can handle any request, making it easy to add or remove servers (horizontal scaling) and to recover from server failures without losing session data, as session state is managed externally (e.g., in a distributed cache or database).",
"difficulty": "advance",
"type": "mcq"
},
{
"goal": "Amazon SDE",
"topic": "System Design",
"subtopic": "Caching strategies",
"question": "What is the 'cache-aside' caching strategy, and what are its implications for data consistency?",
"correct_answer": "Application reads from cache first, then database if not found; writes to database first, then invalidates or updates cache. It prioritizes data freshness from DB.",
"distractors": [
"Application writes directly to cache, then asynchronously updates the database; potential for data loss on cache failure.",
"Database writes to cache synchronously; cache acts as the primary data store.",
"Cache only stores data that never changes, reducing the need for invalidation."
],
"context": "Cache-aside is a common caching pattern. The application is responsible for fetching data from the cache. If data is not found, it fetches from the database, and then populates the cache. For writes, the application writes to the database first, then invalidates or updates the corresponding entry in the cache. This ensures the database is always the source of truth, prioritizing data consistency.",
"difficulty": "advance",
"type": "mcq"
},
{
"goal": "Amazon SDE",
"topic": "System Design",
"subtopic": "Load Balancing",
"question": "In the context of load balancing, what is 'session stickiness' or 'session affinity', and why is it sometimes necessary?",
"correct_answer": "Directing subsequent requests from the same client to the same server; necessary for applications with stateful sessions.",
"distractors": [
"A feature that ensures all requests go to the fastest server.",
"A mechanism to prevent denial-of-service attacks.",
"A technique for distributing requests evenly without regard to client identity."
],
"context": "Session stickiness ensures that all requests from a particular client (e.g., within a single user session) are consistently routed to the same backend server. This is necessary for applications where server-side session state is maintained, as moving clients between servers would cause loss of session data, breaking the application's functionality.",
"difficulty": "advance",
"type": "mcq"
},
{
"goal": "Amazon SDE",
"topic": "System Design",
"subtopic": "Caching strategies",
"question": "Beyond LRU, LFU, and FIFO, what is a key consideration when choosing a caching strategy for a large-scale distributed system?",
"correct_answer": "Cache coherence and consistency mechanisms for distributed caches.",
"distractors": [
"The choice of programming language for the application.",
"The total number of CPU cores available on a single server.",
"The color scheme of the user interface."
],
"context": "In a distributed system, where multiple application instances might be accessing or updating shared data that is also cached, maintaining cache coherence (ensuring all cached copies of data are consistent) becomes a significant challenge. Strategies for invalidation, replication, and strong/eventual consistency need to be carefully considered.",
"difficulty": "advance",
"type": "mcq"
},
{
    "goal": "Amazon SDE",
    "topic": "System Design",
    "subtopic": "Scalability & Load Balancing",
    "question": "What is the primary difference between horizontal and vertical scaling?",
    "correct_answer": "Horizontal scaling adds more servers, vertical scaling increases server capacity",
    "distractors": [
      "Horizontal scaling increases CPU cores, vertical scaling adds more RAM",
      "Horizontal scaling is cheaper, vertical scaling is more expensive",
      "Horizontal scaling is for databases, vertical scaling is for web servers"
    ],
    "context": "Horizontal scaling (scale out) involves adding more servers to handle increased load by distributing the workload across multiple machines. Vertical scaling (scale up) involves increasing the capacity of existing servers by adding more CPU, RAM, or storage to handle more load on the same machine.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "System Design",
    "subtopic": "Load Balancing",
    "question": "Which load balancing algorithm distributes requests based on the current load of each server?",
    "correct_answer": "Least Connections",
    "distractors": [
      "Round Robin",
      "Weighted Round Robin",
      "IP Hash"
    ],
    "context": "Least Connections algorithm routes new requests to the server with the fewest active connections, effectively distributing load based on current server utilization. This approach works well when requests have varying processing times, unlike Round Robin which simply rotates through servers regardless of their current load.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Data Structures",
    "subtopic": "Caching strategies (LRU Cache)",
    "question": "What data structures are typically used to implement an LRU Cache efficiently?",
    "correct_answer": "HashMap and Doubly Linked List",
    "distractors": [
      "Array and Stack",
      "Binary Search Tree and Queue",
      "HashSet and Priority Queue"
    ],
    "context": "LRU Cache implementation uses a HashMap for O(1) key lookup and a Doubly Linked List to maintain the order of access. The HashMap stores key-value pairs with pointers to list nodes, while the doubly linked list allows O(1) insertion, deletion, and movement of nodes to track the least recently used items.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "System Design",
    "subtopic": "Load Balancing",
    "question": "What is the main advantage of using a Layer 7 (Application Layer) load balancer over a Layer 4 (Transport Layer) load balancer?",
    "correct_answer": "Can make routing decisions based on application content and HTTP headers",
    "distractors": [
      "Has lower latency for all types of traffic",
      "Requires less computational resources",
      "Supports more concurrent connections"
    ],
    "context": "Layer 7 load balancers operate at the application layer and can inspect HTTP headers, URLs, and content to make intelligent routing decisions. This allows for advanced features like routing based on URL paths, cookie-based session affinity, and content-based load distribution, unlike Layer 4 balancers which only see IP addresses and ports.",
    "difficulty": "advanced",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Data Structures",
    "subtopic": "Caching strategies (LRU Cache)",
    "question": "In an LRU Cache implementation, when does a cache miss occur?",
    "correct_answer": "When the requested key is not found in the cache",
    "distractors": [
      "When the cache is full and needs eviction",
      "When the most recently used item is accessed",
      "When the cache size exceeds the memory limit"
    ],
    "context": "A cache miss occurs when the requested key is not present in the cache, requiring the system to fetch the data from the original data source. This is different from cache eviction (which happens when cache is full) or cache hits (when data is found). Cache misses trigger the expensive operation of retrieving data from slower storage.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "System Design",
    "subtopic": "Scalability",
    "question": "What is database sharding in the context of scalability?",
    "correct_answer": "Horizontally partitioning data across multiple database instances",
    "distractors": [
      "Creating read replicas of the master database",
      "Vertically splitting tables by columns",
      "Implementing database connection pooling"
    ],
    "context": "Database sharding is a horizontal partitioning technique where data is distributed across multiple database instances based on a shard key. Each shard contains a subset of the total data, allowing the system to scale beyond the limits of a single database server by distributing both data storage and query load across multiple machines.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Data Structures",
    "subtopic": "Caching strategies (LRU Cache)",
    "question": "What is the time complexity for both GET and PUT operations in a well-implemented LRU Cache?",
    "correct_answer": "O(1) for both operations",
    "distractors": [
      "O(1) for GET, O(log n) for PUT",
      "O(log n) for both operations",
      "O(n) for both operations"
    ],
    "context": "A properly implemented LRU Cache using HashMap and Doubly Linked List achieves O(1) time complexity for both GET and PUT operations. The HashMap provides O(1) lookup, while the doubly linked list allows O(1) insertion, deletion, and movement of nodes to maintain the LRU order without scanning through elements.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "System Design",
    "subtopic": "Load Balancing",
    "question": "What problem does session affinity (sticky sessions) solve in load-balanced environments?",
    "correct_answer": "Ensures user requests are routed to the same server to maintain session state",
    "distractors": [
      "Prevents servers from being overloaded with too many connections",
      "Reduces network latency by routing to geographically closer servers",
      "Balances load evenly across all available servers"
    ],
    "context": "Session affinity ensures that all requests from a particular user session are routed to the same server instance. This solves the problem of session state management in stateful applications where user session data is stored locally on servers rather than in a shared store, preventing users from losing their session when load balancer routes them to different servers.",
    "difficulty": "advanced",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "System Design",
    "subtopic": "Caching strategies",
    "question": "What is the main difference between write-through and write-back caching strategies?",
    "correct_answer": "Write-through writes to cache and storage simultaneously, write-back writes to storage later",
    "distractors": [
      "Write-through is faster for reads, write-back is faster for writes",
      "Write-through uses LRU eviction, write-back uses FIFO eviction",
      "Write-through caches reads only, write-back caches writes only"
    ],
    "context": "Write-through caching writes data to both cache and persistent storage simultaneously, ensuring data consistency but with higher write latency. Write-back (write-behind) caching writes data to cache immediately and to persistent storage asynchronously later, providing better write performance but with risk of data loss if cache fails before write-back occurs.",
    "difficulty": "advanced",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "System Design",
    "subtopic": "Scalability",
    "question": "What is the primary benefit of using a Content Delivery Network (CDN) for scalability?",
    "correct_answer": "Reduces latency by serving content from geographically distributed edge servers",
    "distractors": [
      "Increases server processing capacity for dynamic content",
      "Provides automatic database scaling and sharding",
      "Enables real-time data synchronization across regions"
    ],
    "context": "CDNs improve scalability by caching and serving static content (images, CSS, JS files) from edge servers located closer to users geographically. This reduces latency, decreases load on origin servers, and improves user experience by serving content from the nearest geographic location, effectively distributing the content delivery load globally.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
   {
    "goal": "Amazon SDE",
    "topic": "Database design basics",
    "subtopic": "SQL Databases",
    "question": "What is a primary key in a relational database?",
    "correct_answer": "A unique identifier for each record in a database table.",
    "distractors": [
      "A key used to encrypt data.",
      "A column that can contain duplicate values.",
      "A temporary key used during transactions."
    ],
    "context": "Primary keys uniquely identify each row in a relational database table to maintain data integrity.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Database design basics",
    "subtopic": "NoSQL Databases",
    "question": "Which NoSQL database type stores data as key-value pairs?",
    "correct_answer": "Key-Value stores.",
    "distractors": [
      "Document stores.",
      "Graph databases.",
      "Column-family stores."
    ],
    "context": "Key-Value NoSQL databases organize data as simple key and value pairs for fast retrieval.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "API design & RESTful services",
    "subtopic": "REST principles",
    "question": "Which HTTP method is typically used to update existing resources in a RESTful API?",
    "correct_answer": "PUT.",
    "distractors": [
      "GET.",
      "POST.",
      "DELETE."
    ],
    "context": "PUT requests are used to update or replace an existing resource in RESTful APIs.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "API design & RESTful services",
    "subtopic": "Statelessness",
    "question": "What does it mean that RESTful APIs are stateless?",
    "correct_answer": "Each API request contains all information needed for processing without relying on stored context.",
    "distractors": [
      "The server stores client session data between requests.",
      "The client must maintain a continuous connection with the server.",
      "APIs only support read operations."
    ],
    "context": "RESTful APIs are designed so that each request is independent and stateless to simplify scalability.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Database design basics",
    "subtopic": "Normalization",
    "question": "What is the main goal of database normalization?",
    "correct_answer": "To reduce data redundancy and improve data integrity.",
    "distractors": [
      "To encrypt sensitive data in the database.",
      "To speed up query processing by duplicating data.",
      "To create backups of the database regularly."
    ],
    "context": "Normalization organizes database tables to minimize duplicate data and ensure consistency.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "API design & RESTful services",
    "subtopic": "HTTP Status Codes",
    "question": "What does HTTP status code 404 indicate in RESTful APIs?",
    "correct_answer": "The requested resource was not found on the server.",
    "distractors": [
      "The request was successful and resource created.",
      "The server encountered an internal error.",
      "Authentication failed due to invalid credentials."
    ],
    "context": "A 404 status code means the client requested a resource that does not exist on the server.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Database design basics",
    "subtopic": "ACID properties",
    "question": "Which ACID property ensures that a transaction is fully completed or fully rolled back?",
    "correct_answer": "Atomicity.",
    "distractors": [
      "Durability.",
      "Consistency.",
      "Isolation."
    ],
    "context": "Atomicity guarantees that a transaction is indivisible and either fully applies or not at all.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "API design & RESTful services",
    "subtopic": "Idempotency",
    "question": "Which HTTP methods in RESTful APIs are idempotent?",
    "correct_answer": "GET, PUT, and DELETE.",
    "distractors": [
      "POST and PATCH.",
      "POST only.",
      "All HTTP methods."
    ],
    "context": "Idempotent methods can be called multiple times without changing the result beyond the initial application.",
    "difficulty": "advanced",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Database design basics",
    "subtopic": "CAP theorem",
    "question": "According to the CAP theorem, which two properties can a distributed database guarantee simultaneously?",
    "correct_answer": "Consistency and Availability, or Consistency and Partition tolerance, but not all three.",
    "distractors": [
      "Consistency, Availability, and Partition tolerance simultaneously.",
      "Only Availability.",
      "Only Partition tolerance."
    ],
    "context": "CAP theorem states a distributed system cannot guarantee Consistency, Availability, and Partition tolerance all at once.",
    "difficulty": "advanced",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "API design & RESTful services",
    "subtopic": "Versioning",
    "question": "Why is API versioning important in RESTful service design?",
    "correct_answer": "It allows evolving the API without breaking existing clients.",
    "distractors": [
      "It restricts the number of API calls clients can make.",
      "It improves network security by encrypting requests.",
      "It reduces server load by limiting data size."
    ],
    "context": "Versioning enables backward compatibility and controlled updates in APIs.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "System Design",
    "subtopic": "Database Design (SQL)",
    "question": "Which of the following properties is a core principle for transactions in a traditional SQL relational database?",
    "correct_answer": "Atomicity, Consistency, Isolation, Durability (ACID)",
    "distractors": [
      "Availability, Scalability, Partition Tolerance (CAP)",
      "Flexibility, Readability, Usability, Maintainability (FRUM)",
      "Speed, Simplicity, Security, Cost-effectiveness (SSSC)"
    ],
    "context": "ACID properties are fundamental to ensuring reliable transaction processing in relational database management systems. They guarantee that database transactions are processed reliably.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "System Design",
    "subtopic": "API Design & RESTful services",
    "question": "In RESTful API design, which HTTP method is typically used to retrieve resource data from the server without causing any side effects?",
    "correct_answer": "GET",
    "distractors": [
      "POST",
      "PUT",
      "DELETE"
    ],
    "context": "The GET method is used to request data from a specified resource. It should only retrieve data and have no other effect on the data.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "System Design",
    "subtopic": "Database Design (NoSQL)",
    "question": "Which type of database is generally chosen when dealing with very large volumes of unstructured or semi-structured data that requires high availability and horizontal scalability?",
    "correct_answer": "NoSQL Database",
    "distractors": [
      "Relational SQL Database",
      "In-memory Database",
      "Graph Database (specific type of NoSQL but less general for 'unstructured/semi-structured large volumes')"
    ],
    "context": "NoSQL databases (like document, key-value, columnar, and graph databases) are designed to handle massive volumes of data, scale horizontally, and manage flexible schema data, making them suitable for unstructured and semi-structured datasets.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "System Design",
    "subtopic": "API Design & RESTful services",
    "question": "A well-designed RESTful API should aim to be 'stateless'. What does 'statelessness' imply for the API server?",
    "correct_answer": "The server does not store any client context between requests; each request must contain all necessary information.",
    "distractors": [
      "The server stores all client session information locally.",
      "The server can only handle one request at a time.",
      "The API only uses UDP for communication."
    ],
    "context": "Statelessness is a core constraint of REST. It means that the server holds no client state from one request to the next. Every request from a client to the server must contain all of the information necessary to understand the request, and cannot take advantage of any stored context on the server.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "System Design",
    "subtopic": "Database Design (SQL)",
    "question": "In SQL database design, what is 'normalization', and why is it performed?",
    "correct_answer": "Organizing data to reduce redundancy and improve data integrity.",
    "distractors": [
      "Combining multiple tables into a single large table for faster queries.",
      "Encrypting sensitive data within the database.",
      "Creating indexes on all columns for faster search."
    ],
    "context": "Database normalization is the process of structuring a relational database in accordance with a series of so-called normal forms in order to reduce data redundancy and improve data integrity, allowing for more flexible querying and easier maintenance.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "System Design",
    "subtopic": "API Design & RESTful services",
    "question": "When designing a REST API, what is the best practice for indicating that a resource has been successfully created on the server?",
    "correct_answer": "Return HTTP status code 201 Created along with the URI of the newly created resource in the Location header.",
    "distractors": [
      "Return HTTP status code 200 OK with the full resource representation.",
      "Return HTTP status code 204 No Content.",
      "Return HTTP status code 400 Bad Request."
    ],
    "context": "According to REST best practices, when a POST request successfully creates a new resource, the server should respond with a 201 Created status code. Additionally, the 'Location' header in the response should contain the URI (Uniform Resource Identifier) of the newly created resource.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "System Design",
    "subtopic": "Database Design (NoSQL)",
    "question": "Consider a highly distributed NoSQL database system that prioritizes Availability and Partition Tolerance over strong Consistency (A and P in CAP theorem). What type of consistency model would it typically adhere to?",
    "correct_answer": "Eventual Consistency",
    "distractors": [
      "Strong Consistency (ACID)",
      "Immediate Consistency",
      "Transactional Consistency"
    ],
    "context": "In a distributed NoSQL database that favors Availability and Partition Tolerance (as per the CAP theorem), immediate consistency across all nodes is often sacrificed. Instead, it aims for 'eventual consistency,' where data will eventually become consistent across all replicas, but there might be a delay.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "System Design",
    "subtopic": "API Design & RESTful services",
    "question": "What is the recommended approach for versioning a RESTful API to manage changes over time?",
    "correct_answer": "Using the URI path (e.g., /api/v1/resource) or custom request headers.",
    "distractors": [
      "Using different HTTP methods for each version.",
      "Putting version numbers in the request body only.",
      "Relying solely on client-side updates without server-side versioning."
    ],
    "context": "API versioning is crucial for evolving APIs without breaking existing client integrations. Common strategies include embedding the version in the URI path (e.g., `/api/v1/users`), using custom request headers (e.g., `X-Api-Version: 1`), or using Accept headers (content negotiation).",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "System Design",
    "subtopic": "Database Design (SQL/NoSQL)",
    "question": "For an e-commerce platform where product categories and product details have a clear, rigid, and complex relationship, and strong transactional integrity is paramount, which database type would generally be the better initial choice?",
    "correct_answer": "Relational SQL Database",
    "distractors": [
      "Key-Value NoSQL Database",
      "Document NoSQL Database",
      "Wide-Column NoSQL Database"
    ],
    "context": "Relational SQL databases excel at managing complex, structured data with well-defined relationships between entities (like products and categories). Their support for transactions with ACID properties is crucial for maintaining data integrity in scenarios like order processing and inventory management.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "System Design",
    "subtopic": "API Design & RESTful services",
    "question": "When designing an API for resource modification, what is the key difference between using the HTTP PUT method and the HTTP PATCH method?",
    "correct_answer": "PUT replaces the entire resource with the new representation, while PATCH applies partial modifications to the resource.",
    "distractors": [
      "PUT creates a new resource, while PATCH updates an existing one.",
      "PUT is idempotent, while PATCH is not.",
      "PUT is for binary data, while PATCH is for text data."
    ],
    "context": "HTTP PUT is used to update an entire resource; the client sends a complete representation of the resource, which replaces the existing one. HTTP PATCH, on the other hand, is used for partial updates, allowing the client to send only the changes to be applied to the resource.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Database Design",
    "subtopic": "Database design basics (SQL/NoSQL)",
    "question": "What is the main difference between ACID properties in SQL databases and BASE properties in NoSQL databases?",
    "correct_answer": "ACID ensures strong consistency, BASE allows eventual consistency",
    "distractors": [
      "ACID is for horizontal scaling, BASE is for vertical scaling",
      "ACID supports JSON documents, BASE supports relational tables",
      "ACID is used for read operations, BASE is used for write operations"
    ],
    "context": "ACID (Atomicity, Consistency, Isolation, Durability) properties in SQL databases guarantee strong consistency and data integrity at the cost of availability and partition tolerance. BASE (Basically Available, Soft state, Eventual consistency) in NoSQL databases prioritizes availability and partition tolerance, accepting eventual consistency where data may be temporarily inconsistent across nodes but will eventually converge.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "API Design",
    "subtopic": "API design & RESTful services",
    "question": "Which HTTP method should be used to create a new resource in a RESTful API?",
    "correct_answer": "POST",
    "distractors": [
      "GET",
      "PUT",
      "PATCH"
    ],
    "context": "In RESTful API design, POST method is used to create new resources. POST requests are sent to a collection endpoint (like /users) and the server assigns a new identifier to the created resource. PUT is used for creating or updating with a known identifier, GET for retrieval, and PATCH for partial updates of existing resources.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Database Design",
    "subtopic": "Database design basics (SQL/NoSQL)",
    "question": "When would you choose a document-based NoSQL database over a relational SQL database?",
    "correct_answer": "When dealing with semi-structured data and requiring flexible schema evolution",
    "distractors": [
      "When you need complex joins and ACID transactions",
      "When data has strong relationships and referential integrity",
      "When you need SQL query capabilities and reporting"
    ],
    "context": "Document-based NoSQL databases like MongoDB are ideal for semi-structured data with varying schemas, rapid development cycles requiring flexible schema evolution, and applications that need to scale horizontally. They excel when data doesn't fit well into rigid table structures and when you need to store nested, hierarchical data formats like JSON documents.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "API Design",
    "subtopic": "API design & RESTful services",
    "question": "What is the principle of statelessness in RESTful services?",
    "correct_answer": "Each request must contain all information needed to process it",
    "distractors": [
      "The server maintains session state between requests",
      "Only GET requests are allowed in the API",
      "The API doesn't store any data permanently"
    ],
    "context": "Statelessness in REST means each HTTP request from client to server must contain all the information necessary to understand and process the request. The server should not store any client context between requests. This constraint improves scalability, reliability, and allows for better load distribution since any server can handle any request without depending on previous interactions.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Database Design",
    "subtopic": "Database design basics (SQL/NoSQL)",
    "question": "What is database normalization and why is it important in relational database design?",
    "correct_answer": "Process of organizing data to reduce redundancy and improve data integrity",
    "distractors": [
      "Process of converting NoSQL data to SQL format",
      "Process of encrypting sensitive database information",
      "Process of partitioning data across multiple servers"
    ],
    "context": "Database normalization is the process of organizing data in a relational database to minimize redundancy and dependency. It involves dividing large tables into smaller, related tables and defining relationships between them. Normalization reduces data duplication, saves storage space, and ensures data integrity by preventing update anomalies, insertion anomalies, and deletion anomalies.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "API Design",
    "subtopic": "API design & RESTful services",
    "question": "What HTTP status code should be returned when a requested resource is not found in a RESTful API?",
    "correct_answer": "404 Not Found",
    "distractors": [
      "400 Bad Request",
      "401 Unauthorized",
      "500 Internal Server Error"
    ],
    "context": "HTTP status code 404 Not Found should be returned when the requested resource cannot be found on the server. This indicates that the server cannot find the requested resource at the specified URL. 400 is for malformed requests, 401 for authentication issues, and 500 for server-side errors. Proper status codes help clients understand the outcome of their requests.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Database Design",
    "subtopic": "Database design basics (SQL/NoSQL)",
    "question": "What is the CAP theorem and how does it apply to distributed database systems?",
    "correct_answer": "You can only guarantee two out of three: Consistency, Availability, and Partition tolerance",
    "distractors": [
      "You must implement all three: Caching, Authentication, and Performance",
      "You can achieve unlimited: Capacity, Availability, and Performance",
      "You need to balance: Cost, Accuracy, and Processing speed"
    ],
    "context": "The CAP theorem states that in a distributed database system, you can only simultaneously guarantee two out of three properties: Consistency (all nodes see the same data), Availability (system remains operational), and Partition tolerance (system continues despite network failures). This fundamental constraint influences database architecture decisions, with SQL databases typically choosing consistency over availability, while NoSQL databases often prioritize availability and partition tolerance.",
    "difficulty": "advanced",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "API Design",
    "subtopic": "API design & RESTful services",
    "question": "What is the difference between PUT and PATCH methods in RESTful APIs?",
    "correct_answer": "PUT replaces the entire resource, PATCH updates specific fields",
    "distractors": [
      "PUT is for creating resources, PATCH is for deleting resources",
      "PUT is idempotent, PATCH is not idempotent",
      "PUT requires authentication, PATCH does not"
    ],
    "context": "In RESTful APIs, PUT method is used to replace an entire resource with the provided data, requiring all fields to be specified. PATCH method is used for partial updates, modifying only the specified fields while leaving other fields unchanged. Both methods are typically idempotent, meaning multiple identical requests should have the same effect as a single request.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Database Design",
    "subtopic": "Database design basics (SQL/NoSQL)",
    "question": "What is denormalization and when would you apply it in database design?",
    "correct_answer": "Intentionally introducing redundancy to improve query performance",
    "distractors": [
      "Removing all foreign key constraints from tables",
      "Converting relational data to document format",
      "Encrypting all sensitive data fields"
    ],
    "context": "Denormalization is the process of intentionally introducing redundancy into a normalized database to improve read performance. It involves combining data from multiple tables into fewer tables, reducing the need for expensive JOIN operations. Denormalization is applied when read performance is more critical than storage efficiency, typically in data warehousing, reporting systems, or high-traffic applications where query speed is paramount.",
    "difficulty": "advanced",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "API Design",
    "subtopic": "API design & RESTful services",
    "question": "What is API versioning and why is it important in RESTful service design?",
    "correct_answer": "Managing changes to API structure while maintaining backward compatibility",
    "distractors": [
      "Tracking the number of API calls made by clients",
      "Implementing security measures for API endpoints",
      "Optimizing API response times and performance"
    ],
    "context": "API versioning is the practice of managing changes to an API's structure, functionality, or data format while maintaining backward compatibility for existing clients. It allows developers to introduce new features, fix bugs, or modify behavior without breaking existing integrations. Common versioning strategies include URL path versioning (/v1/users), header versioning, or query parameter versioning, ensuring smooth evolution of the API over time.",
    "difficulty": "advanced",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Distributed systems fundamentals",
    "subtopic": "Basics",
    "question": "What is a key characteristic of a distributed system?",
    "correct_answer": "Multiple independent computers appear to the user as a single coherent system.",
    "distractors": [
      "All data is stored on a single central server.",
      "Only one computer processes all requests.",
      "Computers operate completely independently without communication."
    ],
    "context": "Distributed systems consist of multiple independent computers working together to provide a unified service.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Distributed systems fundamentals",
    "subtopic": "Consistency Models",
    "question": "What does eventual consistency mean in distributed databases?",
    "correct_answer": "Data updates will propagate and all replicas will become consistent over time.",
    "distractors": [
      "All replicas are updated instantly after a write.",
      "No replication occurs between nodes.",
      "Only the primary node stores data."
    ],
    "context": "Eventual consistency ensures that while replicas may differ temporarily, they converge to the same state eventually.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Distributed systems fundamentals",
    "subtopic": "Fault Tolerance",
    "question": "What is the main purpose of fault tolerance in distributed systems?",
    "correct_answer": "To ensure the system continues operating correctly despite failures of some components.",
    "distractors": [
      "To increase the speed of data processing.",
      "To prevent any hardware failures from occurring.",
      "To centralize control in one node."
    ],
    "context": "Fault tolerance enables distributed systems to handle hardware or software faults without affecting availability.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Distributed systems fundamentals",
    "subtopic": "Scalability",
    "question": "Which of the following best describes horizontal scaling in distributed systems?",
    "correct_answer": "Adding more machines to distribute the workload.",
    "distractors": [
      "Upgrading the hardware of a single machine.",
      "Increasing the bandwidth between existing servers.",
      "Caching frequently accessed data on one machine."
    ],
    "context": "Horizontal scaling adds more machines to a distributed system to handle increased load effectively.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Distributed systems fundamentals",
    "subtopic": "Communication",
    "question": "What role does a consensus algorithm play in distributed systems?",
    "correct_answer": "It helps multiple nodes agree on a single data value or state despite failures.",
    "distractors": [
      "It encrypts data between nodes to ensure privacy.",
      "It balances network traffic evenly among nodes.",
      "It compresses data to reduce transmission size."
    ],
    "context": "Consensus algorithms like Paxos or Raft ensure consistency and agreement across distributed nodes.",
    "difficulty": "advanced",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Distributed systems fundamentals",
    "subtopic": "Latency",
    "question": "Why is network latency a critical factor in distributed systems performance?",
    "correct_answer": "Because communication delays between nodes affect response time and throughput.",
    "distractors": [
      "Because it increases the storage capacity of nodes.",
      "Because it controls the CPU speed of servers.",
      "Because it determines the power consumption of the system."
    ],
    "context": "Network latency impacts how quickly distributed components can communicate, affecting overall system speed.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Distributed systems fundamentals",
    "subtopic": "Partition Tolerance",
    "question": "What does partition tolerance in a distributed system mean?",
    "correct_answer": "The system continues functioning correctly even if communication between some nodes is lost.",
    "distractors": [
      "The system cannot handle any network failures.",
      "The system depends on a single point of failure.",
      "The system stores all data in one location."
    ],
    "context": "Partition tolerance allows distributed systems to remain operational despite network partitions or failures.",
    "difficulty": "advanced",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "System Design",
    "subtopic": "Distributed Systems Fundamentals",
    "question": "According to the CAP theorem, a distributed system can simultaneously guarantee at most two out of which three properties?",
    "correct_answer": "Consistency, Availability, Partition Tolerance",
    "distractors": [
      "Concurrency, Atomicity, Performance",
      "Scalability, Durability, Latency",
      "Reliability, Integrity, Security"
    ],
    "context": "The CAP theorem states that in a distributed system, it's impossible to simultaneously provide more than two out of three guarantees: Consistency (all nodes see the same data at the same time), Availability (every request receives a response, without guarantee of correctness), and Partition Tolerance (the system continues to operate despite network partitions).",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "System Design",
    "subtopic": "Distributed Systems Fundamentals",
    "question": "In a distributed database, which consistency model guarantees that all reads return the most recently written data?",
    "correct_answer": "Strong Consistency",
    "distractors": [
      "Eventual Consistency",
      "Read-your-writes Consistency",
      "Causal Consistency"
    ],
    "context": "Strong consistency ensures that once data is written, any subsequent read operation will always return the most recently updated value. This is typically achieved through mechanisms like two-phase commit or quorum-based writes/reads, often at the cost of availability or latency.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "System Design",
    "subtopic": "Distributed Systems Fundamentals",
    "question": "What is the primary purpose of 'idempotency' in the context of designing distributed APIs or operations?",
    "correct_answer": "Ensuring that performing an operation multiple times has the same effect as performing it once.",
    "distractors": [
      "Making an operation always return a successful response.",
      "Guaranteeing that an operation is executed only by a single server.",
      "Preventing unauthorized access to an operation."
    ],
    "context": "Idempotency means that an operation can be applied multiple times without changing the result beyond the initial application. This is crucial in distributed systems to handle network retries, preventing unintended side effects if a client resends a request due to perceived failure.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "System Design",
    "subtopic": "Distributed Systems Fundamentals",
    "question": "Which distributed consensus algorithm is designed to achieve agreement among multiple servers in a distributed system, even in the presence of failures?",
    "correct_answer": "Paxos or Raft",
    "distractors": [
      "MapReduce",
      "Quicksort",
      "Greedy Algorithm"
    ],
    "context": "Consensus algorithms like Paxos and Raft are fundamental in distributed systems to ensure all nodes agree on a single value or state, even when some nodes fail or messages are lost. They are crucial for building fault-tolerant systems and distributed databases.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "System Design",
    "subtopic": "Distributed Systems Fundamentals",
    "question": "In a distributed transaction, what is the role of the 'coordinator' in a Two-Phase Commit (2PC) protocol?",
    "correct_answer": "To orchestrate the commit or rollback of the transaction across all participating nodes.",
    "distractors": [
      "To store all transaction logs in a centralized location.",
      "To perform the actual database write operations.",
      "To resolve conflicts between concurrent transactions."
    ],
    "context": "The Two-Phase Commit (2PC) protocol is a distributed algorithm that allows all nodes in a distributed system to agree to commit or abort a transaction. The coordinator initiates the 'prepare' phase and, based on participants' votes, decides whether to 'commit' or 'abort' the transaction in the second phase.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "System Design",
    "subtopic": "Distributed Systems Fundamentals",
    "question": "A system is considered 'highly available' if:",
    "correct_answer": "It can continue operating and serving requests despite failures of individual components.",
    "distractors": [
      "It processes requests very quickly (low latency).",
      "It can handle an increasing number of concurrent users by adding more resources.",
      "It strictly maintains data consistency across all replicas at all times."
    ],
    "context": "High availability (HA) refers to the capability of a system to operate continuously without interruption. It is achieved through redundancy, failover mechanisms, and fault tolerance, ensuring that even if parts of the system fail, the overall service remains operational.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "System Design",
    "subtopic": "Distributed Systems Fundamentals",
    "question": "What is 'split-brain' in a distributed system, and why is it problematic?",
    "correct_answer": "When a network partition causes two or more parts of the system to independently believe they are the 'leader' or 'master', leading to conflicting actions and data inconsistency.",
    "distractors": [
      "A situation where a single server handles all requests, causing a bottleneck.",
      "A bug in the load balancer that sends requests to offline servers.",
      "An issue where data is replicated too many times across nodes."
    ],
    "context": "Split-brain occurs in distributed systems with redundant components when a network partition separates them, and each part incorrectly assumes the other has failed. This can lead to both sides trying to take on primary responsibilities, resulting in data corruption, conflicting operations, and system instability.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "System Design",
    "subtopic": "Distributed systems fundamentals",
    "question": "What is the primary purpose of a consensus algorithm in distributed systems?",
    "correct_answer": "To ensure all nodes agree on a single value or decision",
    "distractors": [
      "To balance load across multiple servers",
      "To encrypt data communication between nodes",
      "To optimize network bandwidth usage"
    ],
    "context": "Consensus algorithms like Raft and Paxos are fundamental to distributed systems as they ensure that multiple nodes in a distributed network can agree on a single value or decision, even in the presence of failures. This is crucial for maintaining consistency in distributed databases, leader election, and coordinating distributed transactions where all participating nodes must reach the same conclusion.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "System Design",
    "subtopic": "Distributed systems fundamentals",
    "question": "What does eventual consistency mean in distributed systems?",
    "correct_answer": "Data will become consistent across all nodes given enough time without updates",
    "distractors": [
      "Data is immediately consistent across all nodes after each update",
      "Only the master node maintains consistent data",
      "Data consistency is guaranteed within a single transaction"
    ],
    "context": "Eventual consistency is a consistency model used in distributed systems where the system guarantees that, if no new updates are made to a data item, eventually all nodes will have the same value for that item. This model allows for temporary inconsistencies between replicas but ensures convergence over time, providing better availability and partition tolerance at the cost of immediate consistency.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "System Design",
    "subtopic": "Distributed systems fundamentals",
    "question": "What is the Byzantine Generals Problem in the context of distributed systems?",
    "correct_answer": "The challenge of achieving consensus when some nodes may act maliciously or fail unpredictably",
    "distractors": [
      "The problem of distributing data evenly across multiple nodes",
      "The challenge of maintaining strong consistency in partitioned networks",
      "The issue of coordinating time synchronization across distributed nodes"
    ],
    "context": "The Byzantine Generals Problem illustrates the difficulty of achieving consensus in distributed systems when some participants may be unreliable, malicious, or compromised. It demonstrates the challenge of coordinating actions among distributed nodes when you cannot trust all participants to behave correctly. Byzantine fault tolerance algorithms are designed to handle such scenarios where nodes may send conflicting or incorrect information.",
    "difficulty": "advanced",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "System Design",
    "subtopic": "Distributed systems fundamentals",
    "question": "What is the main trade-off described by the CAP theorem in distributed systems?",
    "correct_answer": "You cannot simultaneously guarantee Consistency, Availability, and Partition tolerance",
    "distractors": [
      "You must choose between Cost, Accuracy, and Performance",
      "You cannot have both Caching and Authentication with Performance",
      "You must balance Concurrency, Atomicity, and Persistence"
    ],
    "context": "The CAP theorem, also known as Brewer's theorem, states that in a distributed data store, you can only simultaneously provide two out of three guarantees: Consistency (all nodes see the same data at the same time), Availability (system remains operational), and Partition tolerance (system continues to operate despite network failures). This fundamental constraint forces architects to make trade-offs based on application requirements.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "System Design",
    "subtopic": "Distributed systems fundamentals",
    "question": "What is the purpose of vector clocks in distributed systems?",
    "correct_answer": "To determine the causal ordering of events across different nodes",
    "distractors": [
      "To synchronize physical time across all distributed nodes",
      "To implement distributed locks for resource coordination",
      "To balance computational load across multiple processors"
    ],
    "context": "Vector clocks are a mechanism for generating a partial ordering of events in a distributed system and detecting causality violations. Each node maintains a vector of logical timestamps, one for each node in the system. When events occur or messages are sent, these vectors are updated to capture the happened-before relationship between events, allowing the system to determine which events are causally related without relying on synchronized physical clocks.",
    "difficulty": "advanced",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "System Design",
    "subtopic": "Distributed systems fundamentals",
    "question": "What is a distributed hash table (DHT) and what problem does it solve?",
    "correct_answer": "A decentralized system for storing and retrieving key-value pairs across multiple nodes",
    "distractors": [
      "A centralized database for managing distributed transactions",
      "A load balancing algorithm for distributing HTTP requests",
      "A security mechanism for encrypting distributed communications"
    ],
    "context": "A Distributed Hash Table (DHT) is a decentralized distributed system that provides a lookup service similar to a hash table. It distributes key-value pairs across multiple nodes in a network, allowing any participating node to efficiently retrieve the value associated with a given key. DHTs solve the problem of scalable data storage and retrieval in peer-to-peer networks without requiring a central coordinator or single point of failure.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "System Design",
    "subtopic": "Distributed systems fundamentals",
    "question": "What is the difference between at-least-once and exactly-once delivery semantics in distributed messaging?",
    "correct_answer": "At-least-once may deliver duplicates, exactly-once guarantees no duplicates or losses",
    "distractors": [
      "At-least-once is faster, exactly-once provides better security",
      "At-least-once uses TCP, exactly-once uses UDP protocol",
      "At-least-once is for synchronous calls, exactly-once is for asynchronous calls"
    ],
    "context": "At-least-once delivery guarantees that messages will be delivered one or more times, potentially resulting in duplicates but ensuring no message loss. Exactly-once delivery guarantees that each message is delivered exactly once with no duplicates or losses. Exactly-once is more complex to implement and typically requires distributed coordination mechanisms like distributed transactions, idempotency keys, or deduplication, making it more expensive than at-least-once delivery.",
    "difficulty": "advanced",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Problem-solving under constraints",
    "subtopic": "Time complexity",
    "question": "What does Big O notation primarily describe in algorithm analysis?",
    "correct_answer": "The upper bound on the time an algorithm takes relative to input size.",
    "distractors": [
      "The exact runtime of the algorithm for a given input.",
      "The space required to store the output only.",
      "The average speed of the computer executing the algorithm."
    ],
    "context": "Big O notation provides an upper bound estimate on the time complexity of an algorithm as input size grows.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Problem-solving under constraints",
    "subtopic": "Space complexity",
    "question": "Which factor primarily affects the space complexity of an algorithm?",
    "correct_answer": "The amount of memory used relative to input size.",
    "distractors": [
      "The number of CPU cycles consumed.",
      "The total time taken to complete the algorithm.",
      "The type of programming language used."
    ],
    "context": "Space complexity measures how memory usage grows with the input size during algorithm execution.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Problem-solving under constraints",
    "subtopic": "Time complexity",
    "question": "What is the time complexity of searching an element in a balanced binary search tree?",
    "correct_answer": "O(log n).",
    "distractors": [
      "O(n).",
      "O(1).",
      "O(n log n)."
    ],
    "context": "Balanced binary search trees allow search operations to complete in logarithmic time relative to input size.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Problem-solving under constraints",
    "subtopic": "Worst-case vs Average-case",
    "question": "Which case does Big O notation typically represent?",
    "correct_answer": "Worst-case scenario of an algorithm's performance.",
    "distractors": [
      "Best-case scenario.",
      "Average-case scenario only.",
      "The case when inputs are empty."
    ],
    "context": "Big O notation generally describes the worst-case time or space complexity to guarantee performance bounds.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Problem-solving under constraints",
    "subtopic": "Space optimization",
    "question": "Which technique helps reduce the space complexity of recursive algorithms?",
    "correct_answer": "Using iterative approaches instead of recursion.",
    "distractors": [
      "Increasing the recursion depth.",
      "Storing all intermediate results without reuse.",
      "Ignoring base cases in recursion."
    ],
    "context": "Converting recursion to iteration can often reduce stack usage, optimizing space complexity.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Problem-solving under constraints",
    "subtopic": "Common complexities",
    "question": "What is the time complexity of Bubble Sort in the worst case?",
    "correct_answer": "O(n^2).",
    "distractors": [
      "O(n log n).",
      "O(n).",
      "O(log n)."
    ],
    "context": "Bubble Sort performs poorly on large inputs with a quadratic worst-case time complexity.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Problem-solving under constraints",
    "subtopic": "Algorithm efficiency",
    "question": "How can you improve the time complexity of searching in an unsorted array?",
    "correct_answer": "Sort the array first and use binary search.",
    "distractors": [
      "Use linear search repeatedly.",
      "Store data in a linked list.",
      "Ignore sorting and search randomly."
    ],
    "context": "Sorting enables efficient binary search with O(log n) time complexity compared to linear search O(n).",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Problem-solving under constraints",
    "subtopic": "Amortized analysis",
    "question": "What does amortized time complexity describe?",
    "correct_answer": "The average time per operation over a worst-case sequence of operations.",
    "distractors": [
      "The best-case time of a single operation.",
      "The time complexity of sorting algorithms.",
      "The time needed for recursive calls."
    ],
    "context": "Amortized analysis averages out expensive operations over many cheap ones to give a practical complexity measure.",
    "difficulty": "advanced",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Problem-solving under constraints",
    "subtopic": "Big O properties",
    "question": "If an algorithm runs in O(n) time and another in O(n^2), which scales better as input size increases?",
    "correct_answer": "The O(n) algorithm scales better with larger inputs.",
    "distractors": [
      "The O(n^2) algorithm scales better.",
      "Both scale equally.",
      "Scaling depends only on hardware."
    ],
    "context": "Lower order Big O notations indicate better scalability and performance for large inputs.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Problem-solving under constraints",
    "subtopic": "Trade-offs",
    "question": "What is the common trade-off between time complexity and space complexity in algorithms?",
    "correct_answer": "Improving time complexity often requires using more memory, and vice versa.",
    "distractors": [
      "Improving time complexity always reduces memory usage.",
      "Space complexity does not affect time complexity.",
      "Algorithms cannot be optimized for either time or space."
    ],
    "context": "Optimizing algorithms often involves balancing faster execution time against increased memory consumption.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
   {
    "goal": "Amazon SDE",
    "topic": "Algorithms",
    "subtopic": "Time and Space Complexity Analysis",
    "question": "Which Big O notation represents an algorithm whose execution time grows proportionally to the square of the input size `N`?",
    "correct_answer": "O(N^2)",
    "distractors": [
      "O(N)",
      "O(log N)",
      "O(N log N)"
    ],
    "context": "Big O notation describes the upper bound of an algorithm's growth rate. O(N^2) indicates that for an input size N, the time or space required grows quadratically, meaning if N doubles, the time/space roughly quadruples.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Algorithms",
    "subtopic": "Problem-solving under Constraints",
    "question": "If an Amazon SDE interview problem has a time limit of 1 second and the input size `N` can be up to 10^5, which time complexity for an algorithm would typically be acceptable?",
    "correct_answer": "O(N log N)",
    "distractors": [
      "O(N^2)",
      "O(2^N)",
      "O(N!)"
    ],
    "context": "For N=10^5, O(N log N) (approx 10^5 * 17) operations are usually acceptable within a 1-second time limit (roughly 10^8 operations/sec). O(N^2) (10^10 operations) and higher complexities would be too slow.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Algorithms",
    "subtopic": "Time and Space Complexity Analysis",
    "question": "What is the space complexity of a recursive algorithm that computes the Nth Fibonacci number (e.g., F(n) = F(n-1) + F(n-2)) without memoization?",
    "correct_answer": "O(N)",
    "distractors": [
      "O(1)",
      "O(log N)",
      "O(N^2)"
    ],
    "context": "A naive recursive Fibonacci algorithm creates a call stack that can go up to depth N in the worst case (for F(N) it calls F(N-1) then F(N-2), etc.). Each function call consumes stack space, leading to O(N) space complexity.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Algorithms",
    "subtopic": "Problem-solving under Constraints",
    "question": "You are asked to sort an array of `N` integers. If the memory limit is extremely tight (e.g., only O(1) auxiliary space allowed), which sorting algorithm would be the most suitable choice?",
    "correct_answer": "Heap Sort",
    "distractors": [
      "Merge Sort",
      "Quick Sort (without careful implementation of in-place partitioning)",
      "Radix Sort"
    ],
    "context": "Heap Sort is an in-place sorting algorithm, meaning it requires only O(1) auxiliary space (excluding the input array itself). Merge Sort requires O(N) auxiliary space, and Quick Sort's recursive calls consume O(log N) to O(N) stack space, while Radix Sort needs O(N+K) where K is radix.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Algorithms",
    "subtopic": "Time and Space Complexity Analysis",
    "question": "For iterating through all elements of a 2D array (matrix) of size `M` rows and `N` columns, what is the time complexity?",
    "correct_answer": "O(M * N)",
    "distractors": [
      "O(M + N)",
      "O(max(M, N))",
      "O(log (M * N))"
    ],
    "context": "To visit every element in a 2D array, you typically need nested loops: one for rows and one for columns. This results in the total number of operations being proportional to the product of rows and columns.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Algorithms",
    "subtopic": "Problem-solving under Constraints",
    "question": "An interviewer asks for a solution with O(N) time complexity. Your proposed solution involves sorting the input array first. What is the typical time complexity of sorting that makes this approach not strictly O(N)?",
    "correct_answer": "O(N log N)",
    "distractors": [
      "O(N)",
      "O(1)",
      "O(N^2)"
    ],
    "context": "Comparison-based sorting algorithms (like Merge Sort, Quick Sort, Heap Sort) generally have a lower bound of O(N log N) time complexity. Therefore, if your solution involves sorting, its overall time complexity will be at least O(N log N), which is not O(N).",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Algorithms",
    "subtopic": "Time and Space Complexity Analysis",
    "question": "When analyzing the time complexity of a hash map operation (e.g., insertion, lookup), what typically causes the worst-case O(N) performance, where N is the number of elements?",
    "correct_answer": "Poor hash function leading to excessive collisions in a single bucket.",
    "distractors": [
      "Using a prime number as the table size.",
      "Inserting elements in random order.",
      "Employing a balanced binary search tree for collision resolution."
    ],
    "context": "While hash map operations typically achieve O(1) on average, the worst-case O(N) occurs if a poorly designed hash function or malicious input causes all (or most) elements to hash to the same bucket. This degenerates the lookup to traversing a linked list (for chaining) or extensive probing (for open addressing).",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Algorithms",
    "subtopic": "Problem-solving under Constraints",
    "question": "You need to process a stream of data where elements arrive one by one, and you must maintain a running median. Given memory constraints, which data structure approach is commonly used to efficiently handle this?",
    "correct_answer": "Two heaps (a min-heap and a max-heap)",
    "distractors": [
      "A single sorted array",
      "A hash table",
      "A balanced binary search tree (without specific heap properties)"
    ],
    "context": "Maintaining a running median efficiently under memory constraints often involves using two heaps: a max-heap for the lower half of the numbers and a min-heap for the upper half. This allows O(log N) insertion and O(1) (or O(log N) depending on implementation) median retrieval, using O(N) space for the heaps.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Algorithms",
    "subtopic": "Time and Space Complexity Analysis",
    "question": "What is the term for the analysis that provides a tight bound on the running time of an algorithm, represented by Big Theta (Θ) notation?",
    "correct_answer": "Average-case complexity",
    "distractors": [
      "Best-case complexity",
      "Worst-case complexity",
      "Amortized complexity"
    ],
    "context": "Big Theta (Θ) notation provides both an upper bound and a lower bound for an algorithm's running time, meaning the algorithm's performance will always fall within a constant factor of Θ(g(N)). This is often used to describe the average-case complexity when it matches the best/worst or represents a general trend.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Algorithms",
    "subtopic": "Problem-solving under Constraints",
    "question": "If a problem requires finding all unique subsets of a given set of `N` elements, and `N` can be up to 20, what is a typical constraint implied by the exponential search space?",
    "correct_answer": "A solution with O(2^N) time complexity would be acceptable.",
    "distractors": [
      "A solution with O(N!) time complexity is expected.",
      "Only O(N) solutions are efficient enough.",
      "The problem can be solved by a greedy approach in O(log N)."
    ],
    "context": "The number of subsets of a set with N elements is 2^N. For N=20, 2^20 is approximately 10^6, which is usually manageable within standard time limits (1-2 seconds). This implies that an exponential time complexity like O(2^N) is acceptable for such a constrained input size.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Algorithms",
    "subtopic": "Time and space complexity analysis (Big O notation)",
    "question": "What is the time complexity of accessing an element by index in an array?",
    "correct_answer": "O(1)",
    "distractors": [
      "O(log n)",
      "O(n)",
      "O(n²)"
    ],
    "context": "Accessing an element by index in an array is a constant time operation O(1) because arrays provide direct access to any element using its memory address calculation. The time taken to access arr[i] is independent of the array size since it involves a simple arithmetic operation: base_address + (index × element_size). This direct memory access makes arrays efficient for random access operations.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "subtopic": "Problem-solving under constraints",
    "topic": "Problem Solving",
    "question": "When solving a problem with limited memory constraints, which approach should you prioritize?",
    "correct_answer": "Space-efficient algorithms even if they have slightly higher time complexity",
    "distractors": [
      "Always choose the fastest time complexity regardless of space usage",
      "Use recursive solutions to minimize code complexity",
      "Implement multiple data structures to optimize for all cases"
    ],
    "context": "Under memory constraints, space-efficient algorithms should be prioritized even if they have slightly higher time complexity. This involves using in-place algorithms, iterative approaches instead of recursion, and data structures with minimal overhead. The trade-off between time and space complexity becomes critical when memory is limited, and often a moderate increase in time complexity is acceptable to achieve significant space savings.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Algorithms",
    "subtopic": "Time and space complexity analysis (Big O notation)",
    "question": "What is the time complexity of the merge step in merge sort?",
    "correct_answer": "O(n)",
    "distractors": [
      "O(1)",
      "O(log n)",
      "O(n log n)"
    ],
    "context": "The merge step in merge sort has O(n) time complexity where n is the total number of elements being merged. During the merge operation, each element from both sorted subarrays is examined exactly once to determine the correct position in the merged result. Since every element must be processed once during the merge, the time complexity is linear with respect to the total number of elements.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Problem Solving",
    "subtopic": "Problem-solving under constraints",
    "question": "When dealing with very large datasets that don't fit in memory, which strategy is most effective?",
    "correct_answer": "External sorting or streaming algorithms that process data in chunks",
    "distractors": [
      "Increase the recursion depth to handle more data",
      "Use hash tables to store all data for faster access",
      "Implement multiple threads to process data simultaneously"
    ],
    "context": "For datasets too large to fit in memory, external sorting and streaming algorithms are most effective. These approaches process data in manageable chunks that fit in available memory, using disk storage for intermediate results. External merge sort, for example, divides data into sorted runs that fit in memory, then merges these runs using minimal memory. Streaming algorithms process data sequentially with bounded memory usage regardless of input size.",
    "difficulty": "advanced",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Algorithms",
    "subtopic": "Time and space complexity analysis (Big O notation)",
    "question": "What is the space complexity of the recursive implementation of quicksort in the worst case?",
    "correct_answer": "O(n)",
    "distractors": [
      "O(1)",
      "O(log n)",
      "O(n²)"
    ],
    "context": "The recursive quicksort has O(n) space complexity in the worst case due to the recursion stack. In the worst case (when the pivot is always the smallest or largest element), quicksort makes n recursive calls, each requiring stack space for local variables and parameters. Although quicksort sorts in-place requiring O(1) auxiliary space for the array itself, the recursion stack can grow to depth n, resulting in O(n) total space complexity.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Problem Solving",
    "subtopic": "Problem-solving under constraints",
    "question": "When optimizing an algorithm for real-time systems with strict latency requirements, what should be the primary focus?",
    "correct_answer": "Predictable and consistent execution time over average case performance",
    "distractors": [
      "Minimizing memory usage at all costs",
      "Achieving the best average case time complexity",
      "Using the most space-efficient data structures"
    ],
    "context": "Real-time systems require predictable and consistent execution times to meet strict deadlines. This means avoiding algorithms with unpredictable worst-case behavior, even if their average performance is excellent. For example, quicksort's O(n²) worst case makes it unsuitable for real-time systems despite its O(n log n) average performance. Instead, algorithms like heapsort with guaranteed O(n log n) time complexity are preferred for their predictability.",
    "difficulty": "advanced",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Algorithms",
    "subtopic": "Time and space complexity analysis (Big O notation)",
    "question": "What is the time complexity of searching for an element in a balanced binary search tree?",
    "correct_answer": "O(log n)",
    "distractors": [
      "O(1)",
      "O(n)",
      "O(n log n)"
    ],
    "context": "Searching in a balanced binary search tree has O(log n) time complexity because the tree's height is maintained at approximately log₂(n) where n is the number of nodes. At each step of the search, the algorithm eliminates half of the remaining possibilities by comparing the target with the current node and choosing the appropriate subtree. This binary decision process results in logarithmic time complexity.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Algorithms",
    "subtopic": "Time and space complexity analysis (Big O notation)",
    "question": "Which notation best describes an algorithm that performs better than O(n²) but worse than O(n log n)?",
    "correct_answer": "O(n^1.5) or O(n√n)",
    "distractors": [
      "O(n³)",
      "O(2^n)",
      "O(log n)"
    ],
    "context": "An algorithm with complexity between O(n log n) and O(n²) would be expressed as O(n^k) where 1 < k < 2, commonly O(n^1.5) or equivalently O(n√n). This complexity class appears in algorithms like shell sort with certain gap sequences. The exponent 1.5 falls between the linear-logarithmic bound of ~1.44 (since log n grows slower than any polynomial) and the quadratic bound of 2.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Problem Solving",
    "subtopic": "Problem-solving under constraints",
    "question": "When solving problems with tight time constraints during coding interviews, which approach is most effective?",
    "correct_answer": "Start with a brute force solution, then optimize iteratively",
    "distractors": [
      "Spend most time designing the perfect algorithm before coding",
      "Immediately implement the most complex optimal solution",
      "Focus on writing the most elegant code with perfect styling"
    ],
    "context": "Under time constraints, starting with a brute force solution and then optimizing iteratively is most effective. This approach ensures you have a working solution early, demonstrates problem-solving methodology, and allows for incremental improvements. It shows the interviewer your thought process and provides a fallback if time runs out. You can then identify bottlenecks and optimize specific parts rather than trying to design the perfect solution from scratch.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Algorithms",
    "subtopic": "Time and space complexity analysis (Big O notation)",
    "question": "What happens to the Big O complexity when you have nested loops where the inner loop depends on the outer loop variable?",
    "correct_answer": "The complexities multiply, potentially creating polynomial time complexity",
    "distractors": [
      "The complexities add together linearly",
      "Only the inner loop complexity matters",
      "The complexity remains the same as a single loop"
    ],
    "context": "When loops are nested and the inner loop's iterations depend on the outer loop variable, the time complexities multiply. For example, if the outer loop runs n times and the inner loop runs i times (where i is the outer loop variable), the total operations are 1+2+3+...+n = n(n+1)/2, resulting in O(n²) complexity. This multiplication principle applies to any level of nesting, potentially creating polynomial or even exponential complexity.",
    "difficulty": "advanced",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Handling edge cases and robustness",
    "subtopic": "Input validation",
    "question": "Why is input validation important when handling edge cases in software development?",
    "correct_answer": "To ensure the program behaves correctly and avoids unexpected errors with invalid inputs.",
    "distractors": [
      "To increase the runtime of the program.",
      "To reduce the size of the source code.",
      "To disable all error handling mechanisms."
    ],
    "context": "Input validation checks help catch invalid or unexpected inputs early to maintain program stability.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Handling edge cases and robustness",
    "subtopic": "Null and empty inputs",
    "question": "How should robust software handle null or empty inputs?",
    "correct_answer": "By checking for null or empty values and managing them gracefully without crashing.",
    "distractors": [
      "By ignoring these inputs completely.",
      "By forcing the program to terminate immediately.",
      "By assuming all inputs are always valid."
    ],
    "context": "Handling null or empty inputs carefully prevents unexpected failures and improves software robustness.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Handling edge cases and robustness",
    "subtopic": "Boundary testing",
    "question": "What is the purpose of boundary testing in ensuring software robustness?",
    "correct_answer": "To test behavior at the limits or edges of input ranges where bugs often occur.",
    "distractors": [
      "To test only the most common inputs.",
      "To avoid testing invalid data.",
      "To increase the code complexity."
    ],
    "context": "Boundary testing helps identify issues that arise at input extremes, improving reliability.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Handling edge cases and robustness",
    "subtopic": "Error handling",
    "question": "What is a key benefit of comprehensive error handling in robust systems?",
    "correct_answer": "It prevents the system from crashing and allows graceful recovery from unexpected conditions.",
    "distractors": [
      "It hides all errors from the user without logging.",
      "It stops the program without cleanup.",
      "It ignores minor errors permanently."
    ],
    "context": "Proper error handling improves system stability by managing failures effectively.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Handling edge cases and robustness",
    "subtopic": "Resource constraints",
    "question": "Why is it important to consider resource constraints when designing robust software?",
    "correct_answer": "Because software must handle limited memory, CPU, or bandwidth without failing.",
    "distractors": [
      "Because unlimited resources are always available.",
      "Because constraints only affect UI design.",
      "Because constraints reduce the need for testing."
    ],
    "context": "Robust software anticipates and manages resource limitations gracefully to avoid crashes.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Handling edge cases and robustness",
    "subtopic": "Concurrency issues",
    "question": "What kind of edge cases can arise in concurrent systems that robust software must handle?",
    "correct_answer": "Race conditions and deadlocks caused by simultaneous access to shared resources.",
    "distractors": [
      "Faster sequential processing without conflicts.",
      "Guaranteed immediate synchronization.",
      "Ignoring thread safety altogether."
    ],
    "context": "Concurrency introduces unique edge cases such as race conditions, requiring careful handling to maintain correctness.",
    "difficulty": "advanced",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Handling edge cases and robustness",
    "subtopic": "Unexpected inputs",
    "question": "How should software ideally respond to unexpected or malformed inputs?",
    "correct_answer": "By validating inputs and providing meaningful error messages or fallback behavior.",
    "distractors": [
      "By crashing immediately to prevent data corruption.",
      "By silently ignoring the inputs without feedback.",
      "By accepting any input without checks."
    ],
    "context": "Robust systems validate inputs and handle unexpected data gracefully to maintain reliability.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Software Engineering Principles",
    "subtopic": "Handling Edge Cases",
    "question": "When designing a function that takes an integer array as input, which of the following is an important 'edge case' to consider for robust code?",
    "correct_answer": "An empty array or a null array reference.",
    "distractors": [
      "An array containing only positive numbers.",
      "An array where all elements are identical.",
      "An array with an odd number of elements."
    ],
    "context": "Robust code anticipates and handles unusual or extreme conditions. Empty or null inputs are common edge cases for array-processing functions that, if not explicitly handled, can lead to crashes (e.g., NullPointerExceptions) or incorrect behavior.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Software Engineering Principles",
    "subtopic": "Robustness",
    "question": "In a critical financial system, what is the most important reason for an operation to be 'idempotent' when dealing with network retries?",
    "correct_answer": "To ensure that re-executing the operation multiple times produces the same result as executing it once, preventing unintended side effects.",
    "distractors": [
      "To improve the speed of the operation.",
      "To always guarantee a successful outcome regardless of errors.",
      "To minimize the memory footprint of the operation."
    ],
    "context": "Idempotency is crucial for robustness in distributed systems. If a network call fails or times out, a client might retry the operation. If the operation isn't idempotent, retrying could lead to duplicate entries, incorrect state, or other unintended consequences.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Software Engineering Principles",
    "subtopic": "Handling Edge Cases",
    "question": "When implementing a search function on a sorted data structure, what are critical 'boundary conditions' to test?",
    "correct_answer": "Searching for the first element, the last element, an element just outside the range, and an element not present.",
    "distractors": [
      "Searching for elements in random order.",
      "Searching for duplicate elements only.",
      "Searching only for elements located in the middle of the structure."
    ],
    "context": "Boundary conditions are inputs that sit at the extremes of the input domain. For searching, this includes elements at the very beginning or end, and values immediately adjacent to the valid data range, as these often expose off-by-one errors or incorrect loop termination conditions.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Software Engineering Principles",
    "subtopic": "Robustness",
    "question": "Which of the following is a key aspect of building a 'fault-tolerant' system?",
    "correct_answer": "The ability to continue operating correctly despite the failure of some of its components.",
    "distractors": [
      "The ability to recover from a complete system shutdown quickly.",
      "The ability to handle an extremely high volume of requests.",
      "The ability to automatically update without user intervention."
    ],
    "context": "Fault tolerance is the property that enables a system to continue performing its intended function in the event of partial failure. This often involves redundancy, error detection, and failover mechanisms to ensure continuous operation.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Software Engineering Principles",
    "subtopic": "Handling Edge Cases",
    "question": "When performing arithmetic operations on integer types, which edge case must be carefully considered to prevent incorrect results or program crashes?",
    "correct_answer": "Integer overflow or underflow.",
    "distractors": [
      "Operating with only positive numbers.",
      "Using only bitwise operations.",
      "Calculating with floating-point numbers instead of integers."
    ],
    "context": "Integer overflow occurs when an arithmetic operation attempts to create a numeric value that is larger than can be represented within the available storage space (e.g., a 32-bit integer). Underflow is the opposite. Failing to handle these can lead to wraps around to negative values or silent incorrect calculations.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Software Engineering Principles",
    "subtopic": "Robustness",
    "question": "In a distributed system, what strategy helps make a service more robust against transient network issues or temporary unavailability of a dependency?",
    "correct_answer": "Implementing retry mechanisms with exponential backoff.",
    "distractors": [
      "Increasing the number of direct network connections.",
      "Disabling all error logging in the application.",
      "Always using synchronous communication."
    ],
    "context": "Retry mechanisms with exponential backoff are crucial for robust distributed systems. Instead of failing immediately, the client or service attempts to retry the failed operation after an increasing delay, allowing the transient issue to resolve itself without user intervention or cascade failures.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Software Engineering Principles",
    "subtopic": "Handling Edge Cases",
    "question": "When processing user input (e.g., from a web form or API), what is the most robust approach to handling potentially malicious or malformed input?",
    "correct_answer": "Input validation and sanitization at the server-side.",
    "distractors": [
      "Relying solely on client-side validation.",
      "Accepting all input as-is and handling errors during database insertion.",
      "Throwing a generic exception for any unexpected input."
    ],
    "context": "Robust systems never trust user input. Server-side input validation ensures that data conforms to expected formats and constraints, while sanitization (e.g., escaping special characters) prevents injection attacks (SQL injection, XSS) and other vulnerabilities, regardless of client-side efforts.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Handling edge cases and robustness",
    "subtopic": "Input validation",
    "question": "What is the most critical step when handling user input in a distributed system to ensure robustness?",
    "correct_answer": "Validate and sanitize all inputs at the service boundary before processing",
    "distractors": [
      "Log all inputs for debugging purposes",
      "Cache frequently used inputs for performance",
      "Convert all inputs to uppercase for consistency"
    ],
    "context": "Input validation at service boundaries prevents malicious data from propagating through the system and causing cascading failures. Proper validation includes type checking, range validation, and sanitization to ensure system robustness.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Handling edge cases and robustness",
    "subtopic": "Null pointer handling",
    "question": "Which approach best prevents NullPointerException in Java applications while maintaining code readability?",
    "correct_answer": "Use Optional<T> for potentially null values and implement null checks with early returns",
    "distractors": [
      "Always initialize variables with default values regardless of context",
      "Catch all NullPointerExceptions globally with try-catch blocks",
      "Use assertions to check for null values in production code"
    ],
    "context": "Optional<T> provides a container that may or may not contain a value, forcing developers to explicitly handle the absence of values. Combined with defensive programming practices like null checks and early returns, it significantly reduces null pointer exceptions while keeping code clean and maintainable.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Handling edge cases and robustness",
    "subtopic": "Array bounds checking",
    "question": "When implementing a binary search algorithm, what is the most robust way to handle array bounds to prevent index out of bounds errors?",
    "correct_answer": "Check array length before starting and use proper mid calculation: mid = left + (right - left) / 2",
    "distractors": [
      "Use mid = (left + right) / 2 and rely on language runtime bounds checking",
      "Always pad arrays with sentinel values at both ends",
      "Use modulo arithmetic to wrap indices within array bounds"
    ],
    "context": "Robust array bounds checking involves validating array length upfront and using overflow-safe mid calculation. The formula mid = left + (right - left) / 2 prevents integer overflow that can occur with (left + right) / 2 when dealing with large indices, ensuring the algorithm works correctly with arrays of any valid size.",
    "difficulty": "advanced",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Handling edge cases and robustness",
    "subtopic": "API timeout handling",
    "question": "What is the best practice for handling timeouts in microservices communication to ensure system resilience?",
    "correct_answer": "Implement exponential backoff with jitter and circuit breaker patterns",
    "distractors": [
      "Increase timeout values exponentially until success",
      "Retry immediately with the same timeout configuration",
      "Cache the last successful response and return it on timeout"
    ],
    "context": "Exponential backoff with jitter prevents thundering herd problems by spacing out retry attempts, while circuit breakers prevent cascading failures by temporarily stopping requests to failing services. This combination provides optimal resilience in distributed systems by allowing failed services time to recover while maintaining system stability.",
    "difficulty": "advanced",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Handling edge cases and robustness",
    "subtopic": "Memory management",
    "question": "How should you handle potential OutOfMemoryError in Java applications processing large datasets?",
    "correct_answer": "Implement streaming processing with bounded memory usage and proper resource cleanup",
    "distractors": [
      "Increase JVM heap size to maximum available system memory",
      "Catch OutOfMemoryError and retry the operation with reduced dataset",
      "Use System.gc() calls periodically to free up memory"
    ],
    "context": "Streaming processing allows handling large datasets without loading everything into memory at once. Combined with proper resource management (try-with-resources, explicit cleanup), this approach prevents memory exhaustion while maintaining application stability. Simply increasing heap size or catching OutOfMemoryError doesn't address the root cause and can lead to system instability.",
    "difficulty": "advanced",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Handling edge cases and robustness",
    "subtopic": "Concurrent access",
    "question": "What is the most effective way to handle race conditions when multiple threads access shared data structures?",
    "correct_answer": "Use thread-safe collections or implement proper synchronization with locks and atomic operations",
    "distractors": [
      "Add Thread.sleep() calls to reduce timing conflicts",
      "Use volatile keyword for all shared variables",
      "Synchronize all methods in the class containing shared data"
    ],
    "context": "Thread-safe collections (like ConcurrentHashMap) and proper synchronization mechanisms (locks, atomic operations) provide guaranteed thread safety without performance penalties. These approaches ensure data consistency and prevent race conditions while maintaining good performance through optimized locking strategies and lock-free algorithms.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Handling edge cases and robustness",
    "subtopic": "Error recovery",
    "question": "When designing error handling for a payment processing system, what approach ensures maximum robustness?",
    "correct_answer": "Implement idempotent operations with comprehensive logging and graceful degradation strategies",
    "distractors": [
      "Retry all failed operations indefinitely until success",
      "Return generic error messages to avoid exposing system details",
      "Skip error handling for operations that rarely fail"
    ],
    "context": "Idempotent operations ensure that retrying requests doesn't cause duplicate charges or inconsistent state. Comprehensive logging enables debugging and monitoring, while graceful degradation allows the system to continue operating with reduced functionality when components fail. This combination provides maximum robustness for critical systems like payment processing.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Leadership principles",
    "subtopic": "Customer obsession",
    "question": "What does the Amazon leadership principle 'Customer Obsession' emphasize?",
    "correct_answer": "Leaders start with the customer and work backwards to earn and keep customer trust.",
    "distractors": [
      "Leaders focus primarily on competitor analysis.",
      "Leaders prioritize internal processes over customer needs.",
      "Leaders avoid customer feedback to reduce noise."
    ],
    "context": "Customer Obsession means putting the customer first in every decision and action.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Leadership principles",
    "subtopic": "Ownership",
    "question": "How is 'Ownership' demonstrated according to Amazon's leadership principles?",
    "correct_answer": "Leaders act on behalf of the entire company, never saying 'that’s not my job.'",
    "distractors": [
      "Leaders focus only on their immediate tasks and avoid risks.",
      "Leaders delegate all responsibilities to others.",
      "Leaders wait for instructions before taking action."
    ],
    "context": "Ownership requires taking responsibility beyond one’s own role and thinking long term.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Leadership principles",
    "subtopic": "Invent and simplify",
    "question": "What is the key idea behind the 'Invent and Simplify' leadership principle?",
    "correct_answer": "Leaders seek new ideas and simplify processes to solve complex problems.",
    "distractors": [
      "Leaders avoid change to maintain stability.",
      "Leaders focus only on copying competitors.",
      "Leaders make processes more complex for control."
    ],
    "context": "Innovation and simplification drive efficiency and customer value.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Communication skills",
    "subtopic": "Effective communication",
    "question": "What is a key attribute of effective communication in software engineering teams?",
    "correct_answer": "Clear and concise sharing of ideas to avoid misunderstandings.",
    "distractors": [
      "Using overly technical jargon to impress others.",
      "Speaking as much as possible without listening.",
      "Avoiding documentation to save time."
    ],
    "context": "Effective communication ensures team members understand goals and issues clearly.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Communication skills",
    "subtopic": "Active listening",
    "question": "Why is active listening important in team communication?",
    "correct_answer": "It helps understand others' perspectives and fosters collaboration.",
    "distractors": [
      "It allows ignoring feedback without conflict.",
      "It means agreeing with everything said.",
      "It reduces the need for asking questions."
    ],
    "context": "Active listening promotes mutual understanding and trust within teams.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Leadership principles",
    "subtopic": "Dive deep",
    "question": "What does the 'Dive Deep' principle encourage leaders to do?",
    "correct_answer": "Leaders operate at all levels and understand details thoroughly.",
    "distractors": [
      "Leaders focus only on high-level strategy without details.",
      "Leaders delegate all investigations to others.",
      "Leaders avoid questioning data and assumptions."
    ],
    "context": "Diving deep helps identify root causes and make informed decisions.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Leadership principles",
    "subtopic": "Bias for action",
    "question": "How does Amazon define the leadership principle 'Bias for Action'?",
    "correct_answer": "Leaders value speed and are willing to take calculated risks to achieve results.",
    "distractors": [
      "Leaders delay decisions until all data is perfect.",
      "Leaders avoid risks at all costs.",
      "Leaders delegate action to avoid responsibility."
    ],
    "context": "Bias for Action promotes quick decision-making in uncertain environments.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Communication skills",
    "subtopic": "Constructive feedback",
    "question": "What is an effective way to give constructive feedback?",
    "correct_answer": "Focus on specific behaviors and suggest improvements respectfully.",
    "distractors": [
      "Criticize personal traits to make the message clear.",
      "Avoid giving feedback to prevent discomfort.",
      "Give vague feedback without examples."
    ],
    "context": "Constructive feedback helps others improve without damaging relationships.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Communication skills",
    "subtopic": "Clarity in documentation",
    "question": "Why is clarity important in technical documentation?",
    "correct_answer": "It ensures that others can understand, maintain, and build upon the work effectively.",
    "distractors": [
      "It allows writers to use complex language to appear knowledgeable.",
      "It reduces the need for peer reviews.",
      "It makes documents longer and more impressive."
    ],
    "context": "Clear documentation reduces errors and accelerates onboarding.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Leadership principles",
    "subtopic": "Earn trust",
    "question": "How do leaders 'Earn Trust' according to Amazon’s principles?",
    "correct_answer": "By being honest, transparent, and delivering on commitments consistently.",
    "distractors": [
      "By avoiding difficult conversations.",
      "By promising more than they can deliver.",
      "By withholding information to maintain control."
    ],
    "context": "Trust is built through consistent and ethical behavior.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Behavioral / Leadership Principles",
    "subtopic": "Leadership Principles",
    "question": "Which Amazon Leadership Principle emphasizes understanding customer needs and working backwards from them?",
    "correct_answer": "Customer Obsession",
    "distractors": [
      "Ownership",
      "Bias for Action",
      "Deliver Results"
    ],
    "context": "Customer Obsession is a core Amazon Leadership Principle. Leaders start with the customer and work backwards. They vigorously work to earn and keep customer trust. Although leaders pay attention to competitors, they obsess over customers.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Behavioral / Leadership Principles",
    "subtopic": "Communication Skills",
    "question": "When presenting a technical solution to a non-technical audience, what is the most effective communication strategy?",
    "correct_answer": "Focus on the 'what' and 'why' (business impact) using analogies, and avoid excessive jargon.",
    "distractors": [
      "Provide all technical details and expect the audience to understand.",
      "Speak quickly to cover more ground.",
      "Use highly specific technical terms to demonstrate expertise."
    ],
    "context": "Effective communication involves tailoring the message to the audience. For non-technical stakeholders, it's crucial to translate complex technical concepts into understandable benefits and impacts, using clear language and relatable examples.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Behavioral / Leadership Principles",
    "subtopic": "Leadership Principles",
    "question": "An SDE identifies a potential long-term architectural issue that no one else has noticed but is not part of their immediate project. Which Amazon Leadership Principle best describes taking the initiative to address this issue?",
    "correct_answer": "Ownership",
    "distractors": [
      "Are Right, A Lot",
      "Invent and Simplify",
      "Frugality"
    ],
    "context": "The Ownership principle means leaders are owners. They think long-term and don't sacrifice long-term value for short-term results. They act on behalf of the entire company, beyond just their own team. They never say 'that’s not my job.'",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Behavioral / Leadership Principles",
    "subtopic": "Communication Skills",
    "question": "During a technical design review, a colleague proposes an alternative approach that conflicts with your initial design. What is the most constructive way to engage in this discussion?",
    "correct_answer": "Actively listen to their rationale, ask clarifying questions, and discuss pros and cons objectively.",
    "distractors": [
      "Immediately dismiss their idea if it deviates from your plan.",
      "Focus on proving your initial design is superior.",
      "Avoid discussing the alternative to prevent conflict."
    ],
    "context": "Effective communication in technical discussions involves active listening, showing respect for differing viewpoints, and focusing on the technical merits of ideas rather than personal attachment. This fosters collaboration and leads to better solutions.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Behavioral / Leadership Principles",
    "subtopic": "Leadership Principles",
    "question": "You disagree with a team's decision, but the team has committed to it. Which Amazon Leadership Principle suggests that you should 'disagree and commit'?",
    "correct_answer": "Have Backbone; Disagree and Commit",
    "distractors": [
      "Learn and Be Curious",
      "Earn Trust",
      "Insist on the Highest Standards"
    ],
    "context": "Have Backbone; Disagree and Commit means leaders are obligated to respectfully challenge decisions when they disagree, even when doing so is uncomfortable or exhausting. Leaders have conviction and are tenacious. They do not compromise for the sake of social cohesion. Once a decision is determined, they commit wholly.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Behavioral / Leadership Principles",
    "subtopic": "Leadership Principles",
    "question": "After launching a new feature, customer feedback indicates a critical usability issue. Which Amazon Leadership Principle would prompt an SDE to deeply investigate the root cause, even if it means questioning initial assumptions?",
    "correct_answer": "Dive Deep",
    "distractors": [
      "Think Big",
      "Hire and Develop the Best",
      "Deliver Results"
    ],
    "context": "Dive Deep means leaders operate at all levels, stay connected to the details, audit frequently, and are skeptical when metrics and anecdote differ. No task is beneath them.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Behavioral / Leadership Principles",
    "subtopic": "Communication Skills",
    "question": "When giving constructive feedback to a peer about their code, what is the most effective approach?",
    "correct_answer": "Focus on specific behaviors or code sections, their impact, and suggest actionable improvements.",
    "distractors": [
      "Generalize about their coding style without specific examples.",
      "Only point out negatives without suggesting solutions.",
      "Deliver the feedback publicly during a team meeting."
    ],
    "context": "Effective constructive feedback is specific, actionable, and delivered respectfully. It focuses on the problem in the code, its impact, and provides suggestions for improvement, usually in a private or semi-private setting.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Behavioral / Leadership Principles",
    "subtopic": "Leadership Principles",
    "question": "An SDE identifies a complex process that could be significantly simplified using a new technology. Which Amazon Leadership Principle would encourage them to champion this change, even if it requires significant upfront effort?",
    "correct_answer": "Invent and Simplify",
    "distractors": [
      "Frugality",
      "Earn Trust",
      "Hire and Develop the Best"
    ],
    "context": "Invent and Simplify means leaders expect and require innovation and invention from their teams. They always find new ways to simplify. They are externally aware, look for new ideas from everywhere, and are not limited by 'not invented here'. As we do new things, we accept that we may be misunderstood for long periods of time.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Behavioral / Leadership Principles",
    "subtopic": "Leadership Principles",
    "question": "A project is behind schedule due to unforeseen technical challenges. Which Amazon Leadership Principle would guide an SDE to take swift, informed action to get the project back on track, rather than waiting for perfect data?",
    "correct_answer": "Bias for Action",
    "distractors": [
      "Long-term Thinking",
      "Deliver Results",
      "Strive to be the Earth’s Best Employer"
    ],
    "context": "Bias for Action means speed matters in business. Many decisions and actions are reversible and do not need extensive study. We value calculated risk taking.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Behavioral / Leadership Principles",
    "subtopic": "Communication Skills",
    "question": "When leading a daily stand-up meeting, what is the most effective communication practice to keep the team aligned and productive?",
    "correct_answer": "Ensure each team member clearly states progress, plans, and blockers, fostering transparency and accountability.",
    "distractors": [
      "Allow individuals to share verbose updates, regardless of relevance.",
      "Primarily focus on assigning new tasks to team members.",
      "Keep the meeting as short as possible by limiting discussion, even if clarity is lost."
    ],
    "context": "Effective stand-up meetings require concise and clear communication. Team members should briefly convey what they did, what they plan to do, and any impediments, allowing others to quickly understand progress and offer help, leading to better team cohesion and problem-solving.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Leadership principles",
    "subtopic": "Customer Obsession",
    "question": "When implementing a new feature that could impact system performance, what demonstrates Amazon's Customer Obsession principle?",
    "correct_answer": "Prioritize customer experience by implementing performance monitoring and gradual rollout with rollback capability",
    "distractors": [
      "Deploy the feature immediately to all customers to maximize business value",
      "Focus on internal metrics and KPIs rather than customer feedback",
      "Implement the feature only after competitor analysis and market research"
    ],
    "context": "Customer Obsession at Amazon means starting with the customer and working backwards. This involves understanding customer needs, measuring customer impact, and ensuring that any changes enhance rather than degrade the customer experience. Performance monitoring and controlled rollouts protect customers from potential negative impacts.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Leadership principles",
    "subtopic": "Ownership",
    "question": "How should an SDE demonstrate Ownership when discovering a critical bug in production code they didn't write?",
    "correct_answer": "Take immediate responsibility to fix the issue, communicate impact to stakeholders, and implement long-term prevention measures",
    "distractors": [
      "Escalate to the original code author and wait for their response",
      "Log the issue in the bug tracking system and assign it to the appropriate team",
      "Document the problem thoroughly but focus only on your assigned tasks"
    ],
    "context": "Ownership means acting on behalf of the entire company and never saying 'that's not my job.' When critical issues arise, owners take immediate action regardless of who caused the problem, communicate transparently about impact and resolution, and work to prevent similar issues in the future.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Leadership principles",
    "subtopic": "Dive Deep",
    "question": "When investigating a performance degradation issue, what approach best exemplifies the Dive Deep principle?",
    "correct_answer": "Analyze system metrics, review code changes, profile application performance, and trace root causes through multiple system layers",
    "distractors": [
      "Review high-level dashboards and escalate to senior engineers for detailed analysis",
      "Apply common performance fixes based on similar past incidents",
      "Focus on the most obvious symptoms and implement quick patches"
    ],
    "context": "Dive Deep requires leaders to operate at all levels, stay connected to details, and audit frequently. This means not accepting surface-level explanations but instead conducting thorough investigations that examine multiple layers of the system to identify true root causes rather than just symptoms.",
    "difficulty": "advanced",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Leadership principles",
    "subtopic": "Bias for Action",
    "question": "What demonstrates Bias for Action when facing an urgent customer-impacting issue with incomplete information?",
    "correct_answer": "Implement a quick mitigation strategy while continuing investigation, with clear rollback plan and stakeholder communication",
    "distractors": [
      "Wait for complete analysis and full understanding before taking any action",
      "Immediately implement the most comprehensive solution available",
      "Delegate the decision to senior leadership due to uncertainty"
    ],
    "context": "Bias for Action means speed matters in business and many decisions are reversible. When customers are impacted, it's better to take calculated action with incomplete information while continuing to gather data, rather than allowing customer impact to continue while seeking perfect information.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Leadership principles",
    "subtopic": "Deliver Results",
    "question": "How should an SDE approach a project that's behind schedule but has strict customer commitments?",
    "correct_answer": "Reassess scope with stakeholders, focus on high-impact features, and communicate realistic timelines while maintaining quality standards",
    "distractors": [
      "Work overtime to meet original timeline regardless of quality impact",
      "Reduce testing and code review processes to accelerate delivery",
      "Extend deadline without stakeholder consultation to ensure perfect delivery"
    ],
    "context": "Deliver Results means focusing on key business outcomes and delivering them with the right quality and in a timely fashion. This requires making tough trade-offs, transparent communication with stakeholders, and ensuring that delivered results meet customer needs even if scope needs adjustment.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Communication skills",
    "subtopic": "Technical documentation",
    "question": "What is the most effective approach for documenting a complex system architecture for both technical and non-technical stakeholders?",
    "correct_answer": "Create layered documentation with high-level overview, detailed technical specifications, and decision rationale with visual diagrams",
    "distractors": [
      "Write comprehensive technical documentation covering all implementation details",
      "Create separate documents for each audience with no shared content",
      "Focus only on code comments and inline documentation for clarity"
    ],
    "context": "Effective technical documentation serves multiple audiences by providing different levels of detail. High-level overviews help non-technical stakeholders understand purpose and impact, while detailed specifications serve technical teams. Visual diagrams and decision rationale help both audiences understand the system design and evolution.",
    "difficulty": "advanced",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Communication skills",
    "subtopic": "Code review feedback",
    "question": "How should you provide constructive feedback during code reviews to maintain team collaboration?",
    "correct_answer": "Focus on code quality and suggest specific improvements with explanations, while acknowledging good practices",
    "distractors": [
      "Point out all issues without providing solutions to encourage learning",
      "Only comment on critical bugs and ignore style or design concerns",
      "Approve quickly to maintain development velocity and team morale"
    ],
    "context": "Effective code review communication balances quality improvement with team dynamics. Constructive feedback includes specific suggestions for improvement, explanations of why changes matter, and recognition of good practices. This approach maintains code quality while fostering learning and positive team collaboration.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Communication skills",
    "subtopic": "Incident communication",
    "question": "During a production incident affecting customers, what communication strategy ensures effective incident response?",
    "correct_answer": "Provide regular status updates with timeline, impact assessment, and next steps to all relevant stakeholders",
    "distractors": [
      "Communicate only when the incident is fully resolved to avoid confusion",
      "Share detailed technical information with all stakeholders regardless of their role",
      "Limit communication to the immediate response team until root cause is identified"
    ],
    "context": "Effective incident communication involves regular, structured updates that include current status, customer impact, timeline for resolution, and next steps. This keeps stakeholders informed without overwhelming them with technical details, enabling proper business decisions and maintaining trust during critical situations.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Communication skills",
    "subtopic": "Cross-team collaboration",
    "question": "When working with a team that has different technical priorities, how do you effectively communicate your project requirements?",
    "correct_answer": "Present requirements with business context, technical constraints, and proposed solutions while actively listening to their concerns",
    "distractors": [
      "Escalate to management to enforce your project's priority and timeline",
      "Focus solely on your team's needs and technical specifications",
      "Compromise on all requirements to maintain good relationships"
    ],
    "context": "Effective cross-team communication requires understanding different perspectives and finding mutually beneficial solutions. Presenting requirements with business context helps other teams understand importance, while acknowledging their constraints and concerns builds collaborative relationships that lead to better outcomes for all parties.",
    "difficulty": "advanced",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Communication skills",
    "subtopic": "Presenting technical solutions",
    "question": "How should you structure a presentation when proposing a new technical solution to engineering leadership?",
    "correct_answer": "Start with problem statement and business impact, present solution with trade-offs, and include implementation timeline with risks",
    "distractors": [
      "Begin with detailed technical architecture and implementation specifics",
      "Focus primarily on the elegance and innovation of the technical approach",
      "Present multiple solutions without clear recommendations or trade-off analysis"
    ],
    "context": "Engineering leadership needs to understand both technical merit and business value. Starting with problem context and impact establishes why the solution matters, presenting trade-offs demonstrates thorough analysis, and including timeline with risks enables informed decision-making about resource allocation and project approval.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Problem-solving approach",
    "subtopic": "Understanding the problem",
    "question": "What is the first step in an effective problem-solving approach?",
    "correct_answer": "Clearly understanding the problem requirements and constraints before attempting a solution.",
    "distractors": [
      "Jumping directly to coding the first idea.",
      "Ignoring the problem statement and assumptions.",
      "Starting with optimization without understanding inputs."
    ],
    "context": "A clear understanding of the problem helps prevent wasted effort and ensures the right solution.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Problem-solving approach",
    "subtopic": "Breaking down problems",
    "question": "Why is breaking a complex problem into smaller parts useful in problem-solving?",
    "correct_answer": "It simplifies the problem, making it easier to solve each part step-by-step.",
    "distractors": [
      "It increases the overall complexity.",
      "It makes the solution less modular.",
      "It wastes time by duplicating effort."
    ],
    "context": "Decomposing problems improves clarity and helps develop manageable solutions.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Problem-solving approach",
    "subtopic": "Choosing algorithms",
    "question": "What should guide your choice of algorithm when solving a problem?",
    "correct_answer": "The problem constraints, input size, and desired time/space efficiency.",
    "distractors": [
      "Choosing the most complicated algorithm available.",
      "Picking algorithms based solely on popularity.",
      "Ignoring resource constraints to simplify coding."
    ],
    "context": "Algorithm selection depends on problem requirements and efficiency trade-offs.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Problem-solving approach",
    "subtopic": "Testing solutions",
    "question": "Why is testing your solution on edge cases important?",
    "correct_answer": "To ensure correctness and robustness under all possible inputs, including extremes.",
    "distractors": [
      "Because edge cases are rare and can be ignored safely.",
      "To prove the solution works only for typical cases.",
      "To avoid fixing bugs later in production."
    ],
    "context": "Edge case testing validates the solution beyond typical scenarios.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Problem-solving approach",
    "subtopic": "Iterative improvement",
    "question": "How does iterative improvement help in problem-solving?",
    "correct_answer": "It allows refining the solution gradually to optimize performance and correctness.",
    "distractors": [
      "It slows down the development process unnecessarily.",
      "It causes confusion by frequently changing the code.",
      "It wastes time fixing non-existent issues."
    ],
    "context": "Iterative refinement enables better solutions through incremental changes.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Problem-solving approach",
    "subtopic": "Trade-offs",
    "question": "Why must software engineers consider trade-offs in problem-solving?",
    "correct_answer": "Because optimizing one aspect, like speed, may affect others, like memory usage.",
    "distractors": [
      "Because all solutions are always perfect with no compromises.",
      "Because trade-offs are irrelevant in practical scenarios.",
      "Because resource usage does not impact performance."
    ],
    "context": "Trade-offs balance competing goals to achieve practical solutions.",
    "difficulty": "advanced",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Problem-solving approach",
    "subtopic": "Debugging",
    "question": "What is a systematic approach to debugging in problem-solving?",
    "correct_answer": "Isolating the problem area, analyzing symptoms, and testing hypotheses to find the root cause.",
    "distractors": [
      "Randomly changing code until the problem disappears.",
      "Ignoring errors and hoping they resolve automatically.",
      "Copying code from other projects without understanding."
    ],
    "context": "Systematic debugging efficiently identifies and fixes errors.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Problem Solving",
    "subtopic": "Problem-Solving Approach",
    "question": "What is the very first step an SDE should take when presented with a new coding problem in an interview?",
    "correct_answer": "Clarify the requirements, constraints, and ask clarifying questions about edge cases.",
    "distractors": [
      "Immediately start coding a brute-force solution.",
      "Assume all inputs will be valid and within standard ranges.",
      "Jump straight to the most optimized algorithm."
    ],
    "context": "Before attempting to solve any problem, it's crucial to thoroughly understand it. This involves asking questions to clarify requirements, understanding input/output formats, constraints (time, space, data range), and potential edge cases to avoid misinterpreting the problem.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Problem Solving",
    "subtopic": "Problem-Solving Approach",
    "question": "After understanding the problem, what is a crucial next step in the problem-solving approach to tackle complex problems?",
    "correct_answer": "Break down the problem into smaller, manageable subproblems.",
    "distractors": [
      "Write down the final optimized code without intermediate steps.",
      "Ignore constraints to simplify initial thoughts.",
      "Immediately ask for hints from the interviewer."
    ],
    "context": "Complex problems can be overwhelming. Breaking them down into smaller, independent subproblems makes them easier to approach, allows for focused solution development for each part, and can often reveal relationships or patterns that lead to an optimal overall solution.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Problem Solving",
    "subtopic": "Problem-Solving Approach",
    "question": "When considering multiple approaches to a problem (e.g., brute force vs. optimized), what should an SDE explicitly discuss with the interviewer?",
    "correct_answer": "The time and space complexity trade-offs of each approach.",
    "distractors": [
      "Only the most efficient solution, ignoring all others.",
      "Only the easiest solution to implement.",
      "The specific programming language features that might be used."
    ],
    "context": "A good problem-solving approach involves evaluating different solutions. Discussing the trade-offs (e.g., time vs. space, complexity vs. simplicity) demonstrates a comprehensive understanding of the problem and its various solutions, and allows the interviewer to guide towards the preferred optimization level.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Problem Solving",
    "subtopic": "Problem-Solving Approach",
    "question": "After implementing a solution, what is the most important step to ensure its correctness and robustness?",
    "correct_answer": "Thoroughly testing with various test cases, including edge cases, normal cases, and invalid inputs.",
    "distractors": [
      "Submitting the code immediately without local testing.",
      "Only testing with a single, simple example.",
      "Asking the interviewer if the code is correct without explaining test cases."
    ],
    "context": "Testing is paramount to verifying a solution's correctness. A comprehensive set of test cases, covering normal scenarios, boundary conditions (edge cases like empty input, single element, max/min values), and invalid inputs, helps uncover bugs and ensures robustness.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Problem Solving",
    "subtopic": "Problem-Solving Approach",
    "question": "During an interview, if you get stuck on a problem, what is the most effective way to communicate your thought process and potentially get unstuck?",
    "correct_answer": "Verbalize your current approach, where you are stuck, and brainstorm alternative ideas aloud.",
    "distractors": [
      "Remain silent and hope the solution comes to you.",
      "Immediately ask for the answer or a strong hint.",
      "Start coding a completely different solution without explanation."
    ],
    "context": "Interviewers are interested in your problem-solving process, not just the final answer. Articulating your thoughts, even when stuck, shows your analytical skills and allows the interviewer to understand your roadblock and potentially offer subtle guidance.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Problem Solving",
    "subtopic": "Problem-Solving Approach",
    "question": "When optimizing a brute-force solution, which common algorithmic technique is often explored if the problem involves overlapping subproblems?",
    "correct_answer": "Dynamic Programming or Memoization",
    "distractors": [
      "Greedy Algorithms (if not applicable to optimal substructure)",
      "Breadth-First Search (unless specifically a graph problem)",
      "Randomized Algorithms"
    ],
    "context": "Dynamic Programming (either via memoization for top-down or tabulation for bottom-up) is a powerful optimization technique for problems that exhibit both optimal substructure and overlapping subproblems. It avoids redundant computations by storing and reusing results of subproblems.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Problem Solving",
    "subtopic": "Problem-Solving Approach",
    "question": "You've identified an optimal solution with a time complexity of O(N log N) for a problem. The interviewer then asks if you can do better, implying O(N). What initial thought process should you follow to approach this further optimization?",
    "correct_answer": "Consider if a comparison-based approach can be avoided, or if properties of the data allow for linear-time specialized algorithms (e.g., counting sort, hash maps).",
    "distractors": [
      "Assume O(N log N) is the best possible and state so.",
      "Try to apply a brute-force solution more cleverly.",
      "Attempt to parallelize the O(N log N) solution without changing its fundamental complexity."
    ],
    "context": "Achieving O(N) from O(N log N) often means moving away from algorithms inherently limited by comparison-based sorting bounds. This typically involves leveraging properties of the data (e.g., range, distinctness) to use techniques like counting sort, radix sort, or hash-based approaches that offer linear time complexity for specific operations.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Problem-solving approach",
    "subtopic": "Problem decomposition",
    "question": "When faced with a complex system design problem, what is the most effective first step in the problem-solving process?",
    "correct_answer": "Break down the problem into smaller, manageable components and identify core requirements and constraints",
    "distractors": [
      "Start coding immediately with the most familiar technology stack",
      "Research existing solutions and implement the most popular approach",
      "Focus on edge cases and error handling before understanding the main problem"
    ],
    "context": "Problem decomposition is fundamental to effective problem-solving. Breaking complex problems into smaller, manageable components allows for systematic analysis, helps identify dependencies and priorities, and makes it easier to tackle each piece methodically. Understanding requirements and constraints upfront prevents costly rework later.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Problem-solving approach",
    "subtopic": "Root cause analysis",
    "question": "When debugging a performance issue in a distributed system, what systematic approach should you follow to identify the root cause?",
    "correct_answer": "Use the 5-whys technique combined with data analysis, tracing, and hypothesis-driven testing to isolate the actual cause",
    "distractors": [
      "Apply performance optimizations based on common bottlenecks in similar systems",
      "Focus on the component that was most recently modified or deployed",
      "Increase system resources and monitor if performance improves"
    ],
    "context": "Root cause analysis requires systematic investigation rather than assumptions. The 5-whys technique helps dig deeper than surface symptoms, while data analysis and tracing provide objective evidence. Hypothesis-driven testing validates theories before implementing solutions, preventing misdiagnosis and wasted effort.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Problem-solving approach",
    "subtopic": "Algorithm optimization",
    "question": "When optimizing an algorithm that's performing poorly, what is the most systematic approach to improvement?",
    "correct_answer": "Analyze time and space complexity, identify bottlenecks through profiling, then apply appropriate optimization techniques based on data",
    "distractors": [
      "Replace all loops with parallel processing to improve performance",
      "Add caching mechanisms to all function calls and data structures",
      "Convert all recursive solutions to iterative implementations"
    ],
    "context": "Algorithm optimization requires understanding current performance characteristics before making changes. Complexity analysis reveals theoretical limits, profiling shows actual bottlenecks, and data-driven optimization ensures efforts target real problems. Generic optimizations like parallelization or caching may not address the actual performance issues.",
    "difficulty": "advanced",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Problem-solving approach",
    "subtopic": "Trade-off analysis",
    "question": "When choosing between different architectural approaches for a new service, how should you evaluate trade-offs systematically?",
    "correct_answer": "Define evaluation criteria based on requirements, score each option against criteria, and consider long-term maintainability and scalability",
    "distractors": [
      "Choose the approach with the most modern technology stack available",
      "Select the solution that requires the least development time upfront",
      "Pick the architecture that the team has the most experience with"
    ],
    "context": "Systematic trade-off analysis involves establishing clear evaluation criteria aligned with business and technical requirements. Scoring options against these criteria provides objective comparison, while considering long-term implications ensures decisions remain viable as the system evolves. Technology novelty, development speed, or team familiarity alone don't guarantee the best solution.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Problem-solving approach",
    "subtopic": "Hypothesis testing",
    "question": "When investigating a bug that occurs intermittently in production, what approach best demonstrates hypothesis-driven problem solving?",
    "correct_answer": "Form specific hypotheses about potential causes, design tests to validate each hypothesis, and collect data to confirm or refute theories",
    "distractors": [
      "Implement multiple potential fixes simultaneously to maximize chances of resolution",
      "Wait for more occurrences to gather additional data before taking any action",
      "Apply the fix that worked for similar issues in other systems"
    ],
    "context": "Hypothesis-driven problem solving brings scientific rigor to debugging. Forming specific, testable hypotheses prevents random troubleshooting, while designed tests provide clear validation criteria. Data collection enables objective evaluation of each theory, leading to more reliable solutions than guesswork or pattern matching from other systems.",
    "difficulty": "advanced",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Problem-solving approach",
    "subtopic": "Constraint identification",
    "question": "Before designing a solution for a high-traffic system, what types of constraints should you identify first?",
    "correct_answer": "Technical constraints (latency, throughput, storage), business constraints (budget, timeline), and operational constraints (team skills, maintenance)",
    "distractors": [
      "Focus primarily on technical performance requirements and scalability needs",
      "Prioritize budget and timeline constraints over technical feasibility",
      "Consider only the constraints explicitly mentioned by stakeholders"
    ],
    "context": "Comprehensive constraint identification involves multiple dimensions that affect solution viability. Technical constraints define what's possible, business constraints determine what's practical, and operational constraints influence long-term success. Focusing on only one type of constraint often leads to solutions that fail in other dimensions.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "Amazon SDE",
    "topic": "Problem-solving approach",
    "subtopic": "Solution validation",
    "question": "What is the most effective way to validate that your solution actually solves the original problem before full deployment?",
    "correct_answer": "Create measurable success criteria, implement prototypes or pilot tests, and validate against original requirements with stakeholder feedback",
    "distractors": [
      "Run comprehensive unit tests and integration tests on the complete solution",
      "Deploy to a staging environment that mirrors production configuration",
      "Conduct thorough code reviews with senior engineers and architects"
    ],
    "context": "Solution validation requires proving the solution addresses the original problem, not just that it works technically. Measurable success criteria provide objective evaluation standards, prototypes or pilots test real-world effectiveness, and stakeholder validation ensures the solution meets actual needs. Technical testing alone doesn't guarantee problem resolution.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Storage Services",
    "subtopic": "Amazon S3",
    "question": "Which AWS service allows you to store objects like images, videos, and backups with high scalability?",
    "correct_answer": "Amazon S3",
    "distractors": ["Amazon EBS", "Amazon RDS", "Amazon Glacier"],
    "context": "Amazon S3 is a highly scalable object storage service that allows users to store and retrieve any amount of data, such as images, videos, and backups.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Storage Services",
    "subtopic": "Amazon S3",
    "question": "In Amazon S3, what is used to organize and store objects?",
    "correct_answer": "Buckets",
    "distractors": ["Volumes", "Tables", "File Systems"],
    "context": "Buckets in Amazon S3 are containers for storing objects. Each object is stored in a bucket and identified using a unique key.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Storage Services",
    "subtopic": "Amazon S3",
    "question": "Which Amazon S3 feature helps users manage costs by using different storage tiers?",
    "correct_answer": "Storage classes",
    "distractors": ["Lifecycle hooks", "Auto scaling", "Reserved instances"],
    "context": "Amazon S3 offers various storage classes like S3 Standard and S3 Glacier, allowing users to optimize costs based on access patterns.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Storage Services",
    "subtopic": "Amazon S3",
    "question": "Which S3 feature automatically transitions objects between storage classes or deletes them after a set period?",
    "correct_answer": "Lifecycle policies",
    "distractors": ["IAM roles", "Elastic Load Balancing", "Security groups"],
    "context": "S3 Lifecycle policies enable automatic transition of objects to cheaper storage classes or deletion after a defined period, helping to manage data lifecycle efficiently.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Storage Services",
    "subtopic": "Amazon S3",
    "question": "Which Amazon S3 feature allows keeping multiple variants of an object in the same bucket?",
    "correct_answer": "Versioning",
    "distractors": ["Replication", "Compression", "Partitioning"],
    "context": "Amazon S3 versioning enables the storage of multiple versions of the same object, protecting against accidental overwrites or deletions.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Storage Services",
    "subtopic": "Amazon S3",
    "question": "What is a key benefit of Amazon S3 that ensures data durability across multiple Availability Zones?",
    "correct_answer": "Data replication",
    "distractors": ["Manual backups", "Edge caching", "Snapshot isolation"],
    "context": "Amazon S3 replicates data automatically across multiple Availability Zones to ensure high durability and availability.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Storage Services",
    "subtopic": "Amazon S3",
    "question": "What is the fundamental storage unit in Amazon S3 where data is stored as files?",
    "correct_answer": "Objects",
    "distractors": [
      "Buckets",
      "Folders",
      "Volumes"
    ],
    "context": "Amazon S3 stores data as objects within containers called buckets. An object is a file and any metadata that describes that file.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Storage Services",
    "subtopic": "Amazon S3",
    "question": "Which of the following statements is true about Amazon S3 bucket names?",
    "correct_answer": "Bucket names must be globally unique.",
    "distractors": [
      "Bucket names are unique only within an AWS Region.",
      "Bucket names can contain uppercase letters.",
      "Bucket names are assigned automatically by AWS."
    ],
    "context": "Amazon S3 buckets are the containers for objects. Each bucket name must be globally unique across all existing bucket names in Amazon S3.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Storage Services",
    "subtopic": "Amazon S3",
    "question": "Which S3 storage class is designed for long-term data archiving at the lowest cost, with retrieval times ranging from minutes to hours?",
    "correct_answer": "S3 Glacier Deep Archive",
    "distractors": [
      "S3 Standard",
      "S3 Intelligent-Tiering",
      "S3 One Zone-IA"
    ],
    "context": "Amazon S3 offers various storage classes. S3 Glacier Deep Archive is Amazon S3’s lowest-cost storage class and supports long-term retention and digital preservation for data that may be accessed once or twice in a year. Retrieval times can be from 12 to 48 hours.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Storage Services",
    "subtopic": "Amazon S3",
    "question": "What S3 feature allows you to define rules to automatically transition objects to different storage classes or delete them after a specified period?",
    "correct_answer": "Lifecycle policies",
    "distractors": [
      "Versioning",
      "Replication",
      "Access Control Lists (ACLs)"
    ],
    "context": "S3 Lifecycle policies enable you to manage your objects efficiently by defining actions (like transitioning to another storage class or deleting) that S3 will take during an object's lifetime.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Storage Services",
    "subtopic": "Amazon S3",
    "question": "A company needs to store frequently accessed, critical data in S3 with high durability and availability across multiple Availability Zones. Which S3 storage class is most appropriate?",
    "correct_answer": "S3 Standard",
    "distractors": [
      "S3 Glacier Flexible Retrieval",
      "S3 One Zone-IA",
      "S3 Standard-IA"
    ],
    "context": "S3 Standard offers high durability, availability, and performance object storage for frequently accessed data. It delivers low latency and high throughput, and is designed for durability across multiple Availability Zones.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Storage Services",
    "subtopic": "Amazon S3",
    "question": "If an object in an S3 bucket is configured with a lifecycle policy to transition to S3 Glacier Flexible Retrieval after 90 days, what happens to the object after that period?",
    "correct_answer": "The object is moved to the S3 Glacier Flexible Retrieval storage class.",
    "distractors": [
      "The object is automatically deleted from S3.",
      "The object remains in S3 Standard but becomes read-only.",
      "The object is copied to S3 Glacier Flexible Retrieval, and the original remains in S3 Standard."
    ],
    "context": "S3 Lifecycle policies automate the migration of objects between different storage classes or their expiration. A transition action moves the object to the specified storage class, such as S3 Glacier Flexible Retrieval.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Storage Services",
    "subtopic": "Amazon S3",
    "question": "What is the maximum size of a single object that can be stored in Amazon S3?",
    "correct_answer": "5 TB",
    "distractors": [
      "1 TB",
      "500 GB",
      "10 TB"
    ],
    "context": "Amazon S3 supports objects up to 5 terabytes in size. For objects larger than 100 MB, multipart upload is recommended for better performance and reliability.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Storage Services",
    "subtopic": "Amazon S3",
    "question": "Which S3 storage class is designed for data that is accessed less frequently but requires rapid access when needed?",
    "correct_answer": "S3 Standard-Infrequent Access (S3 Standard-IA)",
    "distractors": [
      "S3 Standard",
      "S3 Glacier",
      "S3 One Zone-IA"
    ],
    "context": "S3 Standard-IA is designed for data that is accessed less frequently but requires rapid access when needed. It offers lower storage costs compared to S3 Standard while maintaining the same performance characteristics.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Storage Services",
    "subtopic": "Amazon S3",
    "question": "What is the minimum storage duration for objects stored in S3 Glacier Flexible Retrieval before you can delete them without incurring additional charges?",
    "correct_answer": "90 days",
    "distractors": [
      "30 days",
      "180 days",
      "365 days"
    ],
    "context": "S3 Glacier Flexible Retrieval has a minimum storage duration of 90 days. If you delete objects before this minimum duration, you are charged for the remaining days.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Storage Services",
    "subtopic": "Amazon S3",
    "question": "Which S3 feature automatically transitions objects between storage classes based on predefined rules?",
    "correct_answer": "S3 Lifecycle Management",
    "distractors": [
      "S3 Cross-Region Replication",
      "S3 Transfer Acceleration",
      "S3 Versioning"
    ],
    "context": "S3 Lifecycle Management allows you to define rules that automatically transition objects between different storage classes or delete objects after a specified time period, helping optimize storage costs.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Storage Services",
    "subtopic": "Amazon S3",
    "question": "What happens to the previous version of an object when you upload a new version to an S3 bucket with versioning enabled?",
    "correct_answer": "The previous version is preserved and can be accessed using its version ID",
    "distractors": [
      "The previous version is automatically deleted",
      "The previous version is moved to S3 Glacier",
      "The previous version is compressed and archived"
    ],
    "context": "When versioning is enabled on an S3 bucket, uploading a new version of an object preserves all previous versions. Each version gets a unique version ID and can be accessed independently.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Storage Services",
    "subtopic": "Amazon S3",
    "question": "Which S3 storage class provides the lowest cost storage option but requires a minimum of 180 days storage commitment?",
    "correct_answer": "S3 Glacier Deep Archive",
    "distractors": [
      "S3 Glacier Flexible Retrieval",
      "S3 Intelligent-Tiering",
      "S3 One Zone-IA"
    ],
    "context": "S3 Glacier Deep Archive is the lowest-cost storage class in Amazon S3, designed for long-term retention of data that is rarely accessed. It has a minimum storage duration of 180 days and retrieval times of 12-48 hours.",
    "difficulty": "advanced",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Storage Services",
    "subtopic": "Amazon S3",
    "question": "What is the primary function of an Amazon S3 bucket?",
    "correct_answer": "To store objects, which consist of data and metadata",
    "distractors": [
      "To manage relational databases",
      "To host virtual machine instances",
      "To process real-time streaming data"
    ],
    "context": "An Amazon S3 bucket is a logical unit of storage in Amazon S3 used to store objects, which include data and its descriptive metadata.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Storage Services",
    "subtopic": "Amazon S3",
    "question": "Which Amazon S3 storage class is designed for infrequently accessed data with millisecond access time?",
    "correct_answer": "S3 Standard-Infrequent Access",
    "distractors": [
      "S3 Glacier Deep Archive",
      "S3 Standard",
      "S3 One Zone-Infrequent Access"
    ],
    "context": "S3 Standard-Infrequent Access (S3 Standard-IA) is designed for data that is accessed less frequently but requires rapid access when needed, offering millisecond access time.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Storage Services",
    "subtopic": "Amazon S3",
    "question": "What feature of Amazon S3 allows you to automatically transition objects to a different storage class after a specified period?",
    "correct_answer": "Lifecycle policies",
    "distractors": [
      "Versioning rules",
      "Replication configurations",
      "Event notifications"
    ],
    "context": "Amazon S3 lifecycle policies enable automatic transitioning of objects to different storage classes or deletion after a specified time to optimize storage costs.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Storage Services",
    "subtopic": "Amazon S3",
    "question": "Which S3 storage class is most suitable for long-term archival storage with retrieval times ranging from minutes to hours?",
    "correct_answer": "S3 Glacier",
    "distractors": [
      "S3 Standard",
      "S3 Intelligent-Tiering",
      "S3 Express One Zone"
    ],
    "context": "S3 Glacier is a low-cost storage class for archival data, with retrieval times ranging from minutes to hours, ideal for long-term storage needs.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Storage Services",
    "subtopic": "Amazon S3",
    "question": "What happens to an object in Amazon S3 when a lifecycle policy is configured to expire it?",
    "correct_answer": "The object is permanently deleted",
    "distractors": [
      "The object is moved to S3 Glacier Deep Archive",
      "The object is encrypted and retained",
      "The object is copied to another bucket"
    ],
    "context": "When an Amazon S3 lifecycle policy is configured to expire an object, the object is permanently deleted from the bucket to manage storage efficiently.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Storage Services",
    "subtopic": "Amazon S3",
    "question": "Which Amazon S3 feature allows you to store multiple versions of an object in the same bucket?",
    "correct_answer": "Versioning",
    "distractors": [
      "Cross-Region Replication",
      "Server-Side Encryption",
      "Bucket Policies"
    ],
    "context": "Versioning in Amazon S3 allows you to keep multiple versions of an object in the same bucket, enabling recovery from unintended overwrites or deletions.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Storage Services",
    "subtopic": "Amazon EBS vs EFS",
    "question": "Which AWS storage service can be attached to multiple EC2 instances simultaneously across different Availability Zones?",
    "correct_answer": "Amazon EFS",
    "distractors": [
      "Amazon EBS",
      "Amazon S3",
      "Amazon FSx"
    ],
    "context": "Amazon EFS (Elastic File System) is a fully managed NFS file system that can be mounted on multiple EC2 instances simultaneously across multiple Availability Zones, providing shared storage access.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Storage Services",
    "subtopic": "Amazon EBS vs EFS",
    "question": "What type of storage does Amazon EBS provide to EC2 instances?",
    "correct_answer": "Block-level storage",
    "distractors": [
      "Object storage",
      "File system storage",
      "Database storage"
    ],
    "context": "Amazon EBS (Elastic Block Store) provides persistent block-level storage volumes for use with EC2 instances. EBS volumes behave like raw, unformatted block devices that can be mounted as devices on instances.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Storage Services",
    "subtopic": "Amazon EBS vs EFS",
    "question": "Which statement best describes the key difference between EBS and EFS in terms of instance attachment?",
    "correct_answer": "EBS volumes can only be attached to one EC2 instance at a time, while EFS can be mounted on multiple instances simultaneously",
    "distractors": [
      "EFS volumes can only be attached to one EC2 instance at a time, while EBS can be mounted on multiple instances simultaneously",
      "Both EBS and EFS can be attached to multiple instances, but EBS is faster",
      "Both EBS and EFS can only be attached to one instance at a time"
    ],
    "context": "The fundamental difference is that EBS volumes are designed for single-instance attachment and provide block storage, while EFS provides a shared file system that can be accessed by multiple EC2 instances concurrently across different Availability Zones.",
    "difficulty": "advanced",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Storage Services",
    "subtopic": "Amazon EBS vs EFS",
    "question": "Which AWS storage service is designed to provide block storage for use with EC2 instances?",
    "correct_answer": "Amazon EBS",
    "distractors": [
      "Amazon EFS",
      "Amazon S3",
      "Amazon Glacier"
    ],
    "context": "Amazon EBS (Elastic Block Store) provides persistent block storage for Amazon EC2 instances, ideal for applications requiring low-latency access to data.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Storage Services",
    "subtopic": "Amazon EBS vs EFS",
    "question": "Which AWS storage service allows multiple EC2 instances to access a shared file system simultaneously?",
    "correct_answer": "Amazon EFS",
    "distractors": [
      "Amazon EBS",
      "Amazon RDS",
      "Amazon FSx"
    ],
    "context": "Amazon EFS (Elastic File System) is a scalable file storage system that allows multiple EC2 instances to access data concurrently, suitable for shared workloads.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Storage Services",
    "subtopic": "Amazon EBS vs EFS",
    "question": "What is a key difference between Amazon EBS and Amazon EFS in terms of scalability?",
    "correct_answer": "EBS requires manual provisioning of volume size, while EFS automatically scales storage capacity.",
    "distractors": [
      "EBS is a file storage system, while EFS is a block storage system.",
      "EBS automatically scales, while EFS requires manual provisioning.",
      "EBS supports multiple simultaneous connections, while EFS does not."
    ],
    "context": "Amazon EBS requires manual provisioning of storage capacity for volumes attached to EC2 instances, whereas Amazon EFS automatically scales storage up or down based on demand.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Storage Services",
    "subtopic": "Amazon EBS vs EFS",
    "question": "Which AWS storage service is best suited for a shared file system that needs to be accessed concurrently by multiple EC2 instances?",
    "correct_answer": "Amazon EFS",
    "distractors": [
      "Amazon EBS",
      "Amazon S3",
      "Amazon RDS"
    ],
    "context": "Amazon EFS (Elastic File System) provides a scalable, elastic, shared file system that can be accessed concurrently by multiple EC2 instances, making it suitable for scenarios like web serving and content management.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Storage Services",
    "subtopic": "Amazon EBS vs EFS",
    "question": "For an EC2 instance requiring persistent, block-level storage for its operating system and applications, which AWS service should be utilized?",
    "correct_answer": "Amazon EBS",
    "distractors": [
      "Amazon EFS",
      "Amazon S3",
      "Amazon Glacier"
    ],
    "context": "Amazon EBS (Elastic Block Store) provides persistent block storage volumes for use with Amazon EC2 instances. It's ideal for primary storage for data that requires frequent updates, like operating systems and databases.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Storage Services",
    "subtopic": "Amazon EBS vs EFS",
    "question": "A developer needs a highly available and durable file storage solution for a Linux-based application where data needs to be accessed by multiple instances across different Availability Zones. Which AWS service would meet these requirements?",
    "correct_answer": "Amazon EFS",
    "distractors": [
      "Amazon EBS",
      "Amazon DynamoDB",
      "Amazon Redshift"
    ],
    "context": "Amazon EFS is a fully managed, scalable, and highly available shared file system for EC2 instances that can be accessed from multiple Availability Zones, making it suitable for distributed applications.",
    "difficulty": "advance",
    "type": "mcq"
  },
  
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Storage Services",
    "subtopic": "Amazon EBS vs EFS",
    "question": "Which AWS storage service is best suited for multiple EC2 instances needing shared access to data?",
    "correct_answer": "Amazon EFS",
    "distractors": ["Amazon EBS", "Amazon S3", "AWS Backup"],
    "context": "Amazon EFS is a scalable file storage system that allows multiple EC2 instances to access the same file system simultaneously.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Storage Services",
    "subtopic": "Amazon EBS vs EFS",
    "question": "Which AWS storage option is block-level and typically used with a single EC2 instance?",
    "correct_answer": "Amazon EBS",
    "distractors": ["Amazon EFS", "Amazon S3", "Amazon Glacier"],
    "context": "Amazon EBS provides block-level storage volumes that are attached to a single EC2 instance and are ideal for databases and operating systems.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Storage Services",
    "subtopic": "Amazon EBS vs EFS",
    "question": "What is a key difference between Amazon EBS and Amazon EFS in terms of data access?",
    "correct_answer": "Amazon EBS supports access from only one EC2 instance at a time",
    "distractors": [
      "Amazon EBS allows multiple EC2 instances to access data simultaneously",
      "Amazon EFS is limited to block storage access",
      "Amazon EFS does not support Linux instances"
    ],
    "context": "Amazon EBS is a block storage service that supports data access from only one EC2 instance at a time, whereas EFS enables multiple instances to share the same file system.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
   {
    "goal": "AWS Cloud Practitioner",
    "topic": "Storage Services",
    "subtopic": "AWS Storage Gateway",
    "question": "Which AWS service allows on-premises applications to access cloud storage using standard protocols?",
    "correct_answer": "AWS Storage Gateway",
    "distractors": ["Amazon S3", "Amazon EBS", "Amazon FSx"],
    "context": "AWS Storage Gateway is a hybrid cloud storage service that enables on-premises applications to use AWS cloud storage through standard protocols such as NFS, SMB, and iSCSI.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Storage Services",
    "subtopic": "AWS Storage Gateway",
    "question": "What AWS service can cache frequently accessed data on-premises for low-latency access while storing it in the cloud?",
    "correct_answer": "AWS Storage Gateway",
    "distractors": ["AWS DataSync", "Amazon CloudFront", "Amazon S3 Glacier"],
    "context": "AWS Storage Gateway offers local caching of frequently accessed data, providing low-latency access for on-premises applications while securely storing the full dataset in AWS.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Storage Services",
    "subtopic": "AWS Storage Gateway",
    "question": "Which AWS service provides three types of gateways: File Gateway, Volume Gateway, and Tape Gateway?",
    "correct_answer": "AWS Storage Gateway",
    "distractors": ["Amazon FSx", "AWS Snowball", "AWS Backup"],
    "context": "AWS Storage Gateway offers File Gateway for file-based storage, Volume Gateway for block storage, and Tape Gateway for backup and archive, helping integrate on-premises environments with AWS.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Storage Services",
    "subtopic": "AWS Storage Gateway",
    "question": "What is the primary purpose of AWS Storage Gateway?",
    "correct_answer": "Connect on-premises environments to AWS cloud storage services",
    "distractors": [
      "Provide direct database connectivity to AWS RDS",
      "Enable EC2 instances to communicate with each other",
      "Create secure VPN connections between regions"
    ],
    "context": "AWS Storage Gateway is a hybrid cloud storage service that connects on-premises software appliances with cloud-based storage to provide seamless integration between on-premises environments and AWS storage services like S3, Glacier, and EBS.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Storage Services",
    "subtopic": "AWS Storage Gateway",
    "question": "Which Storage Gateway type provides low-latency access to data by caching frequently accessed data on-premises while storing all data in Amazon S3?",
    "correct_answer": "File Gateway",
    "distractors": [
      "Volume Gateway - Stored Volumes",
      "Volume Gateway - Cached Volumes",
      "Tape Gateway"
    ],
    "context": "File Gateway enables you to store and retrieve objects in Amazon S3 using file protocols such as NFS and SMB. It caches frequently accessed data locally for low-latency access while storing all data durably in S3.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Storage Services",
    "subtopic": "AWS Storage Gateway",
    "question": "Which Storage Gateway configuration is most suitable for organizations that want to replace their physical tape infrastructure with a cloud-based virtual tape library?",
    "correct_answer": "Tape Gateway (VTL)",
    "distractors": [
      "File Gateway with NFS protocol",
      "Volume Gateway with iSCSI protocol",
      "Direct Connect Gateway"
    ],
    "context": "Tape Gateway presents a Virtual Tape Library (VTL) interface to your backup application, providing a seamless way to replace physical tape infrastructure. Virtual tapes are stored in S3 and can be archived to S3 Glacier or S3 Glacier Deep Archive.",
    "difficulty": "advanced",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Storage Services",
    "subtopic": "AWS Storage Gateway",
    "question": "Which AWS service enables hybrid cloud storage by connecting on-premises environments to AWS storage services?",
    "correct_answer": "AWS Storage Gateway",
    "distractors": [
      "Amazon S3",
      "AWS Snowball",
      "Amazon EFS"
    ],
    "context": "AWS Storage Gateway is a hybrid cloud storage service that provides on-premises access to virtually unlimited cloud storage, integrating with AWS services like S3.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Storage Services",
    "subtopic": "AWS Storage Gateway",
    "question": "Which type of AWS Storage Gateway configuration is used to provide low-latency access to frequently accessed data stored in Amazon S3?",
    "correct_answer": "File Gateway",
    "distractors": [
      "Volume Gateway",
      "Tape Gateway",
      "S3 Transfer Acceleration"
    ],
    "context": "AWS Storage Gateway's File Gateway enables on-premises applications to store and access files in Amazon S3 using standard file protocols like NFS or SMB, with local caching for low-latency access.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Storage Services",
    "subtopic": "AWS Storage Gateway",
    "question": "What is a primary use case for the Tape Gateway configuration in AWS Storage Gateway?",
    "correct_answer": "To replace physical tape backups with virtual tapes stored in Amazon S3 and Glacier",
    "distractors": [
      "To provide block storage for EC2 instances",
      "To enable real-time data streaming to AWS",
      "To host relational databases in the cloud"
    ],
    "context": "The Tape Gateway in AWS Storage Gateway allows organizations to replace physical tape libraries with virtual tapes, storing data in Amazon S3 and archiving to Amazon Glacier for cost-effective backup solutions.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Storage Services",
    "subtopic": "AWS Storage Gateway",
    "question": "Which AWS Storage Gateway type is used to store frequently accessed data on-premises while asynchronously uploading all data to Amazon S3?",
    "correct_answer": "Cached Volumes",
    "distractors": [
      "Stored Volumes",
      "Tape Gateway",
      "File Gateway"
    ],
    "context": "AWS Storage Gateway's Cached Volumes mode allows you to store your primary data in S3 while keeping a cache of frequently accessed data on-premises, providing low-latency access.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Storage Services",
    "subtopic": "AWS Storage Gateway",
    "question": "An organization needs to integrate on-premises applications with Amazon S3 for file-based storage. Which AWS Storage Gateway type would enable this functionality?",
    "correct_answer": "File Gateway",
    "distractors": [
      "Volume Gateway (Cached Volumes)",
      "Volume Gateway (Stored Volumes)",
      "Tape Gateway"
    ],
    "context": "AWS Storage Gateway's File Gateway presents file-based storage to on-premises applications using standard file protocols (NFS and SMB), translating them to S3 object requests.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Storage Services",
    "subtopic": "AWS Storage Gateway",
    "question": "A company is looking to replace its physical tape library with a cloud-based solution while maintaining its existing backup application. Which AWS Storage Gateway type would facilitate this transition?",
    "correct_answer": "Tape Gateway",
    "distractors": [
      "File Gateway",
      "Cached Volumes",
      "Stored Volumes"
    ],
    "context": "AWS Storage Gateway's Tape Gateway allows you to replace physical tapes with virtual tapes stored in Amazon S3 and Glacier, integrating seamlessly with existing backup applications.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Storage Services",
    "subtopic": "Amazon Glacier",
    "question": "Which AWS service is designed for long-term archival storage with low cost?",
    "correct_answer": "Amazon Glacier",
    "distractors": ["Amazon S3", "Amazon EBS", "Amazon RDS"],
    "context": "Amazon Glacier is a low-cost cloud storage service optimized for data archiving and long-term backup.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Storage Services",
    "subtopic": "Amazon Glacier",
    "question": "What is a characteristic feature of Amazon Glacier related to data retrieval?",
    "correct_answer": "Data retrieval from Amazon Glacier can take several hours",
    "distractors": ["Data retrieval is instantaneous", "Data is only accessible for 24 hours", "Data retrieval costs are the same as Amazon S3"],
    "context": "Amazon Glacier is designed for infrequent access, and retrieving data can take from minutes to hours depending on the retrieval option chosen.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Storage Services",
    "subtopic": "Amazon Glacier",
    "question": "How does Amazon Glacier differ from Amazon S3 in terms of storage purpose?",
    "correct_answer": "Amazon Glacier is primarily for archival and long-term backup, while Amazon S3 is for frequent access storage",
    "distractors": [
      "Amazon Glacier is for frequent access, S3 is for archives",
      "Both provide identical storage purposes and pricing",
      "Amazon Glacier stores only databases"
    ],
    "context": "Amazon Glacier focuses on long-term, durable, and secure archival storage, whereas Amazon S3 supports frequently accessed data with low latency.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Storage Services",
    "subtopic": "Amazon Glacier",
    "question": "What is Amazon Glacier primarily designed for?",
    "correct_answer": "Long-term archival and backup of data that is infrequently accessed",
    "distractors": [
      "High-performance computing and real-time data processing",
      "Frequent data access and low-latency retrieval",
      "Database storage for transactional workloads"
    ],
    "context": "Amazon Glacier is a secure, durable, and extremely low-cost storage service designed for long-term archival and backup of data that is infrequently accessed. It is optimized for data that is rarely retrieved and can tolerate retrieval times of several hours.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Storage Services",
    "subtopic": "Amazon Glacier",
    "question": "What is the typical retrieval time for data stored in Amazon S3 Glacier Flexible Retrieval using standard retrieval?",
    "correct_answer": "3-5 hours",
    "distractors": [
      "1-5 minutes",
      "12-48 hours",
      "1-12 hours"
    ],
    "context": "Amazon S3 Glacier Flexible Retrieval offers three retrieval options: Expedited (1-5 minutes for urgent requests), Standard (3-5 hours), and Bulk (5-12 hours for large amounts of data at the lowest cost). Standard retrieval is the most commonly used option.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Storage Services",
    "subtopic": "Amazon Glacier",
    "question": "Which Amazon Glacier storage class provides the lowest cost storage but requires the longest minimum storage duration and retrieval time?",
    "correct_answer": "S3 Glacier Deep Archive",
    "distractors": [
      "S3 Glacier Instant Retrieval",
      "S3 Glacier Flexible Retrieval",
      "S3 Intelligent-Tiering Deep Archive Access"
    ],
    "context": "S3 Glacier Deep Archive is the lowest-cost storage class, designed for long-term retention of data accessed once or twice per year. It has a minimum storage duration of 180 days and retrieval times of 12-48 hours, making it ideal for compliance and regulatory archiving.",
    "difficulty": "advanced",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Storage Services",
    "subtopic": "Amazon Glacier",
    "question": "Which AWS service is designed for low-cost, long-term archival storage with retrieval times ranging from minutes to hours?",
    "correct_answer": "Amazon S3 Glacier",
    "distractors": [
      "Amazon S3 Standard",
      "Amazon EBS",
      "Amazon EFS"
    ],
    "context": "Amazon S3 Glacier is a secure, durable, and low-cost storage service for archiving data, with retrieval times ranging from minutes to hours depending on the retrieval option chosen.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Storage Services",
    "subtopic": "Amazon Glacier",
    "question": "What is the primary difference between Amazon S3 Glacier and Amazon S3 Glacier Deep Archive?",
    "correct_answer": "S3 Glacier Deep Archive has lower storage costs but longer retrieval times compared to S3 Glacier.",
    "distractors": [
      "S3 Glacier Deep Archive supports real-time access, while S3 Glacier does not.",
      "S3 Glacier is used for block storage, while S3 Glacier Deep Archive is for file storage.",
      "S3 Glacier Deep Archive is a compute service, while S3 Glacier is a storage service."
    ],
    "context": "Amazon S3 Glacier Deep Archive is a storage class optimized for long-term data retention with the lowest storage costs, but retrieval times are longer (typically 12-48 hours) compared to S3 Glacier (minutes to hours).",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Storage Services",
    "subtopic": "Amazon Glacier",
    "question": "Which retrieval option in Amazon S3 Glacier allows for the fastest data access, typically within 1-5 minutes?",
    "correct_answer": "Expedited retrieval",
    "distractors": [
      "Standard retrieval",
      "Bulk retrieval",
      "Archive retrieval"
    ],
    "context": "Amazon S3 Glacier offers multiple retrieval options, with Expedited retrieval providing the fastest access to archived data, typically within 1-5 minutes, at a higher cost.",
    "difficulty": "intermediate",
    "type": "mcq"
  },

  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Storage Services",
    "subtopic": "AWS Storage Gateway",
    "question": "An on-premises application needs to store frequently accessed files in AWS while maintaining a local cache for low-latency access. Which AWS Storage Gateway type would be most suitable for this scenario?",
    "correct_answer": "File Gateway",
    "distractors": [
      "Volume Gateway (Cached Volumes)",
      "Volume Gateway (Stored Volumes)",
      "Tape Gateway"
    ],
    "context": "File Gateway presents a file interface to applications, enabling them to store files in Amazon S3. It maintains a local cache for frequently accessed data, providing low-latency access to your on-premises applications.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Storage Services",
    "subtopic": "AWS Storage Gateway",
    "question": "A company is migrating its tape-based backups to AWS. Which AWS Storage Gateway type should they utilize to replace their physical tape library with a virtual tape library in the cloud?",
    "correct_answer": "Tape Gateway",
    "distractors": [
      "File Gateway",
      "Volume Gateway (Cached Volumes)",
      "Volume Gateway (Stored Volumes)"
    ],
    "context": "Tape Gateway provides a virtual tape library (VTL) interface that allows you to use your existing backup applications and store data on virtual tapes in Amazon S3 Glacier and S3 Glacier Deep Archive.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Storage Services",
    "subtopic": "AWS Storage Gateway",
    "question": "A hybrid cloud architecture requires block-level storage for on-premises applications, with data asynchronously backed up to AWS. The solution needs to minimize on-premises storage footprint. Which AWS Storage Gateway configuration would best meet these requirements?",
    "correct_answer": "Volume Gateway (Cached Volumes)",
    "distractors": [
      "File Gateway",
      "Volume Gateway (Stored Volumes)",
      "Tape Gateway"
    ],
    "context": "Volume Gateway (Cached Volumes) stores primary data in Amazon S3 and retains a frequently accessed subset of data locally. This minimizes the need for on-premises storage while providing low-latency access to frequently used data.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Security, Identity, and Compliance",
    "subtopic": "IAM",
    "question": "Which AWS service is used to manage users, groups, roles, and permissions securely?",
    "correct_answer": "AWS Identity and Access Management (IAM)",
    "distractors": ["Amazon Cognito", "AWS WAF", "AWS Shield"],
    "context": "AWS Identity and Access Management (IAM) is used to securely manage access to AWS services and resources for users, groups, and roles.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Security, Identity, and Compliance",
    "subtopic": "IAM",
    "question": "What is the purpose of an IAM policy in AWS?",
    "correct_answer": "To define permissions for users, groups, or roles",
    "distractors": ["To create virtual machines", "To configure storage settings", "To manage billing alerts"],
    "context": "IAM policies are JSON documents in AWS that define permissions, specifying what actions are allowed or denied for users, groups, or roles.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Security, Identity, and Compliance",
    "subtopic": "IAM",
    "question": "Which IAM entity is used to assign temporary credentials to AWS services?",
    "correct_answer": "IAM Roles",
    "distractors": ["IAM Users", "IAM Policies", "IAM Groups"],
    "context": "IAM roles are used to delegate access to users, applications, or services that don't normally have access to AWS resources, and they provide temporary credentials.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Security and Identity Services",
    "subtopic": "IAM (Users, Groups, Roles, Policies)",
    "question": "What is the primary purpose of AWS Identity and Access Management (IAM)?",
    "correct_answer": "Control access to AWS services and resources securely",
    "distractors": [
      "Monitor AWS resource usage and billing",
      "Provide data encryption for AWS services",
      "Create virtual private networks in AWS"
    ],
    "context": "AWS IAM enables you to manage access to AWS services and resources securely. Using IAM, you can create and manage AWS users and groups, and use permissions to allow and deny their access to AWS resources.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Security and Identity Services",
    "subtopic": "IAM (Users, Groups, Roles, Policies)",
    "question": "Which IAM component is best suited for granting temporary access to AWS resources for applications running on EC2 instances?",
    "correct_answer": "IAM Roles",
    "distractors": [
      "IAM Users",
      "IAM Groups",
      "IAM Policies"
    ],
    "context": "IAM Roles are designed to be assumed by AWS services, applications, or users to obtain temporary security credentials. They are ideal for EC2 instances as they eliminate the need to store long-term credentials on the instance and provide automatic credential rotation.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Security and Identity Services",
    "subtopic": "IAM (Users, Groups, Roles, Policies)",
    "question": "What happens when an IAM user is added to multiple groups that have conflicting permissions for the same resource?",
    "correct_answer": "The user gets the union of all permissions from all groups, with explicit deny taking precedence",
    "distractors": [
      "The user gets permissions only from the first group they were added to",
      "The user gets permissions only from the group with the most restrictive policy",
      "The user cannot access any resources due to the conflict"
    ],
    "context": "IAM follows the principle of least privilege with explicit deny taking precedence. When a user belongs to multiple groups, they receive the union (combination) of all permissions granted by those groups. However, if any policy explicitly denies an action, that denial overrides any allow statements.",
    "difficulty": "advanced",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Security and Identity",
    "subtopic": "IAM",
    "question": "Which AWS service is used to manage user access and permissions to AWS resources?",
    "correct_answer": "AWS Identity and Access Management (IAM)",
    "distractors": [
      "Amazon Inspector",
      "AWS Shield",
      "AWS Key Management Service (KMS)"
    ],
    "context": "AWS Identity and Access Management (IAM) enables you to manage access to AWS services and resources securely by creating users, groups, roles, and policies.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Security and Identity",
    "subtopic": "IAM",
    "question": "What is the primary function of an IAM role in AWS?",
    "correct_answer": "To grant temporary access to AWS services for entities like EC2 instances or trusted users",
    "distractors": [
      "To store encryption keys for data security",
      "To monitor resource usage across AWS services",
      "To create user accounts for external applications"
    ],
    "context": "IAM roles in AWS allow you to delegate access to users or services (like EC2 instances) with temporary credentials, following the principle of least privilege.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Security and Identity",
    "subtopic": "IAM",
    "question": "Which IAM policy component defines the specific actions allowed or denied on AWS resources?",
    "correct_answer": "Statement",
    "distractors": [
      "Principal",
      "Condition",
      "Resource Group"
    ],
    "context": "An IAM policy is a JSON document that includes a Statement element, which specifies the actions allowed or denied, the resources affected, and optional conditions for access control.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
   {
    "goal": "AWS Cloud Practitioner",
    "topic": "IAM",
    "subtopic": "Users and Groups",
    "question": "In AWS IAM, what is the primary function of a group?",
    "correct_answer": "To assign permissions to multiple users at once",
    "distractors": [
      "To create temporary access credentials",
      "To enable federated access",
      "To manage access keys for applications"
    ],
    "context": "IAM groups in AWS are collections of users that share the same permissions, allowing simplified management by assigning policies to the group instead of individual users.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "IAM",
    "subtopic": "Roles and Policies",
    "question": "Why would you use an IAM role instead of an IAM user for an EC2 instance?",
    "correct_answer": "Because roles provide temporary credentials to applications running on instances",
    "distractors": [
      "Because users allow cross-account access",
      "Because roles store static credentials on the instance",
      "Because users are required for S3 bucket access"
    ],
    "context": "IAM roles are used to grant temporary security credentials to AWS resources like EC2 instances, enabling them to interact with other AWS services securely without the need for long-term credentials.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "IAM",
    "subtopic": "Policies",
    "question": "What is the function of an IAM policy in AWS?",
    "correct_answer": "To define permissions for users, groups, or roles",
    "distractors": [
      "To manage billing alerts",
      "To launch EC2 instances",
      "To encrypt data in transit"
    ],
    "context": "IAM policies are JSON documents in AWS that define permissions, specifying what actions are allowed or denied for users, groups, and roles on specific resources.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Management and Governance",
    "subtopic": "AWS Organizations",
    "question": "Which AWS service enables centralized management of multiple AWS accounts under a single organization?",
    "correct_answer": "AWS Organizations",
    "distractors": [
      "AWS IAM",
      "AWS Config",
      "AWS Trusted Advisor"
    ],
    "context": "AWS Organizations allows you to centrally manage and govern multiple AWS accounts, enabling consolidated billing, account management, and policy enforcement.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Management and Governance",
    "subtopic": "AWS Organizations",
    "question": "What is the primary purpose of a Service Control Policy (SCP) in AWS Organizations?",
    "correct_answer": "To set permission boundaries for AWS accounts within an organization",
    "distractors": [
      "To encrypt data stored in AWS services",
      "To monitor resource usage across accounts",
      "To automate resource provisioning"
    ],
    "context": "Service Control Policies (SCPs) in AWS Organizations define the maximum permissions for accounts or organizational units, ensuring compliance with security and governance policies.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Management and Governance",
    "subtopic": "AWS Organizations",
    "question": "Which component of AWS Organizations allows you to group accounts for easier management and policy application?",
    "correct_answer": "Organizational Unit (OU)",
    "distractors": [
      "IAM Role",
      "Resource Group",
      "AWS Budgets"
    ],
    "context": "Organizational Units (OUs) in AWS Organizations allow you to group AWS accounts hierarchically, simplifying the application of Service Control Policies and management tasks.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Management and Governance",
    "subtopic": "AWS Organizations",
    "question": "What is a key benefit of using AWS Organizations for consolidated billing?",
    "correct_answer": "It enables volume discounts and cost savings across multiple accounts",
    "distractors": [
      "It automatically encrypts all account data",
      "It provides real-time monitoring of account activity",
      "It creates automatic backups for all accounts"
    ],
    "context": "AWS Organizations supports consolidated billing, allowing multiple accounts to benefit from volume discounts and shared cost savings under a single payment method.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Management and Governance",
    "subtopic": "AWS Organizations",
    "question": "How does an SCP differ from an IAM policy in AWS Organizations?",
    "correct_answer": "SCPs set permission boundaries for accounts, while IAM policies define permissions for users and roles within an account",
    "distractors": [
      "SCPs manage billing, while IAM policies manage resource access",
      "SCPs are applied to individual users, while IAM policies are applied to accounts",
      "SCPs are used for encryption, while IAM policies are used for auditing"
    ],
    "context": "SCPs in AWS Organizations define the maximum permissions for accounts or OUs, while IAM policies specify detailed permissions for users, groups, or roles within a single AWS account.",
    "difficulty": "advance",
    "type": "mcq"
  },
   {
    "goal": "AWS Cloud Practitioner",
    "topic": "AWS Organizations",
    "subtopic": "Organizational Units",
    "question": "What is the purpose of Organizational Units (OUs) in AWS Organizations?",
    "correct_answer": "To group accounts for easier policy management",
    "distractors": [
      "To manage IAM roles across all regions",
      "To monitor billing usage at the user level",
      "To replicate data across AWS accounts"
    ],
    "context": "Organizational Units (OUs) in AWS Organizations help structure accounts into a hierarchy, enabling administrators to apply policies centrally and manage access at scale.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "AWS Organizations",
    "subtopic": "Service Control Policies (SCPs)",
    "question": "What do Service Control Policies (SCPs) do in AWS Organizations?",
    "correct_answer": "They define the maximum permissions for accounts in an organization",
    "distractors": [
      "They encrypt data across accounts automatically",
      "They create billing alarms for multiple accounts",
      "They manage S3 access control lists"
    ],
    "context": "SCPs are used in AWS Organizations to set permission guardrails, defining the maximum available permissions for member accounts, regardless of the permissions defined in IAM policies.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "AWS Organizations",
    "subtopic": "Consolidated Billing",
    "question": "How does consolidated billing benefit an AWS Organization?",
    "correct_answer": "It allows multiple accounts to combine usage for volume discounts",
    "distractors": [
      "It enforces strict security policies automatically",
      "It replicates IAM policies across accounts",
      "It automatically encrypts S3 buckets across the organization"
    ],
    "context": "Consolidated billing enables multiple AWS accounts in an organization to combine their usage, helping qualify for volume pricing discounts and simplifying cost management.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "AWS Organizations",
    "subtopic": "Root Account and Management",
    "question": "Why should the AWS root account be used sparingly in an organization?",
    "correct_answer": "Because it has full administrative privileges by default",
    "distractors": [
      "Because it is only available in the AWS Free Tier",
      "Because it cannot access IAM policies",
      "Because it is used exclusively for SCP application"
    ],
    "context": "The root user has unrestricted access to all AWS services and resources. For security reasons, AWS recommends limiting its use and instead assigning roles and permissions through IAM.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "AWS Organizations",
    "subtopic": "Policy Hierarchy",
    "question": "What happens if an SCP denies an action allowed by an IAM policy in a child account?",
    "correct_answer": "The action is still denied because SCPs override IAM policies",
    "distractors": [
      "The action is allowed because IAM policies take precedence",
      "The action is logged but not executed",
      "The action is evaluated based on resource-based policies"
    ],
    "context": "SCPs act as permission boundaries in AWS Organizations. Even if an IAM policy allows an action, it will be denied if an SCP explicitly denies it for the account or OU.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Management and Governance",
    "subtopic": "AWS Organizations, SCPs",
    "question": "What is the primary purpose of AWS Organizations?",
    "correct_answer": "Centrally manage and govern multiple AWS accounts",
    "distractors": [
      "Monitor application performance across AWS services",
      "Provide backup and disaster recovery for AWS resources",
      "Create virtual private networks between AWS regions"
    ],
    "context": "AWS Organizations is an account management service that enables you to centrally manage and govern your environment as you grow and scale your AWS resources. It allows you to create and organize AWS accounts, apply policies across accounts, and manage billing centrally.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Management and Governance",
    "subtopic": "AWS Organizations, SCPs",
    "question": "What does SCP stand for in AWS Organizations?",
    "correct_answer": "Service Control Policy",
    "distractors": [
      "Security Compliance Protocol",
      "System Configuration Policy",
      "Service Configuration Protocol"
    ],
    "context": "Service Control Policies (SCPs) are a type of organization policy that you can use to manage permissions in your organization. SCPs offer central control over the maximum available permissions for all accounts in your organization.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Management and Governance",
    "subtopic": "AWS Organizations, SCPs",
    "question": "How do Service Control Policies (SCPs) affect permissions in AWS Organizations?",
    "correct_answer": "SCPs define the maximum permissions available but do not grant permissions",
    "distractors": [
      "SCPs automatically grant all specified permissions to users",
      "SCPs override all IAM policies and grant direct access",
      "SCPs only monitor permissions without affecting access"
    ],
    "context": "SCPs are guardrails that set the maximum permissions for accounts in an organization. They don't grant permissions themselves but act as filters that limit what actions can be performed. Users and roles still need explicit permissions from IAM policies within the guardrails set by SCPs.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Management and Governance",
    "subtopic": "AWS Organizations, SCPs",
    "question": "Which billing feature is automatically enabled when you create an AWS Organization?",
    "correct_answer": "Consolidated billing",
    "distractors": [
      "Reserved Instance sharing",
      "Savings Plans optimization",
      "Cost allocation tagging"
    ],
    "context": "When you create an organization, AWS Organizations automatically enables consolidated billing. This feature combines the billing for all member accounts in the organization, allowing you to receive a single bill and potentially benefit from volume discounts and Reserved Instance sharing.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Management and Governance",
    "subtopic": "AWS Organizations, SCPs",
    "question": "What happens when an SCP with explicit deny statements conflicts with IAM policies that allow the same actions?",
    "correct_answer": "The SCP deny takes precedence and blocks the actions regardless of IAM allow policies",
    "distractors": [
      "The IAM allow policies override the SCP deny statements",
      "The user gets prompted to choose which policy to follow",
      "The actions are allowed but logged as policy violations"
    ],
    "context": "SCPs work as guardrails and explicit deny statements in SCPs always take precedence over allow statements in IAM policies. Even if an IAM policy grants permission for an action, an SCP deny will block that action. This ensures that organizational boundaries cannot be bypassed by individual account policies.",
    "difficulty": "advanced",
    "type": "mcq"
  },
  
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Security, Identity, and Compliance",
    "subtopic": "AWS Organizations",
    "question": "Which AWS feature allows you to centrally manage multiple AWS accounts?",
    "correct_answer": "AWS Organizations",
    "distractors": ["AWS Config", "AWS IAM", "AWS Control Tower"],
    "context": "AWS Organizations is a service that helps centrally manage and govern multiple AWS accounts as a single organization.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Security, Identity, and Compliance",
    "subtopic": "Service Control Policies (SCPs)",
    "question": "What is the purpose of Service Control Policies (SCPs) in AWS Organizations?",
    "correct_answer": "To define permission guardrails across AWS accounts",
    "distractors": ["To encrypt S3 buckets", "To manage EC2 key pairs", "To monitor billing alarms"],
    "context": "SCPs in AWS Organizations help set permission boundaries or guardrails that apply to all IAM identities within accounts in an organization.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Security, Identity, and Compliance",
    "subtopic": "AWS Organizations",
    "question": "Which AWS feature enables grouping accounts into organizational units (OUs)?",
    "correct_answer": "AWS Organizations",
    "distractors": ["AWS CloudFormation", "Amazon S3", "AWS Artifact"],
    "context": "AWS Organizations allows you to create organizational units (OUs) to group AWS accounts and apply policies centrally.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Security, Identity, and Compliance",
    "subtopic": "SCPs",
    "question": "What happens if an action is not allowed by an SCP, even though it's allowed by the IAM policy?",
    "correct_answer": "The action is denied",
    "distractors": ["The action is allowed", "The user is prompted", "The action is logged but permitted"],
    "context": "In AWS Organizations, if an SCP denies an action, it overrides any IAM policy that would otherwise allow it. SCPs set the maximum available permissions.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Security, Identity, and Compliance",
    "subtopic": "AWS Organizations",
    "question": "Which type of AWS account typically manages an AWS Organization?",
    "correct_answer": "Management account",
    "distractors": ["Member account", "IAM user account", "Billing-only account"],
    "context": "In AWS Organizations, the management account is the account that creates the organization and is responsible for managing its structure and policies.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Security and Compliance",
    "subtopic": "KMS & Encryption",
    "question": "What is the primary purpose of AWS Key Management Service (KMS)?",
    "correct_answer": "Create and manage cryptographic keys for data encryption",
    "distractors": [
      "Monitor network traffic for security threats",
      "Provide identity and access management for users",
      "Create secure VPN connections between networks"
    ],
    "context": "AWS KMS is a managed service that makes it easy to create and control cryptographic keys used to encrypt your data. KMS uses hardware security modules (HSMs) to protect the security of your keys and integrates with many AWS services to help protect data you store with these services.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Security and Compliance",
    "subtopic": "KMS & Encryption",
    "question": "Which type of KMS key is managed entirely by AWS and cannot be deleted or rotated by customers?",
    "correct_answer": "AWS managed keys",
    "distractors": [
      "Customer managed keys",
      "AWS owned keys",
      "External keys"
    ],
    "context": "AWS managed keys are created, managed, and used on your behalf by an AWS service integrated with KMS. You can view these keys and their key policies, and audit their use in AWS CloudTrail logs, but you cannot manage these keys yourself - AWS handles key rotation automatically.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Security and Compliance",
    "subtopic": "AWS Shield, WAF, GuardDuty",
    "question": "Which AWS service provides automatic protection against DDoS attacks for all AWS customers at no additional cost?",
    "correct_answer": "AWS Shield Standard",
    "distractors": [
      "AWS WAF",
      "AWS GuardDuty",
      "AWS Shield Advanced"
    ],
    "context": "AWS Shield Standard is automatically enabled for all AWS customers at no additional cost. It provides protection against the most common and frequently occurring network and transport layer DDoS attacks that target your website or applications running on AWS.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Security and Compliance",
    "subtopic": "AWS Shield, WAF, GuardDuty",
    "question": "What type of attacks does AWS WAF (Web Application Firewall) primarily protect against?",
    "correct_answer": "Application layer attacks such as SQL injection and cross-site scripting",
    "distractors": [
      "Network layer DDoS attacks",
      "Malware and virus infections",
      "Unauthorized access to EC2 instances"
    ],
    "context": "AWS WAF is a web application firewall that helps protect your web applications from common web exploits that could affect application availability, compromise security, or consume excessive resources. It protects against application layer attacks like SQL injection, cross-site scripting (XSS), and other OWASP Top 10 vulnerabilities.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Security and Compliance",
    "subtopic": "AWS Shield, WAF, GuardDuty",
    "question": "Which AWS service uses machine learning to detect malicious activity and unauthorized behavior in your AWS environment?",
    "correct_answer": "AWS GuardDuty",
    "distractors": [
      "AWS Inspector",
      "AWS Config",
      "AWS CloudTrail"
    ],
    "context": "AWS GuardDuty is a threat detection service that continuously monitors for malicious activity and unauthorized behavior to protect your AWS accounts and workloads. It uses machine learning, anomaly detection, and integrated threat intelligence to identify threats such as compromised instances, cryptocurrency mining, and reconnaissance attacks.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Security and Compliance",
    "subtopic": "KMS & Encryption",
    "question": "What happens to encrypted data when you delete a Customer Managed Key (CMK) in AWS KMS?",
    "correct_answer": "The data becomes permanently inaccessible after the waiting period expires",
    "distractors": [
      "The data is automatically decrypted and remains accessible",
      "AWS automatically creates a new key to replace the deleted one",
      "The data is moved to an AWS managed key for continued access"
    ],
    "context": "When you delete a Customer Managed Key in KMS, there is a mandatory waiting period (7-30 days) during which the key is in a 'Pending Deletion' state. Once this period expires and the key is permanently deleted, any data encrypted with that key becomes permanently inaccessible. This is why key deletion should be carefully planned and monitored.",
    "difficulty": "advanced",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Security and Compliance",
    "subtopic": "AWS Shield, WAF, GuardDuty",
    "question": "Which combination of AWS services would provide the most comprehensive protection against both DDoS attacks and application-layer web exploits?",
    "correct_answer": "AWS Shield Advanced and AWS WAF",
    "distractors": [
      "AWS GuardDuty and AWS Inspector",
      "AWS Shield Standard and AWS Config",
      "AWS WAF and AWS CloudTrail"
    ],
    "context": "AWS Shield Advanced provides enhanced DDoS protection with 24/7 access to the DDoS Response Team and cost protection, while AWS WAF protects against application-layer attacks. Together, they provide comprehensive protection against both network/transport layer DDoS attacks and application-layer web exploits, covering multiple attack vectors.",
    "difficulty": "advanced",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Security and Identity",
    "subtopic": "KMS & Encryption",
    "question": "Which AWS service is used to create and manage cryptographic keys for encrypting data across AWS services?",
    "correct_answer": "AWS Key Management Service (KMS)",
    "distractors": [
      "AWS Shield",
      "AWS IAM",
      "Amazon Inspector"
    ],
    "context": "AWS Key Management Service (KMS) enables you to create, manage, and rotate cryptographic keys to secure data across AWS services and applications.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Security and Identity",
    "subtopic": "KMS & Encryption",
    "question": "What type of encryption does AWS KMS support for protecting data at rest in Amazon S3?",
    "correct_answer": "Server-Side Encryption",
    "distractors": [
      "Client-Side Encryption",
      "Transport Layer Encryption",
      "Network-Level Encryption"
    ],
    "context": "AWS KMS supports Server-Side Encryption for Amazon S3, where data is encrypted before being stored and decrypted when retrieved, using KMS-managed keys.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Security and Identity",
    "subtopic": "KMS & Encryption",
    "question": "What is a key feature of AWS KMS that ensures secure key management across multiple AWS accounts?",
    "correct_answer": "Cross-account key sharing",
    "distractors": [
      "Automatic key deletion",
      "Real-time key monitoring",
      "Key replication across regions"
    ],
    "context": "AWS KMS allows cross-account key sharing, enabling secure use of cryptographic keys across different AWS accounts while maintaining centralized control.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Security and Identity",
    "subtopic": "AWS Shield",
    "question": "Which AWS service provides protection against Distributed Denial of Service (DDoS) attacks for applications running on AWS?",
    "correct_answer": "AWS Shield",
    "distractors": [
      "AWS WAF",
      "Amazon GuardDuty",
      "AWS Firewall Manager"
    ],
    "context": "AWS Shield is a managed DDoS protection service that safeguards applications running on AWS from Distributed Denial of Service attacks.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Security and Identity",
    "subtopic": "AWS WAF",
    "question": "What is the primary function of AWS WAF in protecting web applications?",
    "correct_answer": "Filtering malicious web traffic based on customizable rules",
    "distractors": [
      "Encrypting data at rest",
      "Monitoring network traffic for intrusions",
      "Managing user access permissions"
    ],
    "context": "AWS Web Application Firewall (WAF) protects web applications by filtering and blocking malicious HTTP/S traffic using customizable rules.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Security and Identity",
    "subtopic": "Amazon GuardDuty",
    "question": "Which AWS service uses machine learning to detect potential security threats in an AWS environment?",
    "correct_answer": "Amazon GuardDuty",
    "distractors": [
      "AWS Shield",
      "AWS KMS",
      "Amazon Macie"
    ],
    "context": "Amazon GuardDuty is a threat detection service that uses machine learning to monitor AWS accounts and workloads for malicious activity and unauthorized behavior.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Security and Identity",
    "subtopic": "AWS Shield",
    "question": "Which tier of AWS Shield provides 24/7 access to the AWS DDoS Response Team for advanced DDoS protection?",
    "correct_answer": "AWS Shield Advanced",
    "distractors": [
      "AWS Shield Standard",
      "AWS WAF Premium",
      "Amazon GuardDuty Enterprise"
    ],
    "context": "AWS Shield Advanced offers enhanced DDoS protection, including access to the AWS DDoS Response Team (DRT) and cost protection for scaling resources during attacks.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Security Services",
    "subtopic": "AWS KMS",
    "question": "What is the main function of AWS Key Management Service (KMS)?",
    "correct_answer": "To create and manage cryptographic keys used for data encryption",
    "distractors": [
      "To scan data for malware in S3 buckets",
      "To manage network traffic routing",
      "To provide web application firewalls"
    ],
    "context": "AWS Key Management Service (KMS) enables users to create and control encryption keys that are used to encrypt data across AWS services securely.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Security Services",
    "subtopic": "Encryption at Rest",
    "question": "Which AWS feature ensures that your data is protected when stored on disk?",
    "correct_answer": "Encryption at rest",
    "distractors": [
      "IAM roles",
      "Multi-AZ deployments",
      "Elastic Load Balancing"
    ],
    "context": "Encryption at rest refers to protecting data that is stored on disk using encryption keys managed through services like AWS KMS, helping prevent unauthorized access.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Security Services",
    "subtopic": "AWS WAF",
    "question": "What does AWS WAF help protect against?",
    "correct_answer": "Common web exploits like SQL injection and cross-site scripting",
    "distractors": [
      "Distributed denial-of-service (DDoS) attacks",
      "Data exfiltration from S3 buckets",
      "Unauthorized key access in KMS"
    ],
    "context": "AWS Web Application Firewall (WAF) helps protect web applications by filtering and monitoring HTTP traffic and blocking common web exploits such as SQL injection and XSS.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Security Services",
    "subtopic": "AWS Shield",
    "question": "What type of threat does AWS Shield protect against?",
    "correct_answer": "Distributed denial-of-service (DDoS) attacks",
    "distractors": [
      "Cross-account access",
      "Malware in EC2 instances",
      "Improperly configured IAM policies"
    ],
    "context": "AWS Shield is a managed DDoS protection service that safeguards web applications running on AWS from volumetric, state-exhaustion, and application layer attacks.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Security Services",
    "subtopic": "Amazon GuardDuty",
    "question": "What is the purpose of Amazon GuardDuty?",
    "correct_answer": "To continuously monitor AWS accounts for threats using machine learning",
    "distractors": [
      "To encrypt data stored in Amazon S3",
      "To route application traffic using DNS",
      "To manage DDoS protection for web applications"
    ],
    "context": "Amazon GuardDuty is a threat detection service that uses machine learning, anomaly detection, and integrated threat intelligence to identify suspicious activity in AWS accounts.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Security Services",
    "subtopic": "Customer Managed Keys",
    "question": "Why would an organization choose to use customer-managed keys in AWS KMS?",
    "correct_answer": "To have full control over key rotation and usage policies",
    "distractors": [
      "To eliminate the need for encryption at rest",
      "To monitor API calls to S3 buckets",
      "To enable SSO across AWS accounts"
    ],
    "context": "Customer-managed keys in AWS KMS provide organizations with full control over key management, including setting rotation policies, usage permissions, and audit logging.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Security Services",
    "subtopic": "Data Encryption",
    "question": "Which AWS services integrate with KMS to provide data encryption?",
    "correct_answer": "Amazon S3, Amazon EBS, and Amazon RDS",
    "distractors": [
      "Amazon CloudWatch, AWS IAM, and AWS WAF",
      "Amazon Route 53, AWS Auto Scaling, and EC2",
      "AWS Shield, AWS Config, and AWS Budgets"
    ],
    "context": "AWS KMS integrates with services like Amazon S3, EBS, and RDS to provide seamless encryption of data at rest, ensuring secure data storage across different AWS services.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Security, Identity, and Compliance",
    "subtopic": "KMS & Encryption",
    "question": "Which AWS service is used to create and control encryption keys for data protection?",
    "correct_answer": "AWS Key Management Service (KMS)",
    "distractors": ["AWS Shield", "Amazon Macie", "AWS WAF"],
    "context": "AWS Key Management Service (KMS) is used to create, manage, and control encryption keys that protect your data across AWS services.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Security, Identity, and Compliance",
    "subtopic": "KMS & Encryption",
    "question": "Which encryption option in S3 uses keys managed by AWS?",
    "correct_answer": "SSE-S3",
    "distractors": ["SSE-C", "SSE-KMS", "SSE-Client"],
    "context": "SSE-S3 (Server-Side Encryption with S3-Managed Keys) automatically encrypts data at rest using keys managed by Amazon S3.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Security, Identity, and Compliance",
    "subtopic": "KMS & Encryption",
    "question": "What is the role of Customer Master Keys (CMKs) in AWS KMS?",
    "correct_answer": "To encrypt and decrypt data or other keys",
    "distractors": ["To store passwords", "To manage IAM roles", "To detect network threats"],
    "context": "Customer Master Keys (CMKs) in AWS KMS are used to encrypt and decrypt data or data keys, providing fine-grained access control and auditing.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Security, Identity, and Compliance",
    "subtopic": "AWS Shield",
    "question": "Which AWS service provides protection against Distributed Denial of Service (DDoS) attacks?",
    "correct_answer": "AWS Shield",
    "distractors": ["AWS WAF", "Amazon Inspector", "AWS Config"],
    "context": "AWS Shield is a managed DDoS protection service that safeguards applications running on AWS from common DDoS attacks.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Security, Identity, and Compliance",
    "subtopic": "AWS WAF",
    "question": "What is the primary function of AWS WAF?",
    "correct_answer": "To filter and monitor HTTP and HTTPS requests",
    "distractors": ["To manage encryption keys", "To detect DDoS attacks", "To scan malware"],
    "context": "AWS Web Application Firewall (WAF) protects web applications by filtering and monitoring HTTP and HTTPS requests based on defined rules.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Security, Identity, and Compliance",
    "subtopic": "Amazon GuardDuty",
    "question": "Which AWS service continuously monitors for malicious or unauthorized behavior?",
    "correct_answer": "Amazon GuardDuty",
    "distractors": ["AWS CloudTrail", "AWS Shield", "AWS Config"],
    "context": "Amazon GuardDuty is a threat detection service that continuously monitors for malicious or unauthorized activity in AWS accounts, workloads, and data.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Security, Identity, and Compliance",
    "subtopic": "AWS WAF, Shield, and GuardDuty",
    "question": "Which combination of AWS services provides layered security for web applications?",
    "correct_answer": "AWS WAF, AWS Shield, and GuardDuty",
    "distractors": ["S3, EC2, and CloudFront", "IAM, SSM, and CloudTrail", "EBS, VPC, and SNS"],
    "context": "AWS WAF, AWS Shield, and Amazon GuardDuty together provide a layered security approach for web applications including firewall protection, DDoS mitigation, and threat detection.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Security and Compliance",
    "subtopic": "Compliance Programs (HIPAA, PCI, etc.)",
    "question": "Which AWS compliance program is specifically designed for organizations that handle credit card data?",
    "correct_answer": "PCI DSS (Payment Card Industry Data Security Standard)",
    "distractors": [
      "HIPAA (Health Insurance Portability and Accountability Act)",
      "SOC 2 (Service Organization Control 2)",
      "GDPR (General Data Protection Regulation)"
    ],
    "context": "PCI DSS compliance is required for organizations that store, process, or transmit credit card information. AWS provides a PCI DSS compliant infrastructure and services to help customers build applications that handle payment card data securely.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Security and Compliance",
    "subtopic": "Compliance Programs (HIPAA, PCI, etc.)",
    "question": "What type of agreement must customers sign with AWS to ensure HIPAA compliance when handling protected health information (PHI)?",
    "correct_answer": "Business Associate Agreement (BAA)",
    "distractors": [
      "Service Level Agreement (SLA)",
      "Data Processing Agreement (DPA)",
      "Master Service Agreement (MSA)"
    ],
    "context": "Under HIPAA, AWS acts as a business associate when customers use AWS services to store, process, or transmit protected health information (PHI). Customers must sign a Business Associate Agreement (BAA) with AWS, which outlines the responsibilities and safeguards required to protect PHI in the cloud.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Security and Compliance",
    "subtopic": "Compliance Programs (HIPAA, PCI, etc.)",
    "question": "Which statement best describes the shared responsibility model in AWS compliance programs?",
    "correct_answer": "AWS is responsible for compliance of the cloud infrastructure, while customers are responsible for compliance in the cloud including their data and applications",
    "distractors": [
      "AWS is responsible for all compliance requirements including customer data and applications",
      "Customers are responsible for all compliance requirements including the underlying infrastructure",
      "Both AWS and customers share equal responsibility for all aspects of compliance"
    ],
    "context": "In AWS compliance programs, the shared responsibility model applies where AWS ensures the compliance of the underlying cloud infrastructure (security OF the cloud), while customers are responsible for configuring services securely and maintaining compliance for their data, applications, and configurations (security IN the cloud). This model applies across all compliance frameworks including HIPAA, PCI DSS, and SOC.",
    "difficulty": "advanced",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Security and Compliance",
    "subtopic": "Compliance Programs",
    "question": "Which AWS service helps customers assess their compliance with standards like HIPAA and PCI DSS by providing a shared responsibility model?",
    "correct_answer": "AWS Artifact",
    "distractors": [
      "AWS Shield",
      "Amazon Inspector",
      "AWS Config"
    ],
    "context": "AWS Artifact provides on-demand access to AWS compliance reports and agreements, helping customers verify compliance with standards like HIPAA and PCI DSS under the shared responsibility model.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Security and Compliance",
    "subtopic": "Compliance Programs",
    "question": "Which compliance standard requires AWS customers to ensure the security of cardholder data when processing credit card transactions?",
    "correct_answer": "PCI DSS",
    "distractors": [
      "HIPAA",
      "GDPR",
      "SOC 2"
    ],
    "context": "PCI DSS (Payment Card Industry Data Security Standard) is a compliance standard that mandates specific security measures for organizations handling cardholder data to ensure secure credit card transactions.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Security and Compliance",
    "subtopic": "Compliance Programs",
    "question": "What is a key requirement for AWS customers to achieve HIPAA compliance when using AWS services?",
    "correct_answer": "Signing a Business Associate Agreement (BAA) with AWS",
    "distractors": [
      "Enabling MFA for all AWS services",
      "Configuring cross-region replication",
      "Deploying AWS Shield Advanced"
    ],
    "context": "To achieve HIPAA compliance on AWS, customers must sign a Business Associate Agreement (BAA) with AWS, which outlines responsibilities for protecting health information under HIPAA regulations.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Compliance Programs",
    "subtopic": "HIPAA Compliance",
    "question": "Which type of data does AWS support storing in compliance with HIPAA regulations?",
    "correct_answer": "Protected Health Information (PHI)",
    "distractors": [
      "Financial Trading Data",
      "Public Social Media Posts",
      "Weather Forecasting Models"
    ],
    "context": "AWS enables customers to build HIPAA-compliant applications that can store, process, and transmit Protected Health Information (PHI) securely using services that support the AWS Business Associate Addendum (BAA).",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Compliance Programs",
    "subtopic": "Shared Responsibility Model",
    "question": "Under the AWS shared responsibility model, who is responsible for ensuring compliance with industry regulations like PCI DSS?",
    "correct_answer": "The customer is responsible for configuring their applications and data in a compliant manner",
    "distractors": [
      "AWS automatically ensures compliance for all workloads",
      "AWS Support handles all compliance configurations",
      "Compliance is managed by third-party auditors only"
    ],
    "context": "While AWS manages the security of the cloud infrastructure, customers are responsible for securing their applications and data within the cloud in accordance with regulations like PCI DSS.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Compliance Programs",
    "subtopic": "Compliance Reports and Artifacts",
    "question": "How can AWS customers access compliance reports such as ISO, SOC, or PCI certifications?",
    "correct_answer": "Through AWS Artifact",
    "distractors": [
      "Through Amazon CloudWatch",
      "Through AWS Shield",
      "Through AWS Config"
    ],
    "context": "AWS Artifact provides on-demand access to AWS compliance reports such as ISO, SOC, and PCI, helping customers demonstrate compliance with regulatory and industry standards.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Security, Identity, and Compliance",
    "subtopic": "Compliance Programs",
    "question": "Which AWS compliance program ensures the protection of healthcare information?",
    "correct_answer": "HIPAA",
    "distractors": ["PCI DSS", "FedRAMP", "ISO 27001"],
    "context": "HIPAA is a compliance framework supported by AWS that ensures the security and privacy of healthcare-related data stored and processed in the cloud.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Security, Identity, and Compliance",
    "subtopic": "Compliance Programs",
    "question": "Which AWS-supported compliance framework is primarily designed for organizations that handle credit card transactions?",
    "correct_answer": "PCI DSS",
    "distractors": ["HIPAA", "SOC 2", "FISMA"],
    "context": "PCI DSS is a set of security standards maintained by the Payment Card Industry to ensure secure handling of credit card information, and AWS provides services compliant with this framework.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Security, Identity, and Compliance",
    "subtopic": "Compliance Programs",
    "question": "What is the purpose of AWS participating in multiple compliance programs such as ISO 27001, HIPAA, and PCI DSS?",
    "correct_answer": "To help customers meet regulatory and industry requirements",
    "distractors": ["To encrypt data at rest", "To reduce billing errors", "To monitor network traffic"],
    "context": "AWS participates in a wide range of compliance programs like ISO 27001, HIPAA, and PCI DSS to help customers meet specific regulatory, legal, and industry requirements when using cloud services.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Storage Services",
    "subtopic": "Amazon RDS",
    "question": "Which AWS service allows you to run managed relational databases such as MySQL and PostgreSQL?",
    "correct_answer": "Amazon RDS",
    "distractors": [
      "Amazon DynamoDB",
      "Amazon S3",
      "Amazon Redshift"
    ],
    "context": "Amazon RDS is a managed service that makes it easy to set up, operate, and scale relational databases including MySQL, PostgreSQL, Oracle, and SQL Server.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Storage Services",
    "subtopic": "Amazon DynamoDB",
    "question": "What type of database is Amazon DynamoDB?",
    "correct_answer": "A fully managed NoSQL database service",
    "distractors": [
      "A relational database service",
      "A data warehouse service",
      "An object storage service"
    ],
    "context": "Amazon DynamoDB is a fully managed NoSQL database service that provides fast and predictable performance with seamless scalability.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Storage Services",
    "subtopic": "Amazon Aurora",
    "question": "What is Amazon Aurora designed to provide?",
    "correct_answer": "A high-performance, MySQL- and PostgreSQL-compatible relational database",
    "distractors": [
      "A NoSQL key-value store",
      "An in-memory caching service",
      "A managed data warehouse"
    ],
    "context": "Amazon Aurora is a relational database engine compatible with MySQL and PostgreSQL that combines the performance and availability of commercial databases at a lower cost.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Storage Services",
    "subtopic": "Amazon RDS Backups",
    "question": "How does Amazon RDS ensure data durability and recovery?",
    "correct_answer": "By automatically taking backups and enabling point-in-time recovery",
    "distractors": [
      "By storing data in DynamoDB tables",
      "By replicating data to S3 buckets",
      "By manually exporting data every day"
    ],
    "context": "Amazon RDS automatically performs backups of your database and supports point-in-time recovery to protect your data against failures.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Storage Services",
    "subtopic": "DynamoDB Performance",
    "question": "What feature of DynamoDB helps it handle high request rates with low latency?",
    "correct_answer": "Automatic scaling of throughput capacity",
    "distractors": [
      "Manual shard management",
      "Fixed storage limits",
      "Periodic database restarts"
    ],
    "context": "DynamoDB automatically scales throughput capacity to adjust for workload traffic and maintain low latency performance.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Storage Services",
    "subtopic": "Amazon Aurora High Availability",
    "question": "How does Amazon Aurora achieve high availability and fault tolerance?",
    "correct_answer": "By replicating data across multiple Availability Zones",
    "distractors": [
      "By storing data only on a single server",
      "By backing up data to Amazon S3 every week",
      "By requiring manual failover configuration"
    ],
    "context": "Amazon Aurora replicates data across multiple Availability Zones to provide high availability and fault tolerance without performance impact.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Storage Services",
    "subtopic": "DynamoDB Use Cases",
    "question": "Which of the following is a common use case for Amazon DynamoDB?",
    "correct_answer": "Storing session data for web applications",
    "distractors": [
      "Running complex SQL joins",
      "Storing large unstructured files",
      "Hosting static websites"
    ],
    "context": "Amazon DynamoDB is often used to store session state, user profiles, and metadata due to its fast, scalable NoSQL capabilities.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Storage Services",
    "subtopic": "RDS vs Aurora",
    "question": "What is a key difference between Amazon RDS and Amazon Aurora?",
    "correct_answer": "Aurora offers higher performance and availability than standard RDS engines",
    "distractors": [
      "RDS supports NoSQL while Aurora does not",
      "Aurora only supports Microsoft SQL Server",
      "RDS cannot be used for production workloads"
    ],
    "context": "Amazon Aurora is designed to be a high-performance, highly available database service compatible with MySQL and PostgreSQL, offering better scalability than standard RDS.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Storage Services",
    "subtopic": "DynamoDB Backup",
    "question": "How can you protect your DynamoDB data from accidental deletion or corruption?",
    "correct_answer": "By enabling on-demand backups and point-in-time recovery",
    "distractors": [
      "By replicating data to Amazon Aurora",
      "By configuring EC2 snapshot backups",
      "By exporting data to Amazon Redshift"
    ],
    "context": "DynamoDB supports on-demand backups and point-in-time recovery to help protect against accidental data loss or corruption.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Storage Services",
    "subtopic": "Aurora Serverless",
    "question": "What is a benefit of using Amazon Aurora Serverless?",
    "correct_answer": "It automatically scales database capacity based on application demand",
    "distractors": [
      "It eliminates the need for encryption at rest",
      "It provides manual scaling of throughput",
      "It is only available for NoSQL databases"
    ],
    "context": "Amazon Aurora Serverless is an on-demand, auto-scaling configuration for Aurora that adjusts database capacity automatically to match application needs.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Database Services",
    "subtopic": "Amazon RDS",
    "question": "Which AWS service provides a managed relational database supporting engines like MySQL and PostgreSQL?",
    "correct_answer": "Amazon RDS",
    "distractors": [
      "Amazon DynamoDB",
      "Amazon Redshift",
      "Amazon ElastiCache"
    ],
    "context": "Amazon RDS (Relational Database Service) is a managed service that simplifies the setup, operation, and scaling of relational databases, supporting engines like MySQL, PostgreSQL, and others.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Database Services",
    "subtopic": "Amazon DynamoDB",
    "question": "What type of database is Amazon DynamoDB primarily designed to support?",
    "correct_answer": "NoSQL",
    "distractors": [
      "Relational",
      "Data Warehouse",
      "In-Memory"
    ],
    "context": "Amazon DynamoDB is a fully managed NoSQL database service designed for high performance and scalability, ideal for key-value and document data models.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Database Services",
    "subtopic": "Amazon Aurora",
    "question": "Which AWS database service is a MySQL- and PostgreSQL-compatible relational database with enhanced performance and scalability?",
    "correct_answer": "Amazon Aurora",
    "distractors": [
      "Amazon RDS",
      "Amazon DynamoDB",
      "Amazon Timestream"
    ],
    "context": "Amazon Aurora is a high-performance, MySQL- and PostgreSQL-compatible relational database built for the cloud, offering better scalability and availability than standard RDS.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Database Services",
    "subtopic": "Amazon RDS",
    "question": "What feature of Amazon RDS allows automatic backups and point-in-time recovery for relational databases?",
    "correct_answer": "Automated Backups",
    "distractors": [
      "Read Replicas",
      "Multi-AZ Deployments",
      "Global Tables"
    ],
    "context": "Amazon RDS provides automated backups, enabling point-in-time recovery to restore a database to a specific moment, enhancing data protection and recovery.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Database Services",
    "subtopic": "Amazon DynamoDB",
    "question": "Which feature of Amazon DynamoDB automatically scales throughput capacity based on application demand?",
    "correct_answer": "Auto Scaling",
    "distractors": [
      "Cross-Region Replication",
      "Backup and Restore",
      "Encryption at Rest"
    ],
    "context": "Amazon DynamoDB Auto Scaling dynamically adjusts read and write throughput capacity based on application traffic, ensuring performance and cost efficiency.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Database Services",
    "subtopic": "Amazon Aurora",
    "question": "What is a key advantage of Amazon Aurora over traditional Amazon RDS database engines?",
    "correct_answer": "Higher performance and up to five times faster than standard MySQL",
    "distractors": [
      "Support for NoSQL data models",
      "Automatic encryption of all data",
      "Free tier availability for all users"
    ],
    "context": "Amazon Aurora offers up to five times the performance of standard MySQL and three times that of PostgreSQL, with features like auto-scaling and high availability.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Database Services",
    "subtopic": "Amazon RDS",
    "question": "Which Amazon RDS feature enhances availability by maintaining a standby replica in a different Availability Zone?",
    "correct_answer": "Multi-AZ Deployments",
    "distractors": [
      "Read Replicas",
      "Automated Backups",
      "Database Snapshots"
    ],
    "context": "Amazon RDS Multi-AZ Deployments create a standby replica in a different Availability Zone, enabling automatic failover to ensure high availability and durability.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Database Services",
    "subtopic": "Amazon DynamoDB",
    "question": "What is a key difference between Amazon DynamoDB and Amazon RDS in terms of data management?",
    "correct_answer": "DynamoDB is schema-less, while RDS requires a predefined schema",
    "distractors": [
      "DynamoDB is relational, while RDS is NoSQL",
      "DynamoDB requires manual scaling, while RDS auto-scales",
      "DynamoDB only supports SQL queries, while RDS does not"
    ],
    "context": "Amazon DynamoDB is a NoSQL database with a flexible, schema-less structure, while Amazon RDS is a relational database requiring a predefined schema for structured data.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Database Services",
    "subtopic": "Amazon Aurora",
    "question": "Which Amazon Aurora feature allows for up to 15 read replicas to improve read performance and availability?",
    "correct_answer": "Aurora Replicas",
    "distractors": [
      "Aurora Serverless",
      "Aurora Global Database",
      "Aurora Multi-Master"
    ],
    "context": "Aurora Replicas in Amazon Aurora allow up to 15 read replicas to offload read traffic, improving performance and availability for read-heavy workloads.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Database Services",
    "subtopic": "Amazon DynamoDB",
    "question": "Which DynamoDB feature enables low-latency access to frequently accessed data across multiple regions?",
    "correct_answer": "Global Tables",
    "distractors": [
      "DynamoDB Streams",
      "DynamoDB Accelerator (DAX)",
      "DynamoDB Auto Scaling"
    ],
    "context": "DynamoDB Global Tables provide a fully managed, multi-region replication solution, ensuring low-latency access to data for globally distributed applications.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Database Services",
    "subtopic": "RDS (MySQL, PostgreSQL, etc.)",
    "question": "What type of database service is Amazon RDS?",
    "correct_answer": "Managed relational database service",
    "distractors": [
      "NoSQL document database service",
      "In-memory caching service",
      "Data warehousing service"
    ],
    "context": "Amazon RDS is a managed relational database service that supports multiple database engines including MySQL, PostgreSQL, MariaDB, Oracle, and SQL Server. It handles routine database tasks such as provisioning, patching, backup, recovery, and scaling.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Database Services",
    "subtopic": "DynamoDB (NoSQL)",
    "question": "What type of database is Amazon DynamoDB?",
    "correct_answer": "NoSQL key-value and document database",
    "distractors": [
      "Relational SQL database",
      "Graph database",
      "Time-series database"
    ],
    "context": "Amazon DynamoDB is a fully managed NoSQL database service that provides fast and predictable performance with seamless scalability. It supports both key-value and document data models, making it suitable for mobile, web, gaming, and IoT applications.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Database Services",
    "subtopic": "Aurora",
    "question": "What is Amazon Aurora?",
    "correct_answer": "MySQL and PostgreSQL-compatible relational database built for the cloud",
    "distractors": [
      "NoSQL database for real-time applications",
      "Data warehousing solution for analytics",
      "In-memory database for caching"
    ],
    "context": "Amazon Aurora is a MySQL and PostgreSQL-compatible relational database built for the cloud. It combines the performance and availability of traditional enterprise databases with the simplicity and cost-effectiveness of open source databases, delivering up to 5x the performance of MySQL and 3x the performance of PostgreSQL.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Database Services",
    "subtopic": "RDS (MySQL, PostgreSQL, etc.)",
    "question": "Which RDS feature automatically creates backups and enables point-in-time recovery?",
    "correct_answer": "Automated backups",
    "distractors": [
      "Read replicas",
      "Multi-AZ deployment",
      "Parameter groups"
    ],
    "context": "RDS automated backups enable point-in-time recovery for your database instance. During the backup window, storage I/O may be suspended while your data is being backed up, and you may experience elevated latency. Automated backups are retained for a configurable period (1-35 days).",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Database Services",
    "subtopic": "DynamoDB (NoSQL)",
    "question": "What is the primary key structure in DynamoDB?",
    "correct_answer": "Partition key (required) and optional sort key",
    "distractors": [
      "Only a single primary key column",
      "Multiple foreign key relationships",
      "Composite key with three or more attributes"
    ],
    "context": "DynamoDB uses a primary key to uniquely identify each item in a table. The primary key can be either a simple primary key (partition key only) or a composite primary key (partition key and sort key). The partition key determines which partition the item is stored in, while the sort key determines the order of items within that partition.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Database Services",
    "subtopic": "Aurora",
    "question": "How does Aurora's storage architecture differ from traditional RDS databases?",
    "correct_answer": "Aurora uses distributed, fault-tolerant storage that automatically scales",
    "distractors": [
      "Aurora stores data only in a single Availability Zone",
      "Aurora requires manual storage provisioning and scaling",
      "Aurora uses local SSD storage attached to database instances"
    ],
    "context": "Aurora's storage architecture is distributed across multiple Availability Zones and automatically scales from 10GB to 128TB as needed. The storage layer is fault-tolerant, self-healing, and designed to handle the loss of up to two copies of data without affecting database write availability and up to three copies without affecting read availability.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Database Services",
    "subtopic": "RDS (MySQL, PostgreSQL, etc.)",
    "question": "What is the purpose of RDS Multi-AZ deployment?",
    "correct_answer": "Provide high availability and automatic failover",
    "distractors": [
      "Improve read performance by distributing queries",
      "Reduce database licensing costs",
      "Enable cross-region data replication"
    ],
    "context": "RDS Multi-AZ deployment provides high availability and failover support for DB instances. When you provision a Multi-AZ DB instance, Amazon RDS automatically creates a primary DB instance and synchronously replicates the data to a standby instance in a different Availability Zone. In case of an infrastructure failure, RDS performs an automatic failover to the standby.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Database Services",
    "subtopic": "DynamoDB (NoSQL)",
    "question": "Which DynamoDB capacity mode automatically adjusts throughput capacity based on traffic patterns?",
    "correct_answer": "On-Demand capacity mode",
    "distractors": [
      "Provisioned capacity mode",
      "Reserved capacity mode",
      "Burst capacity mode"
    ],
    "context": "DynamoDB On-Demand capacity mode automatically scales throughput capacity up and down based on your application's traffic patterns. You pay per request for the data reads and writes your application performs, without needing to specify or provision throughput capacity in advance.",
    "difficulty": "advanced",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Database Services",
    "subtopic": "Aurora",
    "question": "What is the maximum number of Aurora read replicas that can be created for a single Aurora cluster?",
    "correct_answer": "15 read replicas",
    "distractors": [
      "5 read replicas",
      "10 read replicas",
      "25 read replicas"
    ],
    "context": "Aurora supports up to 15 Aurora read replicas per cluster, distributed across multiple Availability Zones. These read replicas share the same underlying storage as the primary instance and provide additional read capacity with minimal impact on the primary instance's performance. Aurora read replicas can also serve as failover targets.",
    "difficulty": "advanced",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Database Services",
    "subtopic": "RDS (MySQL, PostgreSQL, etc.)",
    "question": "Which statement best describes the relationship between RDS Multi-AZ and Read Replicas?",
    "correct_answer": "Multi-AZ is for high availability while Read Replicas are for read scaling performance",
    "distractors": [
      "Multi-AZ and Read Replicas serve the same purpose and cannot be used together",
      "Read Replicas provide high availability while Multi-AZ improves read performance",
      "Both Multi-AZ and Read Replicas are only used for backup purposes"
    ],
    "context": "Multi-AZ deployment is designed for high availability and disaster recovery, providing automatic failover capability. Read Replicas are designed to improve read performance by offloading read queries from the primary database. They serve different purposes: Multi-AZ for availability and Read Replicas for performance scaling, and they can be used together in the same deployment.",
    "difficulty": "advanced",
    "type": "mcq"
  },
  
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Databases",
    "subtopic": "Amazon RDS",
    "question": "Which AWS service provides managed relational databases for engines like MySQL and PostgreSQL?",
    "correct_answer": "Amazon RDS",
    "distractors": ["Amazon S3", "Amazon DynamoDB", "AWS Lambda"],
    "context": "Amazon RDS is a managed service that supports relational database engines such as MySQL, PostgreSQL, Oracle, and SQL Server.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Databases",
    "subtopic": "Amazon DynamoDB",
    "question": "Which AWS service is best suited for a high-throughput NoSQL key-value store?",
    "correct_answer": "Amazon DynamoDB",
    "distractors": ["Amazon RDS", "Amazon Aurora", "Amazon Redshift"],
    "context": "Amazon DynamoDB is a fast and flexible NoSQL database service for single-digit millisecond performance at scale.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Databases",
    "subtopic": "Amazon Aurora",
    "question": "Which AWS relational database is designed for high performance and is compatible with MySQL and PostgreSQL?",
    "correct_answer": "Amazon Aurora",
    "distractors": ["Amazon DynamoDB", "Amazon ElastiCache", "Amazon Redshift"],
    "context": "Amazon Aurora is a fully managed relational database built for the cloud, compatible with MySQL and PostgreSQL, and offers up to 5x performance of standard MySQL.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Databases",
    "subtopic": "Amazon RDS",
    "question": "What AWS database service allows automated backups, patching, and scaling for relational databases?",
    "correct_answer": "Amazon RDS",
    "distractors": ["Amazon EC2", "Amazon S3", "AWS Glue"],
    "context": "Amazon RDS automates time-consuming administrative tasks like backups, software patching, and scaling for relational databases.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Databases",
    "subtopic": "Amazon DynamoDB",
    "question": "Which AWS service is fully serverless and suitable for applications requiring consistent low-latency performance?",
    "correct_answer": "Amazon DynamoDB",
    "distractors": ["Amazon RDS", "Amazon Aurora", "Amazon Neptune"],
    "context": "DynamoDB is a serverless key-value and document database that delivers single-digit millisecond response times at any scale.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Databases",
    "subtopic": "Amazon Aurora",
    "question": "Which AWS database service automatically replicates data across multiple Availability Zones for durability?",
    "correct_answer": "Amazon Aurora",
    "distractors": ["Amazon S3", "Amazon DynamoDB", "Amazon RDS"],
    "context": "Aurora replicates data across multiple Availability Zones and is designed for high availability and fault tolerance.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Databases",
    "subtopic": "Amazon RDS",
    "question": "Which service would you choose to run a managed PostgreSQL database with automatic scaling and backups?",
    "correct_answer": "Amazon RDS",
    "distractors": ["Amazon Aurora", "Amazon DynamoDB", "Amazon Redshift"],
    "context": "Amazon RDS provides managed relational databases including PostgreSQL, with features like backups, patching, and scaling.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Databases",
    "subtopic": "Amazon DynamoDB",
    "question": "What AWS service provides on-demand capacity and automatic scaling for NoSQL workloads?",
    "correct_answer": "Amazon DynamoDB",
    "distractors": ["Amazon Aurora", "Amazon RDS", "Amazon Neptune"],
    "context": "DynamoDB offers on-demand capacity mode and auto-scaling, making it ideal for unpredictable NoSQL workloads.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Databases",
    "subtopic": "Amazon Aurora",
    "question": "Which AWS database is designed for fault-tolerant, self-healing storage and is compatible with SQL engines?",
    "correct_answer": "Amazon Aurora",
    "distractors": ["Amazon RDS", "Amazon Redshift", "Amazon Timestream"],
    "context": "Amazon Aurora offers fault-tolerant, self-healing storage and is compatible with MySQL and PostgreSQL.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Databases",
    "subtopic": "Amazon RDS",
    "question": "How does Amazon RDS help reduce operational overhead for database management?",
    "correct_answer": "By automating administrative tasks like backups and patching",
    "distractors": ["By offering NoSQL key-value store", "By providing data lake analytics", "By replicating data to S3"],
    "context": "Amazon RDS reduces operational overhead by automating common administrative tasks like backups, patching, and hardware provisioning.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Storage Services",
    "subtopic": "Amazon Redshift",
    "question": "Which AWS service is a fully managed data warehouse designed for large scale data analytics?",
    "correct_answer": "Amazon Redshift",
    "distractors": ["Amazon DynamoDB", "Amazon RDS", "Amazon S3"],
    "context": "Amazon Redshift is a fully managed, petabyte-scale data warehouse service designed for large scale data analytics.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Storage Services",
    "subtopic": "Amazon ElastiCache",
    "question": "Which AWS service provides in-memory caching to improve the performance of web applications?",
    "correct_answer": "Amazon ElastiCache",
    "distractors": ["Amazon Redshift", "Amazon RDS", "Amazon S3"],
    "context": "Amazon ElastiCache is a web service that simplifies deploying, operating, and scaling in-memory caches in the cloud to improve application performance.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Storage Services",
    "subtopic": "Amazon Redshift",
    "question": "Which feature of Amazon Redshift allows you to query exabytes of data across your data warehouse and data lake?",
    "correct_answer": "Redshift Spectrum",
    "distractors": ["ElastiCache Clusters", "RDS Multi-AZ", "S3 Glacier"],
    "context": "Redshift Spectrum allows querying of exabytes of data directly in Amazon S3 without loading it into the data warehouse.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Storage Services",
    "subtopic": "Amazon ElastiCache",
    "question": "Which caching engines does Amazon ElastiCache support?",
    "correct_answer": "Memcached and Redis",
    "distractors": ["MongoDB and Cassandra", "MySQL and PostgreSQL", "DynamoDB and Aurora"],
    "context": "Amazon ElastiCache supports Memcached and Redis caching engines for in-memory data storage.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Storage Services",
    "subtopic": "Amazon Redshift",
    "question": "How does Amazon Redshift ensure fast query performance for complex analytic queries?",
    "correct_answer": "By using columnar storage and data compression",
    "distractors": ["By using row-based storage", "By caching all queries in ElastiCache", "By storing data in Amazon S3"],
    "context": "Amazon Redshift uses columnar storage and data compression to speed up complex analytic queries.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Storage Services",
    "subtopic": "Amazon ElastiCache",
    "question": "Which use case is best suited for Amazon ElastiCache?",
    "correct_answer": "Reducing database load by caching frequently accessed data",
    "distractors": ["Storing large amounts of archival data", "Running batch data analytics", "Hosting a relational database"],
    "context": "Amazon ElastiCache is used to reduce database load by caching frequently accessed data in memory.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Storage Services",
    "subtopic": "Amazon Redshift",
    "question": "What is the primary purpose of Amazon Redshift’s distribution styles?",
    "correct_answer": "To optimize data distribution across nodes for efficient query processing",
    "distractors": ["To replicate data to S3", "To encrypt data at rest", "To create backups"],
    "context": "Amazon Redshift distribution styles determine how data is distributed across nodes to optimize query performance.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Storage Services",
    "subtopic": "Amazon ElastiCache",
    "question": "Which feature of Amazon ElastiCache helps improve application response times?",
    "correct_answer": "In-memory data storage",
    "distractors": ["Disk-based storage", "Multi-AZ backups", "Data warehousing"],
    "context": "Amazon ElastiCache uses in-memory data storage to provide sub-millisecond latency and improve application response times.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Storage Services",
    "subtopic": "Amazon Redshift",
    "question": "Which AWS service would you use for petabyte-scale data warehousing to analyze structured data?",
    "correct_answer": "Amazon Redshift",
    "distractors": ["Amazon DynamoDB", "Amazon Aurora", "Amazon ElastiCache"],
    "context": "Amazon Redshift is designed for petabyte-scale data warehousing and analytics of structured data.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Storage Services",
    "subtopic": "Amazon ElastiCache",
    "question": "Which cache engine in Amazon ElastiCache supports advanced data structures like sorted sets and bitmaps?",
    "correct_answer": "Redis",
    "distractors": ["Memcached", "DynamoDB", "Aurora"],
    "context": "Redis, supported by Amazon ElastiCache, provides advanced data structures such as sorted sets, bitmaps, and hyperloglogs.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Database Services",
    "subtopic": "Redshift",
    "question": "What type of database service is Amazon Redshift?",
    "correct_answer": "Data warehousing and analytics database",
    "distractors": [
      "Relational database for OLTP workloads",
      "NoSQL document database",
      "In-memory caching service"
    ],
    "context": "Amazon Redshift is a fully managed, petabyte-scale data warehousing service designed for online analytical processing (OLAP) and business intelligence workloads. It is optimized for analyzing large datasets using SQL queries and integrates with various business intelligence tools.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Database Services",
    "subtopic": "ElastiCache",
    "question": "What is the primary purpose of Amazon ElastiCache?",
    "correct_answer": "Provide in-memory caching to improve application performance",
    "distractors": [
      "Store large datasets for data warehousing",
      "Provide backup and archival storage",
      "Host relational databases in the cloud"
    ],
    "context": "Amazon ElastiCache is a web service that makes it easy to deploy, operate, and scale an in-memory cache in the cloud. It improves the performance of web applications by allowing you to retrieve information from fast, managed, in-memory caches, instead of relying entirely on slower disk-based databases.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Database Services",
    "subtopic": "Redshift",
    "question": "Which storage architecture does Amazon Redshift use for optimal analytics performance?",
    "correct_answer": "Columnar storage",
    "distractors": [
      "Row-based storage",
      "Object storage",
      "Block storage"
    ],
    "context": "Amazon Redshift uses columnar storage technology to improve query performance and reduce I/O requirements. Data is stored by column rather than by row, which allows for better compression and faster query execution for analytical workloads that typically access specific columns across many rows.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Database Services",
    "subtopic": "ElastiCache",
    "question": "Which two caching engines does Amazon ElastiCache support?",
    "correct_answer": "Redis and Memcached",
    "distractors": [
      "MySQL and PostgreSQL",
      "MongoDB and DynamoDB",
      "Cassandra and HBase"
    ],
    "context": "Amazon ElastiCache supports two popular open-source in-memory caching engines: Redis and Memcached. Redis offers advanced data structures and features like persistence, replication, and clustering, while Memcached provides a simple, high-performance distributed memory caching system.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Database Services",
    "subtopic": "Redshift",
    "question": "What is Amazon Redshift Spectrum?",
    "correct_answer": "Feature that allows querying data directly in S3 without loading it into Redshift",
    "distractors": [
      "Security feature for encrypting Redshift data",
      "Backup and recovery service for Redshift clusters",
      "Load balancing service for Redshift connections"
    ],
    "context": "Amazon Redshift Spectrum allows you to run SQL queries against exabytes of data in Amazon S3 without having to load or transform any data. It extends the analytic power of Amazon Redshift beyond the data stored on local disks in your data warehouse cluster to query vast amounts of unstructured data in your Amazon S3 data lake.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Database Services",
    "subtopic": "ElastiCache",
    "question": "Which ElastiCache engine supports data persistence and automatic failover?",
    "correct_answer": "Redis",
    "distractors": [
      "Memcached",
      "Both Redis and Memcached",
      "Neither Redis nor Memcached"
    ],
    "context": "Redis supports data persistence by periodically saving snapshots to disk and maintaining an append-only file. It also supports Multi-AZ with automatic failover for high availability. Memcached is purely in-memory and does not support persistence or automatic failover capabilities.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Database Services",
    "subtopic": "Redshift",
    "question": "What is the typical use case difference between Amazon Redshift and Amazon RDS?",
    "correct_answer": "Redshift is for analytical workloads (OLAP) while RDS is for transactional workloads (OLTP)",
    "distractors": [
      "Redshift is for small databases while RDS is for large databases",
      "Redshift is for real-time processing while RDS is for batch processing",
      "Redshift is for unstructured data while RDS is for structured data"
    ],
    "context": "Amazon Redshift is optimized for Online Analytical Processing (OLAP) workloads such as business intelligence, reporting, and data analytics on large datasets. Amazon RDS is designed for Online Transaction Processing (OLTP) workloads that require frequent, fast transactions and real-time data processing for operational applications.",
    "difficulty": "advanced",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Database Services",
    "subtopic": "ElastiCache",
    "question": "Which caching strategy involves writing data to the cache every time data is written to the database?",
    "correct_answer": "Write-through caching",
    "distractors": [
      "Lazy loading",
      "Write-behind caching",
      "Cache-aside pattern"
    ],
    "context": "Write-through caching is a strategy where data is written to both the cache and the database simultaneously. This ensures that the cache is always up-to-date but can add latency to write operations. It's different from lazy loading (cache-aside) where data is loaded into cache only when requested and not found in cache.",
    "difficulty": "advanced",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Database Services",
    "subtopic": "Redshift",
    "question": "What is the maximum number of compute nodes that can be provisioned in a single Amazon Redshift cluster?",
    "correct_answer": "128 compute nodes",
    "distractors": [
      "64 compute nodes",
      "256 compute nodes",
      "32 compute nodes"
    ],
    "context": "Amazon Redshift clusters can scale up to 128 compute nodes, providing petabyte-scale storage and high-performance query processing. The cluster consists of a leader node that coordinates query execution and compute nodes that store data and perform computations. Scaling can be done by adding more nodes or resizing existing nodes.",
    "difficulty": "advanced",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Database Services",
    "subtopic": "ElastiCache",
    "question": "Which ElastiCache deployment option provides the highest availability and fault tolerance?",
    "correct_answer": "Redis cluster mode with Multi-AZ enabled",
    "distractors": [
      "Single Redis node",
      "Memcached cluster",
      "Redis replication group without clustering"
    ],
    "context": "Redis cluster mode with Multi-AZ provides the highest availability by distributing data across multiple nodes and Availability Zones. It supports automatic failover, data partitioning (sharding), and can continue operating even if some nodes fail. This configuration offers both horizontal scaling and high availability compared to single-node deployments or Memcached clusters.",
    "difficulty": "advanced",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Database Services",
    "subtopic": "Amazon Redshift",
    "question": "Which AWS service is designed for data warehousing and large-scale data analytics?",
    "correct_answer": "Amazon Redshift",
    "distractors": [
      "Amazon DynamoDB",
      "Amazon RDS",
      "Amazon ElastiCache"
    ],
    "context": "Amazon Redshift is a fully managed data warehouse service optimized for analyzing large datasets using SQL queries and business intelligence tools.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Database Services",
    "subtopic": "Amazon ElastiCache",
    "question": "What is the primary purpose of Amazon ElastiCache in AWS applications?",
    "correct_answer": "To provide in-memory caching for improved application performance",
    "distractors": [
      "To store relational databases",
      "To analyze large-scale datasets",
      "To manage file storage"
    ],
    "context": "Amazon ElastiCache is a managed in-memory caching service that enhances application performance by storing frequently accessed data in memory using engines like Redis or Memcached.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Database Services",
    "subtopic": "Amazon Redshift",
    "question": "Which type of workload is Amazon Redshift best suited for?",
    "correct_answer": "Online Analytical Processing (OLAP)",
    "distractors": [
      "Online Transaction Processing (OLTP)",
      "Key-value storage",
      "Real-time streaming"
    ],
    "context": "Amazon Redshift is optimized for Online Analytical Processing (OLAP) workloads, enabling complex queries and analytics on large datasets in a data warehouse environment.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Database Services",
    "subtopic": "Amazon ElastiCache",
    "question": "Which two in-memory engines are supported by Amazon ElastiCache?",
    "correct_answer": "Redis and Memcached",
    "distractors": [
      "MySQL and PostgreSQL",
      "Aurora and DynamoDB",
      "MongoDB and Cassandra"
    ],
    "context": "Amazon ElastiCache supports Redis and Memcached as in-memory engines, providing low-latency data access for caching and real-time applications.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Database Services",
    "subtopic": "Amazon Redshift",
    "question": "What feature of Amazon Redshift allows distribution of data across multiple nodes to improve query performance?",
    "correct_answer": "Distribution Keys",
    "distractors": [
      "Read Replicas",
      "Auto Scaling Groups",
      "Global Tables"
    ],
    "context": "Amazon Redshift uses Distribution Keys to distribute data across compute nodes, optimizing query performance by reducing data movement during query execution.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Database Services",
    "subtopic": "Amazon ElastiCache",
    "question": "Which use case is best suited for Amazon ElastiCache in a web application?",
    "correct_answer": "Caching database query results to reduce latency",
    "distractors": [
      "Storing large datasets for analytics",
      "Hosting a relational database",
      "Backing up application data"
    ],
    "context": "Amazon ElastiCache is commonly used to cache database query results, reducing latency and database load by storing frequently accessed data in memory.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Database Services",
    "subtopic": "Amazon Redshift",
    "question": "Which Amazon Redshift feature enables automatic scaling of compute resources based on workload demands?",
    "correct_answer": "Concurrency Scaling",
    "distractors": [
      "Multi-AZ Deployments",
      "DynamoDB Streams",
      "Elastic Load Balancing"
    ],
    "context": "Amazon Redshift Concurrency Scaling automatically adds compute resources to handle increased query loads, ensuring consistent performance for data warehouse workloads.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Database Services",
    "subtopic": "Amazon ElastiCache",
    "question": "How does Amazon ElastiCache with Redis differ from Memcached in terms of data persistence?",
    "correct_answer": "Redis supports data persistence, while Memcached does not",
    "distractors": [
      "Memcached supports data persistence, while Redis does not",
      "Both Redis and Memcached support data persistence",
      "Neither Redis nor Memcached supports data persistence"
    ],
    "context": "Amazon ElastiCache with Redis supports data persistence, allowing data to be saved to disk, while Memcached is designed for temporary in-memory caching without persistence.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Database Services",
    "subtopic": "Amazon Redshift",
    "question": "What is a key benefit of using Amazon Redshift Spectrum for data analysis?",
    "correct_answer": "Querying data directly in Amazon S3 without loading it into Redshift",
    "distractors": [
      "Running NoSQL queries on Redshift clusters",
      "Caching query results in memory",
      "Automating database backups"
    ],
    "context": "Amazon Redshift Spectrum allows users to query data stored in Amazon S3 directly using SQL, without needing to load it into Redshift clusters, improving flexibility and cost efficiency.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Database Services",
    "subtopic": "Amazon ElastiCache",
    "question": "Which Amazon ElastiCache feature enhances availability by replicating data across multiple nodes?",
    "correct_answer": "Redis Cluster Mode",
    "distractors": [
      "Memcached Auto Scaling",
      "Redis Read Replicas",
      "ElastiCache Global Datastore"
    ],
    "context": "Redis Cluster Mode in Amazon ElastiCache enables data replication across multiple nodes, providing high availability and fault tolerance for cached data.",
    "difficulty": "advance",
    "type": "mcq"
  },
   {
    "goal": "AWS Cloud Practitioner",
    "topic": "Storage Services",
    "subtopic": "Amazon Redshift",
    "question": "What type of service is Amazon Redshift?",
    "correct_answer": "A fully managed data warehouse service",
    "distractors": [
      "A NoSQL database service",
      "An in-memory caching service",
      "An object storage service"
    ],
    "context": "Amazon Redshift is a fully managed data warehouse service that makes it simple and cost-effective to analyze large volumes of data.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Storage Services",
    "subtopic": "Amazon ElastiCache",
    "question": "What is the primary purpose of Amazon ElastiCache?",
    "correct_answer": "To improve application performance by caching data in-memory",
    "distractors": [
      "To provide scalable object storage",
      "To manage relational databases",
      "To archive data to long-term storage"
    ],
    "context": "Amazon ElastiCache is a fully managed service that improves application performance by storing frequently accessed data in memory caches.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Storage Services",
    "subtopic": "Amazon Redshift Scalability",
    "question": "How does Amazon Redshift handle large-scale data analysis?",
    "correct_answer": "By distributing data across multiple nodes in a cluster",
    "distractors": [
      "By storing data only on a single server",
      "By using in-memory caching exclusively",
      "By offloading data to Amazon S3 automatically"
    ],
    "context": "Amazon Redshift distributes data across multiple nodes in a cluster to allow fast querying and analysis of large datasets.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Storage Services",
    "subtopic": "ElastiCache Engines",
    "question": "Which caching engines are supported by Amazon ElastiCache?",
    "correct_answer": "Redis and Memcached",
    "distractors": [
      "MongoDB and Cassandra",
      "MySQL and PostgreSQL",
      "DynamoDB and Aurora"
    ],
    "context": "Amazon ElastiCache supports two open-source in-memory caching engines: Redis and Memcached.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Storage Services",
    "subtopic": "Amazon Redshift Integration",
    "question": "Which AWS service is commonly used to load data into Amazon Redshift for analytics?",
    "correct_answer": "Amazon S3",
    "distractors": [
      "Amazon DynamoDB",
      "Amazon ElastiCache",
      "Amazon EBS"
    ],
    "context": "Data is often loaded into Amazon Redshift from Amazon S3 buckets to enable fast, complex queries on large datasets.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Storage Services",
    "subtopic": "ElastiCache Use Case",
    "question": "What is a common use case for Amazon ElastiCache?",
    "correct_answer": "Reducing database load by caching frequently accessed data",
    "distractors": [
      "Long-term archival of data",
      "Hosting relational databases",
      "Data warehousing for business intelligence"
    ],
    "context": "Amazon ElastiCache reduces database load by caching frequently accessed data, improving application latency and throughput.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Storage Services",
    "subtopic": "Amazon Redshift Security",
    "question": "How does Amazon Redshift secure data during transmission?",
    "correct_answer": "By encrypting data in transit using SSL",
    "distractors": [
      "By storing data only in public subnets",
      "By disabling network encryption",
      "By using unencrypted data transfer"
    ],
    "context": "Amazon Redshift secures data during transmission by encrypting it with SSL to protect sensitive information.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Storage Services",
    "subtopic": "ElastiCache Fault Tolerance",
    "question": "What feature does Amazon ElastiCache provide to ensure high availability?",
    "correct_answer": "Automatic failover with Redis replication groups",
    "distractors": [
      "Manual snapshot backups only",
      "Single-node caching without replication",
      "Daily manual cache clearing"
    ],
    "context": "Amazon ElastiCache offers automatic failover using Redis replication groups to ensure high availability.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Storage Services",
    "subtopic": "Amazon Redshift Performance",
    "question": "Which feature helps Amazon Redshift improve query performance?",
    "correct_answer": "Columnar storage and data compression",
    "distractors": [
      "Row-based storage only",
      "Storing data in JSON format",
      "Using block storage exclusively"
    ],
    "context": "Amazon Redshift uses columnar storage and data compression to speed up query performance and reduce storage costs.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Storage Services",
    "subtopic": "ElastiCache Data Persistence",
    "question": "Which caching engine in ElastiCache supports data persistence?",
    "correct_answer": "Redis",
    "distractors": [
      "Memcached",
      "DynamoDB",
      "Aurora"
    ],
    "context": "Within Amazon ElastiCache, Redis supports data persistence to disk while Memcached is an in-memory cache without persistence.",
    "difficulty": "advance",
    "type": "mcq"
  },
  
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Management & Governance",
    "subtopic": "Amazon CloudWatch",
    "question": "What does Amazon CloudWatch primarily monitor?",
    "correct_answer": "Logs, metrics, and alarms from AWS resources",
    "distractors": [
      "User identity and access management",
      "Data encryption keys",
      "Cloud storage buckets"
    ],
    "context": "Amazon CloudWatch collects and tracks logs, metrics, and alarms from AWS resources to help monitor and manage applications.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Management & Governance",
    "subtopic": "AWS Config",
    "question": "What is the main purpose of AWS Config?",
    "correct_answer": "To assess, audit, and evaluate configurations of AWS resources",
    "distractors": [
      "To provide real-time metrics on resource usage",
      "To manage user permissions",
      "To automate backups"
    ],
    "context": "AWS Config helps track and audit the configurations of AWS resources to ensure compliance and governance.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Management & Governance",
    "subtopic": "AWS CloudTrail",
    "question": "What does AWS CloudTrail record?",
    "correct_answer": "AWS API calls and account activity for auditing",
    "distractors": [
      "Network traffic logs",
      "Resource configuration changes",
      "Performance metrics"
    ],
    "context": "AWS CloudTrail records AWS API calls and related account activity to enable auditing and governance.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Management & Governance",
    "subtopic": "CloudWatch Alarms",
    "question": "What action can CloudWatch alarms take when thresholds are breached?",
    "correct_answer": "Send notifications or automatically trigger actions",
    "distractors": [
      "Modify resource configurations",
      "Encrypt data at rest",
      "Backup data automatically"
    ],
    "context": "CloudWatch alarms can send notifications or trigger automated actions when specific metric thresholds are exceeded.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Management & Governance",
    "subtopic": "AWS Config Rules",
    "question": "What are AWS Config Rules used for?",
    "correct_answer": "To check whether AWS resource configurations comply with desired settings",
    "distractors": [
      "To manage billing alerts",
      "To monitor user logins",
      "To create database backups"
    ],
    "context": "AWS Config Rules allow automated evaluation of resource configurations for compliance with organizational policies.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Management & Governance",
    "subtopic": "CloudWatch Metrics",
    "question": "What types of data does CloudWatch Metrics collect?",
    "correct_answer": "Numerical data about resource performance and utilization",
    "distractors": [
      "User login credentials",
      "API call history",
      "Security group configurations"
    ],
    "context": "CloudWatch Metrics collects numerical data to monitor the performance and utilization of AWS resources.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Management & Governance",
    "subtopic": "AWS CloudTrail Logging",
    "question": "Where are AWS CloudTrail logs stored by default?",
    "correct_answer": "In an Amazon S3 bucket",
    "distractors": [
      "In Amazon RDS instances",
      "Within CloudWatch Metrics",
      "On local user devices"
    ],
    "context": "AWS CloudTrail delivers logs of API activity to an Amazon S3 bucket for long-term storage and auditing.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Management & Governance",
    "subtopic": "CloudWatch Logs",
    "question": "What is the purpose of CloudWatch Logs?",
    "correct_answer": "To collect, monitor, and store log files from AWS resources and applications",
    "distractors": [
      "To track user identities",
      "To encrypt sensitive data",
      "To manage billing information"
    ],
    "context": "CloudWatch Logs enables collection, monitoring, and storage of log files generated by AWS resources and applications.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Management & Governance",
    "subtopic": "AWS Config vs CloudTrail",
    "question": "Which statement correctly differentiates AWS Config from AWS CloudTrail?",
    "correct_answer": "AWS Config tracks resource configuration changes; CloudTrail records API calls",
    "distractors": [
      "AWS Config manages user access; CloudTrail manages billing",
      "AWS Config sends alerts; CloudTrail encrypts data",
      "Both services only monitor network traffic"
    ],
    "context": "AWS Config provides resource configuration tracking, while CloudTrail records AWS API call activity for auditing.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Management & Governance",
    "subtopic": "CloudWatch Alarm Thresholds",
    "question": "What can trigger an Amazon CloudWatch alarm?",
    "correct_answer": "A metric breaching a predefined threshold",
    "distractors": [
      "Manual database updates",
      "API call logging",
      "IAM user creation"
    ],
    "context": "Amazon CloudWatch alarms are triggered when a monitored metric crosses a set threshold value, enabling proactive management.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Monitoring and Governance",
    "subtopic": "Amazon CloudWatch",
    "question": "Which AWS service is used to monitor and collect metrics, logs, and events for AWS resources?",
    "correct_answer": "Amazon CloudWatch",
    "distractors": [
      "AWS Config",
      "AWS CloudTrail",
      "Amazon Inspector"
    ],
    "context": "Amazon CloudWatch is a monitoring service that collects and tracks metrics, logs, and events, providing insights into AWS resources and applications.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Monitoring and Governance",
    "subtopic": "AWS CloudTrail",
    "question": "What is the primary function of AWS CloudTrail in an AWS environment?",
    "correct_answer": "To record API calls and account activity for auditing",
    "distractors": [
      "To monitor real-time application performance",
      "To manage encryption keys",
      "To store application logs"
    ],
    "context": "AWS CloudTrail records API calls and account activity, providing an audit trail for security and compliance by logging actions taken in the AWS environment.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Monitoring and Governance",
    "subtopic": "AWS Config",
    "question": "Which AWS service tracks configuration changes to AWS resources over time?",
    "correct_answer": "AWS Config",
    "distractors": [
      "Amazon CloudWatch",
      "AWS Trusted Advisor",
      "AWS CloudFormation"
    ],
    "context": "AWS Config continuously monitors and records configuration changes to AWS resources, enabling compliance auditing and resource tracking.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Monitoring and Governance",
    "subtopic": "Amazon CloudWatch",
    "question": "What feature of Amazon CloudWatch allows you to set thresholds and trigger notifications for specific metrics?",
    "correct_answer": "CloudWatch Alarms",
    "distractors": [
      "CloudWatch Logs",
      "CloudWatch Events",
      "CloudWatch Dashboards"
    ],
    "context": "CloudWatch Alarms monitor metrics and trigger notifications or automated actions when predefined thresholds are breached, helping manage resource performance.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Monitoring and Governance",
    "subtopic": "AWS CloudTrail",
    "question": "Where are AWS CloudTrail logs typically stored for long-term auditing and analysis?",
    "correct_answer": "Amazon S3",
    "distractors": [
      "Amazon EBS",
      "Amazon RDS",
      "Amazon ElastiCache"
    ],
    "context": "AWS CloudTrail logs API activity and stores the event history in Amazon S3 buckets for long-term auditing, compliance, and analysis purposes.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Monitoring and Governance",
    "subtopic": "AWS Config",
    "question": "What is a key capability of AWS Config when used with AWS Organizations?",
    "correct_answer": "Monitoring compliance across multiple accounts",
    "distractors": [
      "Automating resource provisioning",
      "Encrypting data across accounts",
      "Scaling compute resources"
    ],
    "context": "AWS Config, when integrated with AWS Organizations, enables centralized monitoring of resource configurations and compliance across multiple AWS accounts.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Monitoring and Governance",
    "subtopic": "Amazon CloudWatch",
    "question": "Which CloudWatch feature is used to collect and store application and system logs for analysis?",
    "correct_answer": "CloudWatch Logs",
    "distractors": [
      "CloudWatch Metrics",
      "CloudWatch Alarms",
      "CloudWatch Events"
    ],
    "context": "CloudWatch Logs enables the collection, storage, and analysis of log data from AWS resources, applications, and systems for troubleshooting and monitoring.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Monitoring and Governance",
    "subtopic": "AWS CloudTrail",
    "question": "What advanced feature of AWS CloudTrail provides real-time analysis of API calls to detect security issues?",
    "correct_answer": "CloudTrail Insights",
    "distractors": [
      "CloudTrail Metrics",
      "CloudTrail Alarms",
      "CloudTrail Dashboards"
    ],
    "context": "CloudTrail Insights analyzes API call patterns in real time to identify unusual activity, helping detect potential security issues or operational anomalies.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Monitoring and Governance",
    "subtopic": "AWS Config",
    "question": "How does AWS Config assist with compliance auditing for regulated industries?",
    "correct_answer": "By providing a history of resource configuration changes and compliance status",
    "distractors": [
      "By encrypting all resource data",
      "By automating resource scaling",
      "By monitoring real-time application performance"
    ],
    "context": "AWS Config tracks resource configuration changes and evaluates them against compliance rules, providing a detailed history to support auditing in regulated industries.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Monitoring and Governance",
    "subtopic": "Amazon CloudWatch",
    "question": "Which CloudWatch component allows you to create custom visualizations of metrics and logs for operational insights?",
    "correct_answer": "CloudWatch Dashboards",
    "distractors": [
      "CloudWatch Logs Insights",
      "CloudWatch Synthetics",
      "CloudWatch Contributor Insights"
    ],
    "context": "CloudWatch Dashboards allow users to create customized visualizations of metrics and logs, providing a unified view of AWS resource performance and operational health.",
    "difficulty": "advance",
    "type": "mcq"
  },
  
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Monitoring & Management",
    "subtopic": "Amazon CloudWatch",
    "question": "Which AWS service collects monitoring and operational data in the form of logs, metrics, and events?",
    "correct_answer": "Amazon CloudWatch",
    "distractors": ["AWS Config", "AWS CloudTrail", "Amazon S3"],
    "context": "Amazon CloudWatch collects monitoring and operational data as logs, metrics, and events to provide a unified view of AWS resources.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Monitoring & Management",
    "subtopic": "Amazon CloudWatch",
    "question": "What feature of CloudWatch allows you to set notifications based on specific metric thresholds?",
    "correct_answer": "Alarms",
    "distractors": ["Dashboards", "Events", "Logs"],
    "context": "CloudWatch Alarms allow users to monitor metrics and send notifications or automatically make changes based on defined thresholds.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Monitoring & Management",
    "subtopic": "AWS Config",
    "question": "Which AWS service provides continuous assessment of AWS resource configurations for compliance auditing?",
    "correct_answer": "AWS Config",
    "distractors": ["AWS CloudTrail", "Amazon CloudWatch", "AWS Shield"],
    "context": "AWS Config continuously monitors and records AWS resource configurations and evaluates them for compliance auditing.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Monitoring & Management",
    "subtopic": "AWS CloudTrail",
    "question": "Which AWS service records API calls made in your AWS account for governance and compliance purposes?",
    "correct_answer": "AWS CloudTrail",
    "distractors": ["AWS Config", "Amazon CloudWatch", "AWS Shield"],
    "context": "AWS CloudTrail records AWS account API calls for governance, compliance, and operational auditing.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Monitoring & Management",
    "subtopic": "Amazon CloudWatch Logs",
    "question": "What is the primary purpose of Amazon CloudWatch Logs?",
    "correct_answer": "To collect and store log files from AWS resources and applications",
    "distractors": ["To configure AWS resource compliance", "To track API usage", "To monitor billing data"],
    "context": "Amazon CloudWatch Logs collects and stores log files generated by AWS resources and applications for monitoring and troubleshooting.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Monitoring & Management",
    "subtopic": "AWS Config",
    "question": "Which AWS service can be used to track historical changes in resource configurations over time?",
    "correct_answer": "AWS Config",
    "distractors": ["AWS CloudTrail", "Amazon CloudWatch Alarms", "AWS Shield"],
    "context": "AWS Config tracks historical changes in AWS resource configurations, enabling compliance auditing and change management.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Monitoring & Management",
    "subtopic": "AWS CloudTrail",
    "question": "How does AWS CloudTrail help improve security within an AWS environment?",
    "correct_answer": "By logging and monitoring API activity for audit and investigation",
    "distractors": ["By encrypting data at rest", "By blocking unauthorized traffic", "By monitoring billing metrics"],
    "context": "AWS CloudTrail improves security by logging and monitoring API calls to enable audits and investigations.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Monitoring & Management",
    "subtopic": "Amazon CloudWatch Metrics",
    "question": "Which of the following best describes CloudWatch Metrics?",
    "correct_answer": "Numerical data points that represent resource performance and utilization over time",
    "distractors": ["Log files from applications", "Configuration snapshots", "API call records"],
    "context": "CloudWatch Metrics are numerical values that track the performance and utilization of AWS resources over time.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Monitoring & Management",
    "subtopic": "Amazon CloudWatch",
    "question": "Which CloudWatch feature allows you to visualize your AWS resources and application metrics in a customizable view?",
    "correct_answer": "Dashboards",
    "distractors": ["Alarms", "Logs", "Events"],
    "context": "CloudWatch Dashboards provide customizable visualizations of AWS resources and application metrics.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Monitoring & Management",
    "subtopic": "AWS Config",
    "question": "AWS Config helps you maintain compliance by:",
    "correct_answer": "Evaluating resource configurations against desired policies",
    "distractors": ["Logging API calls", "Monitoring real-time metrics", "Managing encryption keys"],
    "context": "AWS Config evaluates AWS resource configurations against defined compliance rules to help maintain governance.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Monitoring and Logging Services",
    "subtopic": "CloudWatch Logs",
    "question": "Which AWS service is used to centrally collect and store log files from EC2 instances and other AWS services?",
    "correct_answer": "Amazon CloudWatch Logs",
    "distractors": [
      "AWS CloudTrail",
      "AWS Config",
      "Amazon S3 Access Logs"
    ],
    "context": "Amazon CloudWatch Logs enables you to centralize log files from all your systems, applications, and AWS services in a single, highly scalable service.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Monitoring and Logging Services",
    "subtopic": "CloudWatch Metrics",
    "question": "What is the default monitoring interval for Amazon EC2 instances in CloudWatch?",
    "correct_answer": "5 minutes",
    "distractors": [
      "1 minute",
      "10 minutes",
      "15 minutes"
    ],
    "context": "Amazon CloudWatch provides basic monitoring for EC2 instances at 5-minute intervals by default, with detailed monitoring available at 1-minute intervals for an additional cost.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Monitoring and Logging Services",
    "subtopic": "CloudWatch Alarms",
    "question": "Which CloudWatch alarm state indicates that the alarm has insufficient data to determine the alarm state?",
    "correct_answer": "INSUFFICIENT_DATA",
    "distractors": [
      "ALARM",
      "OK",
      "PENDING"
    ],
    "context": "CloudWatch alarms have three states: OK (metric is within threshold), ALARM (metric has breached threshold), and INSUFFICIENT_DATA (not enough data to determine state).",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Compliance and Governance",
    "subtopic": "AWS Config",
    "question": "What is the primary purpose of AWS Config?",
    "correct_answer": "Track configuration changes and compliance of AWS resources",
    "distractors": [
      "Monitor application performance metrics",
      "Store and retrieve log files",
      "Track API calls and user activity"
    ],
    "context": "AWS Config is a service that enables you to assess, audit, and evaluate the configurations of your AWS resources and track configuration changes over time.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Compliance and Governance",
    "subtopic": "AWS Config",
    "question": "Which AWS Config component evaluates whether your AWS resources comply with desired configurations?",
    "correct_answer": "Config Rules",
    "distractors": [
      "Configuration Items",
      "Configuration Snapshots",
      "Configuration Recorder"
    ],
    "context": "AWS Config Rules represent desired configurations for your resources and automatically evaluate whether your resources comply with these configurations.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Security and Auditing",
    "subtopic": "AWS CloudTrail",
    "question": "What type of events does AWS CloudTrail primarily log?",
    "correct_answer": "API calls and management events",
    "distractors": [
      "Application performance metrics",
      "System resource utilization",
      "Database query logs"
    ],
    "context": "AWS CloudTrail is a service that logs API calls and management events across your AWS infrastructure, providing a record of actions taken by users, roles, or AWS services.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Security and Auditing",
    "subtopic": "AWS CloudTrail",
    "question": "By default, how long are CloudTrail event logs retained in the CloudTrail console?",
    "correct_answer": "90 days",
    "distractors": [
      "30 days",
      "365 days",
      "Indefinitely"
    ],
    "context": "CloudTrail event history in the console shows the last 90 days of management events by default. For longer retention, logs must be stored in S3.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Monitoring and Logging Services",
    "subtopic": "CloudWatch Alarms",
    "question": "Which action can CloudWatch alarms trigger when a metric breaches a threshold?",
    "correct_answer": "Send SNS notification",
    "distractors": [
      "Create new EC2 instances",
      "Modify security group rules",
      "Update IAM policies"
    ],
    "context": "CloudWatch alarms can trigger actions such as sending Amazon SNS notifications, executing Auto Scaling policies, or stopping/terminating EC2 instances when thresholds are breached.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Security and Auditing",
    "subtopic": "AWS CloudTrail",
    "question": "What is the difference between CloudTrail management events and data events?",
    "correct_answer": "Management events track control plane operations, data events track data plane operations",
    "distractors": [
      "Management events are free, data events are charged",
      "Management events are stored longer than data events",
      "Management events are encrypted, data events are not"
    ],
    "context": "CloudTrail management events capture control plane operations like creating resources, while data events capture data plane operations like S3 object access or Lambda function executions.",
    "difficulty": "advanced",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Monitoring and Logging Services",
    "subtopic": "CloudWatch Metrics",
    "question": "What is a custom metric in Amazon CloudWatch?",
    "correct_answer": "User-defined metrics published to CloudWatch using API or CLI",
    "distractors": [
      "Default metrics provided by AWS services",
      "Metrics automatically collected from EC2 instances",
      "Metrics generated by CloudWatch alarms"
    ],
    "context": "Custom metrics are user-defined metrics that you publish to CloudWatch using the AWS CLI, API, or SDK to monitor application-specific data not covered by default AWS metrics.",
    "difficulty": "advanced",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Cloud Computing Models",
    "subtopic": "IaaS",
    "question": "Which cloud computing model provides virtualized hardware resources such as compute, storage, and networking?",
    "correct_answer": "Infrastructure as a Service (IaaS)",
    "distractors": ["Platform as a Service (PaaS)", "Software as a Service (SaaS)", "Function as a Service (FaaS)"],
    "context": "IaaS delivers basic infrastructure like virtual machines, storage, and networking, allowing users to install and manage operating systems and applications.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Cloud Computing Models",
    "subtopic": "PaaS",
    "question": "Which cloud model helps developers deploy applications without managing infrastructure such as servers or databases?",
    "correct_answer": "Platform as a Service (PaaS)",
    "distractors": ["Infrastructure as a Service (IaaS)", "Software as a Service (SaaS)", "Storage as a Service (STaaS)"],
    "context": "PaaS abstracts the infrastructure layer and provides runtime environments, tools, and services that enable faster development and deployment of applications.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Cloud Computing Models",
    "subtopic": "SaaS",
    "question": "Which cloud service model provides end users with fully managed software applications such as email or document editing tools?",
    "correct_answer": "Software as a Service (SaaS)",
    "distractors": ["Infrastructure as a Service (IaaS)", "Platform as a Service (PaaS)", "Database as a Service (DBaaS)"],
    "context": "SaaS delivers ready-to-use applications to customers over the internet, with all infrastructure, middleware, and application maintenance handled by the provider.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Cloud Computing Models",
    "subtopic": "IaaS, PaaS, SaaS",
    "question": "Which cloud computing model allows developers to deploy applications without managing servers or runtime environments?",
    "correct_answer": "Platform as a Service (PaaS)",
    "distractors": [
      "Infrastructure as a Service (IaaS)",
      "Software as a Service (SaaS)",
      "Network as a Service (NaaS)"
    ],
    "context": "Platform as a Service (PaaS) enables developers to build, deploy, and scale applications without worrying about managing servers, operating systems, or runtime environments, as these are handled by the cloud provider.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Cloud Computing Models",
    "subtopic": "IaaS, PaaS, SaaS",
    "question": "What is the key advantage of SaaS model in terms of software updates and maintenance?",
    "correct_answer": "Automatic updates and patches managed by the service provider",
    "distractors": [
      "Customer controls all update schedules and maintenance windows",
      "Updates require manual installation by IT administrators",
      "Software versions remain static without any updates"
    ],
    "context": "Software as a Service (SaaS) provides automatic updates and patches that are seamlessly managed by the service provider, eliminating the need for customers to handle software maintenance, version control, or security updates.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Cloud Computing Models",
    "subtopic": "IaaS, PaaS, SaaS",
    "question": "In a multi-tenant SaaS architecture, how does AWS ensure data isolation between different customers?",
    "correct_answer": "Logical separation with encryption and access controls at the application layer",
    "distractors": [
      "Physical separation using dedicated hardware for each tenant",
      "Network segmentation through separate VPC for each customer",
      "Database-level partitioning with individual schemas per tenant only"
    ],
    "context": "In multi-tenant SaaS architectures, AWS ensures data isolation through logical separation mechanisms including encryption, robust access controls, and application-layer security measures that prevent cross-tenant data access while maintaining cost efficiency.",
    "difficulty": "advanced",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Cloud Computing Models",
    "subtopic": "IaaS",
    "question": "Which AWS service allows users to rent virtual servers and manage their own operating systems, aligning with the IaaS model?",
    "correct_answer": "Amazon EC2",
    "distractors": ["AWS Elastic Beanstalk", "Amazon Chime", "AWS Glue"],
    "context": "IaaS provides virtualized computing resources, and Amazon EC2 allows users to rent virtual servers while managing operating systems and applications.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Cloud Computing Models",
    "subtopic": "PaaS",
    "question": "Which AWS service simplifies the deployment of containerized applications, functioning as a PaaS offering?",
    "correct_answer": "AWS Fargate",
    "distractors": ["Amazon EBS", "AWS Snowball", "Amazon Redshift"],
    "context": "PaaS services like AWS Fargate abstract server and cluster management, allowing developers to deploy and manage containerized applications easily.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Cloud Computing Models",
    "subtopic": "SaaS",
    "question": "In the SaaS model, which aspect of Amazon WorkDocs is managed by AWS to reduce user maintenance?",
    "correct_answer": "Software updates and infrastructure",
    "distractors": ["User data creation", "Operating system configuration", "Network firewall settings"],
    "context": "Amazon WorkDocs, a SaaS offering, provides a managed document collaboration service where AWS handles software updates and infrastructure maintenance.",
    "difficulty": "advanced",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Cloud Computing Models",
    "subtopic": "IaaS vs. PaaS control",
    "question": "Which statement best describes the level of control a customer has over the operating system when comparing Infrastructure as a Service (IaaS) and Platform as a Service (PaaS)?",
    "correct_answer": "In IaaS, the customer manages the operating system, while in PaaS, the provider manages it.",
    "distractors": [
      "In PaaS, the customer manages the operating system, while in IaaS, the provider manages it.",
      "Both IaaS and PaaS give the customer full control over the operating system.",
      "Neither IaaS nor PaaS allow the customer to manage the operating system."
    ],
    "context": "Infrastructure as a Service (IaaS) provides virtualized computing resources where the customer has control over the operating system. Platform as a Service (PaaS) abstracts away the underlying infrastructure, including the operating system, which is managed by the cloud provider.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Cloud Computing Models",
    "subtopic": "SaaS use case",
    "question": "A small business wants to use a popular email service online without installing any software or managing any servers. Which cloud computing model are they utilizing?",
    "correct_answer": "Software as a Service (SaaS)",
    "distractors": [
      "Infrastructure as a Service (IaaS)",
      "Platform as a Service (PaaS)",
      "On-premises deployment"
    ],
    "context": "Software as a Service (SaaS) delivers applications over the internet as a service, meaning users can access and use the software without needing to install, maintain, or manage the underlying infrastructure or platform.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Cloud Computing Models",
    "subtopic": "Responsibility in PaaS",
    "question": "In a Platform as a Service (PaaS) model, which of the following is primarily the responsibility of the cloud provider?",
    "correct_answer": "Managing the operating system and runtime environment",
    "distractors": [
      "Developing the application code",
      "Managing user data and access permissions",
      "Configuring application-level security"
    ],
    "context": "With Platform as a Service (PaaS), the cloud provider manages the underlying infrastructure, including operating systems, virtual machines, and runtime environments, allowing developers to focus on their applications.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Cloud Deployment Models",
    "subtopic": "Public Cloud",
    "question": "Which cloud deployment model is owned and operated by a third-party provider and made available to the general public?",
    "correct_answer": "Public Cloud",
    "distractors": ["Private Cloud", "Hybrid Cloud", "Multi-cloud"],
    "context": "A public cloud is a deployment model in which services are delivered over the internet by third-party providers like AWS, allowing organizations to access resources without owning infrastructure.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Cloud Deployment Models",
    "subtopic": "Hybrid Cloud",
    "question": "Which deployment model combines on-premises infrastructure with public cloud services to support flexible workloads?",
    "correct_answer": "Hybrid Cloud",
    "distractors": ["Public Cloud", "Private Cloud", "Multi-cloud"],
    "context": "A hybrid cloud integrates on-premises infrastructure with public or private cloud services, enabling data and applications to move between environments for greater flexibility.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Cloud Deployment Models",
    "subtopic": "Multi-cloud",
    "question": "Which cloud model involves using multiple public cloud providers to avoid vendor lock-in and improve availability?",
    "correct_answer": "Multi-cloud",
    "distractors": ["Public Cloud", "Private Cloud", "Hybrid Cloud"],
    "context": "A multi-cloud deployment uses services from two or more cloud providers to enhance redundancy, performance, or compliance while minimizing dependency on a single vendor.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Cloud Deployment Models",
    "subtopic": "Public, Private, Hybrid, Multi-cloud",
    "question": "Which cloud deployment model describes AWS's standard offering where resources are owned and operated by Amazon?",
    "correct_answer": "Public cloud",
    "distractors": [
      "Private cloud",
      "Hybrid cloud",
      "Multi-cloud"
    ],
    "context": "Public cloud is a deployment model where cloud services are delivered over the internet and shared across multiple organizations, with the cloud provider owning and operating all hardware, software, and infrastructure.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Cloud Deployment Models",
    "subtopic": "Public, Private, Hybrid, Multi-cloud",
    "question": "What is the primary benefit of implementing a hybrid cloud deployment model using AWS Direct Connect?",
    "correct_answer": "Seamless integration between on-premises infrastructure and AWS cloud services",
    "distractors": [
      "Complete isolation of cloud resources from on-premises systems",
      "Automatic migration of all workloads to public cloud",
      "Elimination of all on-premises hardware requirements"
    ],
    "context": "Hybrid cloud deployment combines private on-premises infrastructure with public cloud services, allowing organizations to leverage AWS Direct Connect for secure, high-bandwidth connectivity that enables seamless data and application integration between environments.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Cloud Deployment Models",
    "subtopic": "Public, Private, Hybrid, Multi-cloud",
    "question": "Which scenario best justifies choosing AWS Outposts for a private cloud deployment over standard AWS regions?",
    "correct_answer": "Applications requiring ultra-low latency and data sovereignty with local processing",
    "distractors": [
      "Cost optimization for high-volume storage workloads",
      "Global distribution of web applications across continents",
      "Simple backup and disaster recovery solutions"
    ],
    "context": "AWS Outposts delivers a private cloud deployment by bringing AWS infrastructure and services to customer premises, providing ultra-low latency, local data processing, and data sovereignty compliance for applications that cannot tolerate network delays or have regulatory requirements for on-premises processing.",
    "difficulty": "advanced",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Cloud Deployment Models",
    "subtopic": "Public Cloud",
    "question": "Which cloud deployment model allows multiple organizations to share the same AWS infrastructure while accessing services like Amazon S3?",
    "correct_answer": "Public Cloud",
    "distractors": ["Private Cloud", "Hybrid Cloud", "Multi-cloud"],
    "context": "In a public cloud, resources like Amazon S3 are shared across multiple organizations, managed by AWS, and accessible over the internet.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Cloud Deployment Models",
    "subtopic": "Hybrid Cloud",
    "question": "Which AWS service facilitates a hybrid cloud deployment by enabling secure data transfer between on-premises infrastructure and AWS?",
    "correct_answer": "AWS Direct Connect",
    "distractors": ["Amazon API Gateway", "AWS Lambda", "Amazon RDS"],
    "context": "A hybrid cloud combines on-premises infrastructure with AWS cloud services, and AWS Direct Connect provides a dedicated network connection for secure data transfer.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Cloud Deployment Models",
    "subtopic": "Multi-cloud",
    "question": "What is a key challenge of implementing a multi-cloud strategy that includes AWS and another cloud provider?",
    "correct_answer": "Managing interoperability between different cloud platforms",
    "distractors": ["Running all workloads exclusively on AWS", "Eliminating the need for on-premises infrastructure", "Avoiding the use of virtual machines"],
    "context": "A multi-cloud strategy involves using multiple cloud providers, such as AWS and another provider, requiring careful management of interoperability and data consistency.",
    "difficulty": "advanced",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Cloud Deployment Models",
    "subtopic": "Public Cloud",
    "question": "Which cloud deployment model offers services and infrastructure over the internet to the general public, where resources are shared among multiple tenants?",
    "correct_answer": "Public Cloud",
    "distractors": [
      "Private Cloud",
      "Hybrid Cloud",
      "On-premises"
    ],
    "context": "A public cloud is a cloud deployment model where computing services are delivered by a third-party provider over the public internet, and resources are often shared across various organizations.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Cloud Deployment Models",
    "subtopic": "Hybrid Cloud",
    "question": "An organization wants to keep sensitive customer data in its on-premises data center while utilizing the scalability of AWS for its fluctuating web application traffic. Which cloud deployment model best suits this requirement?",
    "correct_answer": "Hybrid Cloud",
    "distractors": [
      "Public Cloud",
      "Private Cloud",
      "Multi-cloud"
    ],
    "context": "A hybrid cloud combines an on-premises infrastructure (private cloud) with a public cloud, allowing data and applications to be shared between them. This is often used for sensitive data residency or burstable workloads.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Cloud Deployment Models",
    "subtopic": "Private Cloud",
    "question": "A large enterprise requires dedicated infrastructure and complete control over its cloud environment for strict regulatory compliance and security policies. Which cloud deployment model would be most appropriate?",
    "correct_answer": "Private Cloud",
    "distractors": [
      "Public Cloud",
      "Hybrid Cloud",
      "Community Cloud"
    ],
    "context": "A private cloud is a cloud environment dedicated to a single organization, offering exclusive access to infrastructure and resources, which provides a high level of control and security often required for strict compliance.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "AWS Global Infrastructure",
    "subtopic": "Regions",
    "question": "What does an AWS Region represent in the global infrastructure?",
    "correct_answer": "A physical location with multiple isolated Availability Zones",
    "distractors": [
      "A single data center serving multiple countries",
      "A virtual private cloud isolated within an account",
      "A local cache of AWS services near users"
    ],
    "context": "An AWS Region is a physical geographical location with multiple, physically separated and isolated Availability Zones to provide high availability and fault tolerance.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "AWS Global Infrastructure",
    "subtopic": "Availability Zones",
    "question": "Why does AWS recommend deploying applications across multiple Availability Zones?",
    "correct_answer": "To improve fault tolerance and high availability",
    "distractors": [
      "To reduce storage costs across data centers",
      "To increase the number of users supported in a single zone",
      "To avoid using Amazon CloudFront for content delivery"
    ],
    "context": "Availability Zones are isolated locations within a Region that allow customers to operate applications in a fault-tolerant and highly available manner by distributing workloads.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "AWS Global Infrastructure",
    "subtopic": "Edge Locations",
    "question": "What is the purpose of an AWS Edge Location?",
    "correct_answer": "To deliver content with low latency to users globally",
    "distractors": [
      "To host core compute services like EC2 and RDS",
      "To act as a backup site for Amazon S3",
      "To provide billing and account management services"
    ],
    "context": "Edge Locations are part of AWS's global network used by services like CloudFront to cache content closer to end users, reducing latency and improving performance.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "AWS Global Infrastructure",
    "subtopic": "Regions, AZs, Edge Locations",
    "question": "What is the minimum number of Availability Zones that every AWS Region contains?",
    "correct_answer": "Two Availability Zones",
    "distractors": [
      "One Availability Zone",
      "Three Availability Zones",
      "Four Availability Zones"
    ],
    "context": "Each AWS Region consists of a minimum of two Availability Zones, which are isolated locations within the region that provide redundancy and fault tolerance for applications and data.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "AWS Global Infrastructure",
    "subtopic": "Regions, AZs, Edge Locations",
    "question": "Which AWS global infrastructure component is primarily used by Amazon CloudFront for content delivery?",
    "correct_answer": "Edge Locations",
    "distractors": [
      "Availability Zones",
      "Regional Data Centers",
      "Local Zones"
    ],
    "context": "Edge Locations are AWS infrastructure endpoints used by services like Amazon CloudFront to cache and deliver content closer to end users, reducing latency and improving performance for global content distribution.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "AWS Global Infrastructure",
    "subtopic": "Regions, AZs, Edge Locations",
    "question": "What is the primary factor that determines latency between Availability Zones within the same AWS Region?",
    "correct_answer": "Physical distance and high-speed private network connections",
    "distractors": [
      "Internet routing protocols and public network congestion",
      "Number of EC2 instances running in each Availability Zone",
      "Regional data transfer pricing and bandwidth limitations"
    ],
    "context": "Availability Zones within the same AWS Region are connected through high-speed, low-latency private network links, with latency primarily determined by physical distance between data centers, typically maintaining single-digit millisecond latency.",
    "difficulty": "advanced",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "AWS Global Infrastructure",
    "subtopic": "Regions",
    "question": "What is an AWS Region in the context of AWS Global Infrastructure?",
    "correct_answer": "A geographical area containing multiple Availability Zones",
    "distractors": ["A single data center for compute resources", "A global network of edge locations", "A virtual private network within AWS"],
    "context": "An AWS Region is a geographical area with multiple isolated Availability Zones, each containing data centers, to provide high availability and fault tolerance.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "AWS Global Infrastructure",
    "subtopic": "Availability Zones",
    "question": "Which AWS feature allows you to deploy resources across multiple Availability Zones to improve application resilience?",
    "correct_answer": "Amazon EC2 Auto Scaling",
    "distractors": ["AWS CloudFront", "Amazon Route 53", "AWS Direct Connect"],
    "context": "Availability Zones are isolated locations within an AWS Region, and Amazon EC2 Auto Scaling distributes instances across them to enhance application resilience.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "AWS Global Infrastructure",
    "subtopic": "Edge Locations",
    "question": "Which AWS service primarily uses edge locations to cache content closer to users for low-latency delivery?",
    "correct_answer": "Amazon CloudFront",
    "distractors": ["Amazon RDS", "AWS Outposts", "Amazon EBS"],
    "context": "Edge locations are part of AWS Global Infrastructure used by Amazon CloudFront to cache content closer to users, reducing latency for content delivery.",
    "difficulty": "advanced",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "AWS Global Infrastructure",
    "subtopic": "Regions",
    "question": "An AWS customer wants to deploy an application with the lowest possible latency for users in a specific geographic area and ensure data residency compliance for that region. Which component of the AWS Global Infrastructure should they primarily consider when deploying their resources?",
    "correct_answer": "AWS Regions",
    "distractors": [
      "Availability Zones",
      "Edge Locations",
      "AWS Outposts"
    ],
    "context": "AWS Regions are physical locations around the world where AWS clusters data centers. Each Region is isolated and independent, designed to provide the lowest latency to local users and meet data residency requirements.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "AWS Global Infrastructure",
    "subtopic": "Availability Zones",
    "question": "To achieve high availability and fault tolerance for an application, an architect should distribute application components across multiple isolated locations within a single AWS Region. What are these isolated locations called?",
    "correct_answer": "Availability Zones",
    "distractors": [
      "Edge Locations",
      "AWS Regions",
      "Local Zones"
    ],
    "context": "Availability Zones (AZs) are distinct locations within an AWS Region that are engineered to be isolated from failures in other Availability Zones. They are interconnected with high-bandwidth, low-latency networking over fully redundant, dedicated fiber.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "AWS Global Infrastructure",
    "subtopic": "Edge Locations",
    "question": "Which component of the AWS Global Infrastructure is primarily used by services like Amazon CloudFront to cache content closer to end-users, thereby reducing latency for content delivery?",
    "correct_answer": "Edge Locations",
    "distractors": [
      "Availability Zones",
      "AWS Regions",
      "AWS Local Zones"
    ],
    "context": "AWS Edge Locations are data centers owned by AWS that provide content delivery network (CDN) services (like Amazon CloudFront) and DNS services (like Amazon Route 53) to cache data and reduce latency for end-users globally.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Amazon EC2",
    "subtopic": "Instance Types",
    "question": "Which EC2 instance type is optimized for memory-intensive applications like in-memory databases?",
    "correct_answer": "R-series instances",
    "distractors": ["T-series instances", "C-series instances", "P-series instances"],
    "context": "R-series EC2 instances provide high memory capacity and are well-suited for workloads that require large memory allocation such as in-memory databases and real-time analytics.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Amazon EC2",
    "subtopic": "Pricing Models",
    "question": "Which EC2 pricing option allows users to request spare compute capacity at significantly lower costs but can be interrupted by AWS?",
    "correct_answer": "Spot Instances",
    "distractors": ["Reserved Instances", "On-Demand Instances", "Dedicated Hosts"],
    "context": "Spot Instances offer unused EC2 capacity at a reduced price and are suitable for workloads that are flexible and tolerant to interruptions.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Amazon EC2",
    "subtopic": "Auto Scaling",
    "question": "What is the primary benefit of using Auto Scaling with EC2 instances?",
    "correct_answer": "Automatically adjusts the number of instances based on demand",
    "distractors": ["Increases storage throughput for S3 buckets", "Improves DNS resolution speed", "Reduces IAM policy evaluation time"],
    "context": "Auto Scaling monitors applications and automatically adjusts EC2 capacity to maintain performance and optimize costs based on current demand.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Amazon EC2",
    "subtopic": "Instance types, pricing, auto scaling",
    "question": "Which EC2 pricing model offers the lowest cost for workloads that can tolerate interruptions?",
    "correct_answer": "Spot Instances",
    "distractors": [
      "On-Demand Instances",
      "Reserved Instances",
      "Dedicated Hosts"
    ],
    "context": "Spot Instances allow customers to request spare Amazon EC2 computing capacity at up to 90% discount compared to On-Demand prices, but can be interrupted by AWS when capacity is needed elsewhere.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Amazon EC2",
    "subtopic": "Instance types, pricing, auto scaling",
    "question": "What is the primary benefit of using Amazon EC2 Auto Scaling for web applications?",
    "correct_answer": "Automatically adjusts capacity based on demand to maintain performance and optimize costs",
    "distractors": [
      "Provides fixed capacity allocation regardless of traffic patterns",
      "Eliminates the need for load balancers in multi-tier applications",
      "Automatically migrates applications between different AWS regions"
    ],
    "context": "Amazon EC2 Auto Scaling monitors applications and automatically adjusts capacity to maintain steady, predictable performance at the lowest possible cost by scaling EC2 instances up or down based on defined conditions.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Amazon EC2",
    "subtopic": "Instance types, pricing, auto scaling",
    "question": "Which EC2 instance type family is optimized for high-performance computing workloads requiring significant CPU processing power?",
    "correct_answer": "Compute Optimized (C family)",
    "distractors": [
      "Memory Optimized (R family)",
      "Storage Optimized (I family)",
      "General Purpose (T family)"
    ],
    "context": "Compute Optimized instances (C family) are designed for compute-intensive applications that benefit from high-performance processors, including high-performance web servers, scientific modeling, and distributed analytics workloads.",
    "difficulty": "advanced",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Amazon EC2",
    "subtopic": "Instance Types",
    "question": "What is the primary purpose of Amazon EC2 instance types in AWS?",
    "correct_answer": "To provide different combinations of CPU, memory, and storage for various workloads",
    "distractors": ["To manage database replication", "To cache content at edge locations", "To automate software updates"],
    "context": "Amazon EC2 instance types offer varying combinations of compute, memory, and storage resources to suit different application needs, such as compute-optimized or memory-optimized instances.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Amazon EC2",
    "subtopic": "Pricing",
    "question": "Which Amazon EC2 pricing model allows users to bid on unused capacity for cost savings, with the risk of instance termination?",
    "correct_answer": "Spot Instances",
    "distractors": ["On-Demand Instances", "Reserved Instances", "Dedicated Hosts"],
    "context": "Spot Instances allow users to bid on spare EC2 capacity at reduced costs, but AWS can terminate them if capacity is needed, making them suitable for flexible workloads.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Amazon EC2",
    "subtopic": "Auto Scaling",
    "question": "How does Amazon EC2 Auto Scaling help maintain application performance in a dynamic environment?",
    "correct_answer": "By automatically adjusting the number of EC2 instances based on demand",
    "distractors": ["By encrypting data at rest", "By distributing traffic across global regions", "By managing database backups"],
    "context": "Amazon EC2 Auto Scaling automatically increases or decreases the number of EC2 instances based on demand, ensuring optimal performance and cost efficiency.",
    "difficulty": "advanced",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Amazon EC2",
    "subtopic": "Instance types",
    "question": "A user needs to deploy a batch processing application that requires high compute power and memory, but only for short, intensive bursts. Which EC2 instance type family would be most suitable for this workload?",
    "correct_answer": "Compute Optimized",
    "distractors": [
      "General Purpose",
      "Memory Optimized",
      "Storage Optimized"
    ],
    "context": "Amazon EC2 offers various instance types, each optimized for different workloads. Compute Optimized instances are ideal for compute-bound applications that benefit from high-performance processors, such as batch processing, scientific modeling, and high-performance computing (HPC).",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Amazon EC2",
    "subtopic": "Pricing Models",
    "question": "A developer needs to run a non-production workload on Amazon EC2 that can tolerate interruptions and wants to achieve the lowest possible cost. Which EC2 pricing model should they choose?",
    "correct_answer": "Spot Instances",
    "distractors": [
      "On-Demand Instances",
      "Reserved Instances",
      "Savings Plans"
    ],
    "context": "Amazon EC2 Spot Instances allow you to request unused EC2 instances at a significant discount compared to the On-Demand price. They are ideal for fault-tolerant applications that can tolerate interruptions, such as batch jobs, data analysis, and distributed workloads.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Amazon EC2",
    "subtopic": "Auto Scaling",
    "question": "An application running on Amazon EC2 experiences unpredictable spikes in traffic throughout the day. To ensure the application can handle increased demand and automatically reduce capacity during low traffic, which AWS service should be configured?",
    "correct_answer": "Amazon EC2 Auto Scaling",
    "distractors": [
      "Amazon CloudWatch",
      "Amazon SQS",
      "Amazon RDS"
    ],
    "context": "Amazon EC2 Auto Scaling helps you maintain application availability and allows you to automatically scale your EC2 capacity up or down according to conditions you define. It ensures that your application always has the right amount of compute capacity to handle current traffic demands.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "AWS Lambda",
    "subtopic": "Serverless",
    "question": "What is a key benefit of AWS Lambda as a serverless compute service?",
    "correct_answer": "It runs code without provisioning or managing servers",
    "distractors": [
      "It provides full control over operating system patches",
      "It allows persistent connections for long-running tasks",
      "It requires pre-allocating server capacity before execution"
    ],
    "context": "AWS Lambda is a serverless compute service that runs code in response to events and automatically manages the underlying compute resources without requiring users to provision servers.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "AWS Lambda",
    "subtopic": "Event-Driven Architecture",
    "question": "Which event source can directly trigger an AWS Lambda function?",
    "correct_answer": "Amazon S3 object upload",
    "distractors": [
      "Manual server startup",
      "Amazon RDS backup completion",
      "Amazon EC2 instance termination"
    ],
    "context": "AWS Lambda can be triggered by various AWS services in an event-driven architecture, such as an Amazon S3 bucket when a new object is uploaded.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "AWS Lambda",
    "subtopic": "Execution Model",
    "question": "What happens when a Lambda function is idle and invoked again after a period of inactivity?",
    "correct_answer": "It may experience a cold start, adding latency to execution",
    "distractors": [
      "It maintains a persistent environment with zero latency",
      "It automatically scales down EC2 instances",
      "It fails unless manually restarted"
    ],
    "context": "When an AWS Lambda function is invoked after a period of inactivity, it may need to initialize a new runtime environment, resulting in a cold start which can increase latency.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "AWS Lambda",
    "subtopic": "Serverless, event-driven architecture",
    "question": "What is the primary billing model for AWS Lambda functions?",
    "correct_answer": "Pay-per-request and compute time consumed",
    "distractors": [
      "Fixed monthly subscription regardless of usage",
      "Hourly billing based on allocated memory size",
      "Per-instance pricing similar to EC2"
    ],
    "context": "AWS Lambda uses a pay-as-you-go pricing model where customers are charged based on the number of requests and the duration of code execution, measured in milliseconds, eliminating costs for idle time.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "AWS Lambda",
    "subtopic": "Serverless, event-driven architecture",
    "question": "Which AWS service can directly trigger Lambda functions when objects are uploaded to an S3 bucket?",
    "correct_answer": "Amazon S3 Event Notifications",
    "distractors": [
      "Amazon CloudWatch Events",
      "AWS Step Functions",
      "Amazon SQS"
    ],
    "context": "Amazon S3 Event Notifications can directly trigger Lambda functions in response to bucket events such as object creation, deletion, or modification, enabling real-time processing of uploaded files without requiring additional polling mechanisms.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "AWS Lambda",
    "subtopic": "Serverless, event-driven architecture",
    "question": "What is the maximum execution timeout limit for a single AWS Lambda function invocation?",
    "correct_answer": "15 minutes",
    "distractors": [
      "5 minutes",
      "30 minutes",
      "1 hour"
    ],
    "context": "AWS Lambda functions have a maximum execution timeout of 15 minutes per invocation, making them suitable for short-to-medium duration tasks but requiring architectural considerations for longer-running processes that may need to be broken into smaller functions or use other AWS services.",
    "difficulty": "advanced",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "AWS Lambda",
    "subtopic": "Serverless",
    "question": "What is a key characteristic of AWS Lambda as a serverless computing service?",
    "correct_answer": "It automatically manages the underlying compute infrastructure",
    "distractors": ["It requires manual configuration of virtual machines", "It provides persistent storage for data", "It manages database replication"],
    "context": "AWS Lambda is a serverless computing service that runs code without provisioning or managing servers, automatically handling infrastructure scaling and maintenance.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "AWS Lambda",
    "subtopic": "Event-Driven Architecture",
    "question": "Which AWS service can trigger an AWS Lambda function in response to an object being uploaded to a bucket?",
    "correct_answer": "Amazon S3",
    "distractors": ["Amazon EC2", "AWS CloudTrail", "Amazon RDS"],
    "context": "AWS Lambda supports event-driven architecture, where events like an object upload to an Amazon S3 bucket can automatically trigger a Lambda function to process the data.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "AWS Lambda",
    "subtopic": "Serverless",
    "question": "What is a benefit of using AWS Lambda for event-driven workloads compared to traditional EC2-based solutions?",
    "correct_answer": "Pay-per-use pricing based on execution time and requests",
    "distractors": ["Guaranteed uptime with fixed monthly costs", "Direct control over operating system updates", "Dedicated hardware for each function"],
    "context": "AWS Lambda’s serverless model charges only for compute time used during function execution, making it cost-efficient for event-driven workloads compared to EC2’s fixed costs.",
    "difficulty": "advanced",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "AWS Lambda",
    "subtopic": "Serverless",
    "question": "What is the primary advantage of AWS Lambda's serverless model regarding server management?",
    "correct_answer": "Users do not need to provision or manage servers",
    "distractors": [
      "Users have full control over operating system updates",
      "Users can pre-provision specific EC2 instances for functions",
      "Users are responsible for patching underlying infrastructure"
    ],
    "context": "AWS Lambda is a serverless compute service that runs your code in response to events and automatically manages the underlying compute resources for you. This means you don't have to worry about provisioning, scaling, or maintaining servers.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "AWS Lambda",
    "subtopic": "Event-Driven Architecture",
    "question": "An AWS Lambda function is configured to process new images uploaded to an Amazon S3 bucket. Which of the following best describes this architectural pattern?",
    "correct_answer": "Event-driven architecture",
    "distractors": [
      "Monolithic architecture",
      "Batch processing architecture",
      "Traditional client-server architecture"
    ],
    "context": "AWS Lambda functions are commonly used in event-driven architectures, where they are triggered by events from other AWS services. For example, an object creation event in Amazon S3 can trigger a Lambda function to perform actions like image resizing or metadata extraction.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "AWS Lambda",
    "subtopic": "Pricing and Execution",
    "question": "Regarding AWS Lambda pricing, what factor primarily determines the cost for a Lambda function execution?",
    "correct_answer": "The number of requests and the duration (compute time) of execution",
    "distractors": [
      "The number of EC2 instances provisioned",
      "Fixed monthly fees regardless of usage",
      "The amount of data stored in S3 for the function"
    ],
    "context": "With AWS Lambda, you are charged based on the number of requests for your functions and the duration your code executes. You only pay for the compute time consumed while your code is running, measured in milliseconds.",
    "difficulty": "advanced",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Application Deployment",
    "subtopic": "Elastic Beanstalk",
    "question": "Which AWS service allows developers to deploy and manage applications without worrying about the underlying infrastructure?",
    "correct_answer": "AWS Elastic Beanstalk",
    "distractors": ["Amazon EC2", "AWS Lambda", "Amazon CloudWatch"],
    "context": "Elastic Beanstalk is a Platform as a Service (PaaS) that handles infrastructure provisioning, load balancing, scaling, and monitoring, allowing developers to focus on writing code.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Application Deployment",
    "subtopic": "Elastic Beanstalk",
    "question": "What does AWS Elastic Beanstalk automatically manage when deploying an application?",
    "correct_answer": "Provisioning of compute resources, load balancing, and scaling",
    "distractors": ["Billing for EC2 Spot instances", "Database schema migrations", "S3 bucket encryption keys"],
    "context": "Elastic Beanstalk automatically handles resource provisioning, application load balancing, auto scaling, and monitoring using AWS tools like EC2, ELB, and CloudWatch.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Application Deployment",
    "subtopic": "Elastic Beanstalk",
    "question": "Which of the following best describes a use case for AWS Elastic Beanstalk?",
    "correct_answer": "Deploying a web application using pre-configured environments like Node.js or Python",
    "distractors": ["Building a custom container orchestration service", "Creating a static website hosted entirely on S3", "Managing IAM roles and policies for enterprise security"],
    "context": "Elastic Beanstalk simplifies web application deployment by providing pre-configured environments for programming languages and platforms, such as Java, .NET, PHP, Python, and Node.js.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Elastic Beanstalk",
    "subtopic": "Elastic Beanstalk",
    "question": "What is the primary benefit of using AWS Elastic Beanstalk for application deployment?",
    "correct_answer": "Deploy applications without managing underlying infrastructure",
    "distractors": [
      "Provides direct access to server operating systems",
      "Requires manual configuration of load balancers and auto scaling",
      "Only supports custom container environments"
    ],
    "context": "AWS Elastic Beanstalk is a Platform as a Service (PaaS) that allows developers to deploy and manage applications without worrying about the underlying infrastructure, automatically handling capacity provisioning, load balancing, and health monitoring.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Elastic Beanstalk",
    "subtopic": "Elastic Beanstalk",
    "question": "Which programming languages and platforms are supported by AWS Elastic Beanstalk?",
    "correct_answer": "Java, .NET, PHP, Node.js, Python, Ruby, Go, and Docker",
    "distractors": [
      "Only Java and .NET applications",
      "Only containerized Docker applications",
      "Only Python and Node.js web frameworks"
    ],
    "context": "AWS Elastic Beanstalk supports multiple programming languages and platforms including Java, .NET, PHP, Node.js, Python, Ruby, Go, and Docker, providing pre-configured platform versions that handle the deployment details for each technology stack.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Elastic Beanstalk",
    "subtopic": "Elastic Beanstalk",
    "question": "What level of control does AWS Elastic Beanstalk provide over the underlying AWS resources?",
    "correct_answer": "Full access to underlying resources with option to manage them directly",
    "distractors": [
      "No access to underlying resources - completely abstracted",
      "Read-only monitoring access without modification rights",
      "Limited access only through Elastic Beanstalk console"
    ],
    "context": "AWS Elastic Beanstalk provides full access to the underlying AWS resources such as EC2 instances, load balancers, and auto scaling groups, allowing developers to retain complete control and modify configurations directly if needed while still benefiting from the simplified deployment process.",
    "difficulty": "advanced",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Elastic Beanstalk",
    "subtopic": "Overview",
    "question": "What is the primary function of AWS Elastic Beanstalk?",
    "correct_answer": "To simplify application deployment and management",
    "distractors": ["To provide scalable object storage", "To manage relational databases", "To distribute content globally"],
    "context": "AWS Elastic Beanstalk is a Platform as a Service (PaaS) that simplifies deploying and managing applications by handling infrastructure provisioning and scaling.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Elastic Beanstalk",
    "subtopic": "Scaling",
    "question": "Which feature of AWS Elastic Beanstalk automatically adjusts the number of Amazon EC2 instances based on application demand?",
    "correct_answer": "Auto Scaling",
    "distractors": ["Amazon CloudFront", "AWS Lambda", "Amazon Route 53"],
    "context": "AWS Elastic Beanstalk uses Auto Scaling to automatically adjust the number of EC2 instances in response to application traffic or resource demand, ensuring performance and cost efficiency.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Elastic Beanstalk",
    "subtopic": "Deployment Options",
    "question": "Which AWS Elastic Beanstalk deployment option allows updates to an application with minimal downtime by swapping environments?",
    "correct_answer": "Blue/Green Deployment",
    "distractors": ["Rolling Deployment", "All-at-once Deployment", "Immutable Deployment"],
    "context": "Blue/Green Deployment in AWS Elastic Beanstalk enables updates by creating a new environment and swapping it with the existing one, minimizing downtime and allowing easy rollback.",
    "difficulty": "advanced",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Compute Services",
    "subtopic": "Elastic Beanstalk",
    "question": "Which AWS service is designed to simplify the deployment and management of applications without needing to provision the underlying infrastructure directly?",
    "correct_answer": "AWS Elastic Beanstalk",
    "distractors": [
      "Amazon EC2",
      "AWS Lambda",
      "Amazon S3"
    ],
    "context": "AWS Elastic Beanstalk is an easy-to-use service for deploying and scaling web applications and services developed with Java, .NET, PHP, Node.js, Python, Ruby, Go, and Docker on familiar servers such as Apache, Nginx, Passenger, and IIS.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Compute Services",
    "subtopic": "Elastic Beanstalk",
    "question": "When using Elastic Beanstalk, which of the following infrastructure components does the service automatically provision and manage for your application?",
    "correct_answer": "Amazon EC2 instances, load balancers, and auto-scaling groups",
    "distractors": [
      "VPC and Subnets only",
      "IAM roles and users only",
      "S3 buckets and Glacier vaults"
    ],
    "context": "Elastic Beanstalk handles the infrastructure provisioning, which includes automatically handling the deployment details of capacity provisioning, load balancing, auto-scaling, and application health monitoring.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Compute Services",
    "subtopic": "Elastic Beanstalk",
    "question": "An developer wants to quickly deploy a web application to AWS and focus primarily on the application code rather than server configuration. Which AWS service is best suited for this scenario?",
    "correct_answer": "AWS Elastic Beanstalk",
    "distractors": [
      "Amazon RDS",
      "Amazon VPC",
      "AWS Direct Connect"
    ],
    "context": "Elastic Beanstalk allows developers to simply upload their code, and Elastic Beanstalk automatically handles the deployment, from capacity provisioning, load balancing, auto-scaling to application health monitoring. At the same time, you retain full control over the AWS resources powering your application and can 'dig into' the underlying resources at any time.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Compute Services",
    "subtopic": "AWS Batch",
    "question": "Which AWS service enables developers to run hundreds or thousands of batch computing jobs efficiently?",
    "correct_answer": "AWS Batch",
    "distractors": ["Amazon EC2 Auto Scaling", "AWS Lambda", "Amazon CloudWatch"],
    "context": "AWS Batch dynamically provisions the optimal quantity and type of compute resources based on the volume and requirements of submitted batch jobs, enabling efficient large-scale batch processing.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Compute Services",
    "subtopic": "AWS Batch",
    "question": "What does AWS Batch automatically handle when scheduling and executing jobs?",
    "correct_answer": "Provisioning and scaling of compute resources",
    "distractors": ["Managing IAM roles for all AWS accounts", "Synchronizing on-premises databases", "Generating CloudFormation templates"],
    "context": "AWS Batch manages job scheduling and compute resource provisioning, allowing users to focus on workload logic rather than infrastructure configuration.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Compute Services",
    "subtopic": "AWS Batch",
    "question": "Which type of workload is AWS Batch best suited for?",
    "correct_answer": "High-volume, parallel, or time-based batch processing workloads",
    "distractors": ["Real-time video streaming", "Persistent web server hosting", "Edge caching of static content"],
    "context": "AWS Batch is ideal for efficiently running large numbers of batch jobs that require considerable computing power, especially in scientific, engineering, or financial workloads.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Compute Services",
    "subtopic": "AWS Batch",
    "question": "Which AWS service is designed to run batch computing workloads at any scale?",
    "correct_answer": "AWS Batch",
    "distractors": [
      "AWS Lambda",
      "Amazon EC2",
      "AWS Fargate"
    ],
    "context": "AWS Batch enables developers to easily and efficiently run hundreds of thousands of batch computing jobs on AWS by dynamically provisioning the optimal quantity and type of compute resources.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Compute Services",
    "subtopic": "AWS Batch",
    "question": "What does AWS Batch automatically manage when running batch jobs?",
    "correct_answer": "Compute resource provisioning and job scheduling",
    "distractors": [
      "Database connections and queries",
      "Network security groups only",
      "Storage encryption keys"
    ],
    "context": "AWS Batch automatically provisions compute resources and optimizes the workload distribution based on the volume and specific resource requirements of the batch jobs submitted, eliminating the need to install and manage batch computing software.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Compute Services",
    "subtopic": "AWS Batch",
    "question": "Which compute environment types can AWS Batch utilize for running jobs?",
    "correct_answer": "Both managed and unmanaged compute environments",
    "distractors": [
      "Only Amazon EC2 instances",
      "Only AWS Lambda functions",
      "Only containerized environments"
    ],
    "context": "AWS Batch supports both managed compute environments where AWS handles the compute resource lifecycle, and unmanaged environments where users have full control over compute resource setup and scaling, providing flexibility for different workload requirements.",
    "difficulty": "advanced",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "AWS Batch",
    "subtopic": "Overview",
    "question": "What is the primary purpose of AWS Batch?",
    "correct_answer": "To manage and run batch computing workloads at scale",
    "distractors": ["To provide real-time data streaming", "To host web applications", "To manage relational databases"],
    "context": "AWS Batch enables developers to efficiently run large-scale batch computing jobs by automatically provisioning and managing compute resources.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "AWS Batch",
    "subtopic": "Components",
    "question": "Which AWS Batch component defines the containerized environment and resource requirements for a batch job?",
    "correct_answer": "Job Definition",
    "distractors": ["Compute Environment", "Job Queue", "Task Role"],
    "context": "In AWS Batch, a Job Definition specifies how jobs are to be run, including container properties, resource requirements, and environment variables.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "AWS Batch",
    "subtopic": "Integration",
    "question": "Which AWS service can AWS Batch integrate with to store input and output data for batch processing jobs?",
    "correct_answer": "Amazon S3",
    "distractors": ["Amazon CloudFront", "AWS Lambda", "Amazon RDS"],
    "context": "AWS Batch integrates with Amazon S3 to store input data for batch jobs and save output results, enabling scalable and efficient data handling for batch processing.",
    "difficulty": "advanced",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Compute Services",
    "subtopic": "AWS Batch",
    "question": "Which AWS service enables developers, scientists, and engineers to easily run hundreds of thousands of batch computing jobs on AWS?",
    "correct_answer": "AWS Batch",
    "distractors": [
      "Amazon SQS",
      "AWS Lambda",
      "Amazon EC2"
    ],
    "context": "AWS Batch enables developers, scientists, and engineers to easily and efficiently run hundreds of thousands of batch computing jobs on AWS. AWS Batch dynamically provisions the optimal quantity and type of compute resources (e.g., CPU or memory optimized instances) based on the volume and specific resource requirements of the batch jobs submitted.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Compute Services",
    "subtopic": "AWS Batch",
    "question": "A research team needs to process a large number of independent computational tasks that can be run in parallel without manual intervention. Which AWS service would be most suitable for managing these jobs?",
    "correct_answer": "AWS Batch",
    "distractors": [
      "Amazon Lightsail",
      "AWS Step Functions",
      "Amazon Redshift"
    ],
    "context": "AWS Batch allows you to run your batch jobs on AWS EC2 instances, Fargate, or even on-premises. It plans, schedules, and executes your batch computing workloads across a full range of AWS compute services.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Compute Services",
    "subtopic": "AWS Batch",
    "question": "When using AWS Batch, which of the following is automatically handled by the service to optimize resource utilization for your jobs?",
    "correct_answer": "Provisioning of compute resources (e.g., EC2 instances)",
    "distractors": [
      "Manual patching of operating systems",
      "Writing application code logic",
      "Designing complex network topologies"
    ],
    "context": "AWS Batch automatically provisions the optimal quantity and type of compute resources (e.g., CPU or memory optimized instances) based on the volume and specific resource requirements of the batch jobs submitted, eliminating the need to install and manage batch computing software or learn new programming languages.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Compute Services",
    "subtopic": "AWS Lightsail",
    "question": "Which AWS service is designed to provide a simplified cloud platform for developers to quickly launch and manage virtual private servers?",
    "correct_answer": "AWS Lightsail",
    "distractors": [
      "Amazon EC2",
      "AWS Lambda",
      "Amazon ECS"
    ],
    "context": "AWS Lightsail is designed as an easy-to-use cloud platform that offers everything needed to build an application or website, plus a cost-effective, monthly plan with virtual private servers, managed databases, and networking features.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Compute Services",
    "subtopic": "AWS Lightsail",
    "question": "What type of pricing model does AWS Lightsail use for its virtual private servers?",
    "correct_answer": "Fixed monthly pricing with predictable costs",
    "distractors": [
      "Pay-per-hour usage pricing",
      "Pay-per-request pricing model",
      "Reserved instance pricing only"
    ],
    "context": "AWS Lightsail offers predictable, low monthly prices that include a virtual machine, SSD-based storage, data transfer allowance, DNS management, and static IP address, making it easy to budget for cloud resources.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Compute Services",
    "subtopic": "AWS Lightsail",
    "question": "Which components are included in AWS Lightsail's bundled offerings?",
    "correct_answer": "Virtual machine, SSD storage, data transfer, DNS management, and static IP",
    "distractors": [
      "Only virtual machines and basic storage",
      "Database services and serverless functions only",
      "Load balancers and auto-scaling groups only"
    ],
    "context": "AWS Lightsail bundles compute, storage, and networking features into simplified packages that include virtual machines, SSD-based storage, data transfer allowances, DNS management, static IP addresses, and optional managed databases and load balancers.",
    "difficulty": "advanced",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "AWS Lightsail",
    "subtopic": "Overview",
    "question": "What is the primary purpose of AWS Lightsail?",
    "correct_answer": "To provide a simplified platform for launching and managing virtual servers and applications",
    "distractors": ["To manage large-scale batch processing jobs", "To deliver content globally via edge locations", "To provide serverless computing functions"],
    "context": "AWS Lightsail is a simplified platform designed for developers and small businesses to easily launch and manage virtual private servers and applications with minimal configuration.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "AWS Lightsail",
    "subtopic": "Features",
    "question": "Which feature of AWS Lightsail allows users to quickly deploy pre-configured applications like WordPress or LAMP stacks?",
    "correct_answer": "Blueprints",
    "distractors": ["Snapshots", "Load Balancers", "Static IPs"],
    "context": "AWS Lightsail Blueprints are pre-configured templates that allow users to deploy applications like WordPress or LAMP stacks with minimal setup effort.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "AWS Lightsail",
    "subtopic": "Integration",
    "question": "Which AWS Lightsail component can be used to ensure consistent public IP addressing for an instance even after stopping and restarting it?",
    "correct_answer": "Static IP",
    "distractors": ["Elastic IP", "Auto Scaling Group", "Route Table"],
    "context": "AWS Lightsail’s Static IP feature allows users to assign a fixed public IP address to an instance, ensuring consistent addressing even after stopping and restarting the instance.",
    "difficulty": "advanced",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Compute Services",
    "subtopic": "AWS Lightsail",
    "question": "Which AWS service is designed for users who need a simple, cost-effective way to launch and manage virtual private servers (VPS)?",
    "correct_answer": "AWS Lightsail",
    "distractors": [
      "Amazon EC2",
      "AWS Lambda",
      "AWS Fargate"
    ],
    "context": "Amazon Lightsail is an easy-to-use cloud platform that offers you everything needed to build an application or website, plus a cost-effective, monthly plan. Lightsail is ideal for simpler workloads, quick deployments, and getting started on AWS.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Compute Services",
    "subtopic": "AWS Lightsail",
    "question": "A small business owner with limited cloud experience wants to host a simple WordPress website on AWS. Which service offers a bundled solution including compute, storage, and networking with a predictable monthly price?",
    "correct_answer": "AWS Lightsail",
    "distractors": [
      "Amazon S3",
      "Amazon RDS",
      "AWS Glue"
    ],
    "context": "Lightsail provides instances, containers, databases, storage, networking, and more at a low, predictable monthly price. It simplifies the process of launching applications by offering pre-configured images for popular software like WordPress, Joomla, and Magento.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Compute Services",
    "subtopic": "AWS Lightsail",
    "question": "Which of the following is a key characteristic of AWS Lightsail instances regarding their pricing model?",
    "correct_answer": "Fixed monthly price",
    "distractors": [
      "Pay-per-second billing",
      "Reserved instance pricing",
      "Spot instance pricing"
    ],
    "context": "Lightsail bundles a virtual private server (VPS) with SSD-based storage, data transfer, DNS management, and a static IP address into a single, low, predictable monthly price. This predictable pricing makes it easy to understand your costs.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Compute Services",
    "subtopic": "AWS Lightsail",
    "question": "Which AWS service is designed to help users launch and manage simple web applications and websites with minimal AWS experience?",
    "correct_answer": "AWS Lightsail",
    "distractors": ["Amazon EC2", "AWS CloudFormation", "Amazon ECS"],
    "context": "AWS Lightsail provides an easy-to-use cloud platform with everything needed to build an application or website, including virtual machines, storage, and networking, tailored for simplicity.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Compute Services",
    "subtopic": "AWS Lightsail",
    "question": "What is a key feature that differentiates AWS Lightsail from EC2 for beginner cloud users?",
    "correct_answer": "Pre-configured development stacks and simplified pricing",
    "distractors": ["Support for GPU workloads and batch processing", "Advanced networking and load balancer configuration", "Direct integration with Amazon SageMaker"],
    "context": "AWS Lightsail includes pre-configured application stacks and bundles services together with predictable monthly pricing, making it ideal for users new to AWS.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Compute Services",
    "subtopic": "AWS Lightsail",
    "question": "Which use case is best suited for AWS Lightsail?",
    "correct_answer": "Hosting a simple blog or website with limited customization needs",
    "distractors": ["Running enterprise-level machine learning pipelines", "Managing multi-region high-availability databases", "Handling complex CI/CD workflows with microservices"],
    "context": "AWS Lightsail is optimized for use cases such as personal blogs, simple websites, and proof-of-concept applications where ease of use and predictable pricing are key.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Networking and Content Delivery",
    "subtopic": "VPC (Subnets, Route Tables, IGWs, NAT, Endpoints)",
    "question": "Which component of an Amazon VPC enables instances in a private subnet to connect to the internet while preventing unsolicited inbound connections from the internet?",
    "correct_answer": "NAT Gateway",
    "distractors": [
      "Internet Gateway",
      "VPC Endpoint",
      "Route Table"
    ],
    "context": "A NAT gateway enables instances in a private subnet to connect to the internet or other AWS services, but prevents the internet from initiating a connection with those instances. Instances in a public subnet can connect to the internet via an Internet Gateway.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Networking and Content Delivery",
    "subtopic": "VPC (Subnets, Route Tables, IGWs, NAT, Endpoints)",
    "question": "To allow resources within a private subnet to access AWS services like Amazon S3 or DynamoDB without traversing the public internet, what VPC component should be configured?",
    "correct_answer": "VPC Endpoint",
    "distractors": [
      "Internet Gateway",
      "NAT Gateway",
      "Security Group"
    ],
    "context": "VPC endpoints enable you to privately connect your VPC to supported AWS services and VPC endpoint services powered by PrivateLink without requiring an internet gateway, NAT device, VPN connection, or AWS Direct Connect connection. Instances in your VPC do not require public IP addresses to communicate with resources in the service.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Networking and Content Delivery",
    "subtopic": "VPC (Subnets, Route Tables, IGWs, NAT, Endpoints)",
    "question": "Which VPC component is essential for allowing instances in a public subnet to communicate directly with the internet?",
    "correct_answer": "Internet Gateway (IGW)",
    "distractors": [
      "VPC Endpoint",
      "NAT Gateway",
      "Network ACL"
    ],
    "context": "An Internet Gateway (IGW) is a horizontally scaled, redundant, and highly available VPC component that allows communication between instances in your VPC and the internet. It provides a target in your VPC route tables for internet-routable traffic.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Networking Services",
    "subtopic": "VPC",
    "question": "Which VPC component allows resources in a private subnet to access the internet for outbound connections while preventing inbound internet traffic?",
    "correct_answer": "NAT Gateway",
    "distractors": [
      "Internet Gateway",
      "VPC Endpoint",
      "Route Table"
    ],
    "context": "A NAT Gateway enables instances in a private subnet to connect to the internet or other AWS services, but prevents the internet from initiating a connection with those instances, providing secure outbound internet access.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Networking Services",
    "subtopic": "VPC",
    "question": "What is the primary purpose of route tables in a VPC?",
    "correct_answer": "To determine where network traffic from subnets is directed",
    "distractors": [
      "To filter incoming and outgoing traffic at the instance level",
      "To provide direct internet connectivity to resources",
      "To create secure connections between VPCs"
    ],
    "context": "Route tables contain a set of rules called routes that are used to determine where network traffic from your subnet or gateway is directed, controlling traffic flow within the VPC and to external networks.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Networking Services",
    "subtopic": "VPC",
    "question": "Which type of VPC endpoint allows private connectivity to AWS services without requiring traffic to traverse the internet or NAT devices?",
    "correct_answer": "Gateway endpoints and Interface endpoints",
    "distractors": [
      "Internet Gateway endpoints only",
      "Private subnet endpoints only",
      "Route table endpoints only"
    ],
    "context": "VPC endpoints enable private connectivity between your VPC and supported AWS services without requiring an internet gateway, NAT device, VPN connection, or AWS Direct Connect connection, with Gateway endpoints for S3 and DynamoDB, and Interface endpoints for other services.",
    "difficulty": "advanced",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Networking and Content Delivery",
    "subtopic": "VPC (Subnets, Route Tables, IGWs, NAT, Endpoints)",
    "question": "Which component of an Amazon VPC enables instances in a private subnet to connect to the internet while preventing unsolicited inbound connections from the internet?",
    "correct_answer": "NAT Gateway",
    "distractors": [
      "Internet Gateway",
      "VPC Endpoint",
      "Route Table"
    ],
    "context": "A NAT gateway enables instances in a private subnet to connect to the internet or other AWS services, but prevents the internet from initiating a connection with those instances. Instances in a public subnet can connect to the internet via an Internet Gateway.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Networking and Content Delivery",
    "subtopic": "VPC (Subnets, Route Tables, IGWs, NAT, Endpoints)",
    "question": "To allow resources within a private subnet to access AWS services like Amazon S3 or DynamoDB without traversing the public internet, what VPC component should be configured?",
    "correct_answer": "VPC Endpoint",
    "distractors": [
      "Internet Gateway",
      "NAT Gateway",
      "Security Group"
    ],
    "context": "VPC endpoints enable you to privately connect your VPC to supported AWS services and VPC endpoint services powered by PrivateLink without requiring an internet gateway, NAT device, VPN connection, or AWS Direct Connect connection. Instances in your VPC do not require public IP addresses to communicate with resources in the service.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Networking and Content Delivery",
    "subtopic": "VPC (Subnets, Route Tables, IGWs, NAT, Endpoints)",
    "question": "Which VPC component is essential for allowing instances in a public subnet to communicate directly with the internet?",
    "correct_answer": "Internet Gateway (IGW)",
    "distractors": [
      "VPC Endpoint",
      "NAT Gateway",
      "Network ACL"
    ],
    "context": "An Internet Gateway (IGW) is a horizontally scaled, redundant, and highly available VPC component that allows communication between instances in your VPC and the internet. It provides a target in your VPC route tables for internet-routable traffic.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Amazon VPC",
    "subtopic": "Route Tables",
    "question": "What is the role of a route table in an Amazon VPC?",
    "correct_answer": "To define rules for directing network traffic within and outside the VPC",
    "distractors": ["To store application data", "To manage user authentication", "To automatically scale subnets"],
    "context": "Route tables in an Amazon VPC contain rules that determine where network traffic from subnets is directed, such as to an Internet Gateway or another subnet.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Amazon VPC",
    "subtopic": "VPC Endpoints",
    "question": "Which Amazon VPC component allows private access to AWS services like Amazon S3 without traversing the public internet?",
    "correct_answer": "VPC Endpoint",
    "distractors": ["Internet Gateway", "NAT Instance", "Elastic Load Balancer"],
    "context": "VPC Endpoints enable private connections between a VPC and AWS services like Amazon S3, ensuring secure access without using the public internet.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Amazon VPC",
    "subtopic": "Subnets",
    "question": "What is a key consideration when configuring a private subnet in an Amazon VPC for an application requiring outbound internet access?",
    "correct_answer": "Deploying a NAT Gateway in a public subnet",
    "distractors": ["Attaching an Internet Gateway directly to the private subnet", "Configuring a VPC Endpoint for inbound traffic", "Enabling Auto Scaling for the subnet"],
    "context": "A private subnet in an Amazon VPC requires a NAT Gateway in a public subnet to allow outbound internet access for resources, such as for software updates, while maintaining security.",
    "difficulty": "advanced",
    "type": "mcq"
  },
   {
    "goal": "AWS Cloud Practitioner",
    "topic": "Security Services",
    "subtopic": "Security Groups vs NACLs",
    "question": "Which AWS security feature operates at the instance level and acts as a virtual firewall?",
    "correct_answer": "Security Groups",
    "distractors": [
      "Network ACLs",
      "IAM Policies",
      "VPC Flow Logs"
    ],
    "context": "Security Groups act as a virtual firewall for EC2 instances to control inbound and outbound traffic at the instance level, while Network ACLs operate at the subnet level controlling traffic for all instances within the subnet.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Security Services",
    "subtopic": "Security Groups vs NACLs",
    "question": "What is the default behavior difference between Security Groups and Network ACLs for traffic rules?",
    "correct_answer": "Security Groups are stateful while Network ACLs are stateless",
    "distractors": [
      "Security Groups are stateless while Network ACLs are stateful",
      "Both Security Groups and Network ACLs are stateful",
      "Both Security Groups and Network ACLs are stateless"
    ],
    "context": "Security Groups are stateful, meaning if you allow inbound traffic, the response traffic is automatically allowed regardless of outbound rules. Network ACLs are stateless, requiring explicit rules for both inbound and outbound traffic directions.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Security Services",
    "subtopic": "Security Groups vs NACLs",
    "question": "How do Security Groups and Network ACLs differ in their rule evaluation approach?",
    "correct_answer": "Security Groups evaluate all rules before deciding, while NACLs process rules in numerical order",
    "distractors": [
      "Both evaluate rules in numerical order",
      "Both evaluate all rules simultaneously",
      "Security Groups process rules in numerical order, while NACLs evaluate all rules"
    ],
    "context": "Security Groups evaluate all rules as a collective set before making a decision to allow or deny traffic, while Network ACLs process rules in numerical order starting from the lowest number and stop at the first matching rule to make allow or deny decisions.",
    "difficulty": "advanced",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Security Groups vs NACLs",
    "subtopic": "Security Groups",
    "question": "What is a key characteristic of a Security Group in an Amazon VPC?",
    "correct_answer": "It acts as a stateful firewall for EC2 instances",
    "distractors": ["It manages subnet-level traffic rules", "It provides stateless packet filtering", "It encrypts data at rest"],
    "context": "Security Groups in Amazon VPC act as stateful firewalls for EC2 instances, controlling inbound and outbound traffic based on rules and automatically allowing return traffic.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Security Groups vs NACLs",
    "subtopic": "NACLs",
    "question": "How does a Network Access Control List (NACL) differ from a Security Group in an Amazon VPC?",
    "correct_answer": "NACLs are stateless and applied at the subnet level",
    "distractors": ["NACLs are stateful and applied to instances", "NACLs manage encryption for VPC traffic", "NACLs automatically scale with instance demand"],
    "context": "NACLs are stateless firewalls applied at the subnet level in an Amazon VPC, requiring explicit rules for both inbound and outbound traffic, unlike stateful Security Groups.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Security Groups vs NACLs",
    "subtopic": "Comparison",
    "question": "When configuring an Amazon VPC, why might you use both Security Groups and NACLs for an EC2 instance in a subnet?",
    "correct_answer": "To provide layered security with instance-level and subnet-level controls",
    "distractors": ["To enable automatic scaling of instances", "To replace the need for an Internet Gateway", "To manage database backups"],
    "context": "Security Groups provide instance-level stateful filtering, while NACLs offer subnet-level stateless filtering, allowing layered security controls for enhanced protection in an Amazon VPC.",
    "difficulty": "advanced",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Security",
    "subtopic": "Security Groups vs. NACLs",
    "question": "Which of the following acts as a virtual firewall for an EC2 instance, controlling inbound and outbound traffic at the instance level?",
    "correct_answer": "Security Group",
    "distractors": [
      "Network Access Control List (NACL)",
      "VPC Flow Logs",
      "AWS WAF"
    ],
    "context": "A security group acts as a virtual firewall for your EC2 instances to control inbound and outbound traffic. Security groups operate at the instance level and support allow rules only.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Security",
    "subtopic": "Security Groups vs. NACLs",
    "question": "A network administrator needs to define a stateless filtering rule to explicitly deny specific inbound and outbound traffic for an entire subnet. Which AWS networking component should be used?",
    "correct_answer": "Network Access Control List (NACL)",
    "distractors": [
      "Security Group",
      "Route Table",
      "Internet Gateway"
    ],
    "context": "A network access control list (NACL) is an optional layer of security for your VPC that acts as a firewall for controlling traffic in and out of one or more subnets. NACLs are stateless, which means that inbound and outbound rules are evaluated independently.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Security",
    "subtopic": "Security Groups vs. NACLs",
    "question": "Regarding the default behavior of security rules, which statement correctly describes the difference between Security Groups and NACLs?",
    "correct_answer": "Security Groups explicitly allow specified traffic and implicitly deny all others, while NACLs implicitly deny all traffic unless explicitly allowed or denied.",
    "distractors": [
      "Both Security Groups and NACLs implicitly allow all traffic by default.",
      "Security Groups implicitly deny all traffic, while NACLs implicitly allow all traffic by default.",
      "Both Security Groups and NACLs require explicit allow and deny rules for all traffic."
    ],
    "context": "Security groups have a default 'deny all' inbound and 'allow all' outbound rule, but you only create 'allow' rules. NACLs have a default 'deny all' for both inbound and outbound traffic, and you must explicitly allow specific traffic (or deny specific traffic with a higher-priority rule) and they are stateless.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Networking and Security",
    "subtopic": "Security Groups vs NACLs",
    "question": "Which AWS security feature operates at the instance level to control inbound and outbound traffic?",
    "correct_answer": "Security Group",
    "distractors": ["Network ACL", "Route Table", "Internet Gateway"],
    "context": "Security Groups act as virtual firewalls for Amazon EC2 instances to control inbound and outbound traffic at the instance level.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Networking and Security",
    "subtopic": "Security Groups vs NACLs",
    "question": "What is a key difference between Security Groups and Network ACLs in AWS?",
    "correct_answer": "Security Groups are stateful, while Network ACLs are stateless",
    "distractors": ["Security Groups support deny rules, NACLs do not", "Network ACLs only apply to EC2, not subnets", "Security Groups can block traffic based on geolocation"],
    "context": "Security Groups are stateful, meaning return traffic is automatically allowed, whereas Network ACLs are stateless and require explicit rules for both inbound and outbound traffic.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Networking and Security",
    "subtopic": "Security Groups vs NACLs",
    "question": "Which scenario would require using a Network ACL instead of a Security Group?",
    "correct_answer": "Controlling traffic at the subnet level with both allow and deny rules",
    "distractors": ["Managing traffic for specific EC2 instances", "Encrypting data in transit", "Routing traffic to public endpoints"],
    "context": "Network ACLs operate at the subnet level and support both allow and deny rules, making them suitable for broader access control across multiple resources.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Networking Services",
    "subtopic": "Elastic Load Balancer",
    "question": "Which type of AWS load balancer operates at Layer 7 and can route traffic based on content of the request?",
    "correct_answer": "Application Load Balancer (ALB)",
    "distractors": [
      "Network Load Balancer (NLB)",
      "Classic Load Balancer (CLB)",
      "Gateway Load Balancer (GLB)"
    ],
    "context": "Application Load Balancer (ALB) operates at the application layer (Layer 7) and provides advanced routing capabilities, including content-based routing using HTTP headers, methods, query parameters, and source IP addresses.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Networking Services",
    "subtopic": "Elastic Load Balancer",
    "question": "Which load balancer type is best suited for applications requiring ultra-high performance and static IP addresses?",
    "correct_answer": "Network Load Balancer (NLB)",
    "distractors": [
      "Application Load Balancer (ALB)",
      "Classic Load Balancer (CLB)",
      "Auto Scaling Group"
    ],
    "context": "Network Load Balancer (NLB) operates at Layer 4 and is capable of handling millions of requests per second with ultra-low latency, while preserving source IP addresses and providing static IP addresses for the load balancer.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Networking Services",
    "subtopic": "Elastic Load Balancer",
    "question": "What is a key limitation of Classic Load Balancer compared to Application and Network Load Balancers?",
    "correct_answer": "Classic Load Balancer cannot route to multiple target groups or ports on the same instance",
    "distractors": [
      "Classic Load Balancer cannot handle HTTPS traffic",
      "Classic Load Balancer cannot perform health checks",
      "Classic Load Balancer cannot distribute traffic across multiple AZs"
    ],
    "context": "Classic Load Balancer is the legacy load balancing solution that lacks advanced features like multiple target groups, dynamic port mapping, and advanced routing rules that are available in Application Load Balancer and Network Load Balancer.",
    "difficulty": "advanced",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Elastic Load Balancer",
    "subtopic": "Overview",
    "question": "What is the primary function of an Elastic Load Balancer in AWS?",
    "correct_answer": "To distribute incoming application or network traffic across multiple targets",
    "distractors": ["To provide scalable object storage", "To manage serverless compute functions", "To encrypt data at rest"],
    "context": "Elastic Load Balancer (ELB) automatically distributes incoming traffic across multiple targets, such as EC2 instances, to improve availability and scalability.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Elastic Load Balancer",
    "subtopic": "Application Load Balancer",
    "question": "Which type of Elastic Load Balancer is best suited for routing HTTP/HTTPS traffic based on URL paths or hostnames?",
    "correct_answer": "Application Load Balancer (ALB)",
    "distractors": ["Network Load Balancer (NLB)", "Classic Load Balancer (CLB)", "Gateway Load Balancer (GLB)"],
    "context": "The Application Load Balancer (ALB) operates at the application layer (Layer 7) and supports advanced routing features like URL path-based or hostname-based routing for HTTP/HTTPS traffic.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Elastic Load Balancer",
    "subtopic": "Network Load Balancer",
    "question": "Which feature of the Network Load Balancer (NLB) makes it ideal for handling high-throughput, low-latency workloads in an Amazon VPC?",
    "correct_answer": "Support for TCP/UDP traffic with ultra-low latency",
    "distractors": ["Content-based routing for HTTP requests", "Automatic scaling of database instances", "Encryption of data at rest"],
    "context": "The Network Load Balancer (NLB) operates at the transport layer (Layer 4), handling TCP/UDP traffic with ultra-low latency, making it suitable for high-throughput workloads.",
    "difficulty": "advanced",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Networking and Content Delivery",
    "subtopic": "Elastic Load Balancer (ALB, NLB, CLB)",
    "question": "Which type of Elastic Load Balancer (ELB) operates at the application layer and supports content-based routing to different target groups?",
    "correct_answer": "Application Load Balancer (ALB)",
    "distractors": [
      "Network Load Balancer (NLB)",
      "Classic Load Balancer (CLB)",
      "Gateway Load Balancer (GLB)"
    ],
    "context": "An Application Load Balancer (ALB) functions at the application layer, the seventh layer of the Open Systems Interconnection (OSI) model. It supports content-based routing, where you can route requests to different target groups based on the content of the request.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Networking and Content Delivery",
    "subtopic": "Elastic Load Balancer (ALB, NLB, CLB)",
    "question": "A company requires extremely high performance and static IP addresses for their load balancer, primarily dealing with TCP traffic at the transport layer. Which Elastic Load Balancer (ELB) type is best suited for this scenario?",
    "correct_answer": "Network Load Balancer (NLB)",
    "distractors": [
      "Application Load Balancer (ALB)",
      "Classic Load Balancer (CLB)",
      "AWS Global Accelerator"
    ],
    "context": "A Network Load Balancer (NLB) functions at the fourth layer of the Open Systems Interconnection (OSI) model. It handles millions of requests per second while maintaining ultra-low latencies. Network Load Balancers are optimized for high-performance use cases and support static IP addresses.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Networking and Content Delivery",
    "subtopic": "Elastic Load Balancer (ALB, NLB, CLB)",
    "question": "Which of the following is a key advantage of using an Elastic Load Balancer (ELB) in your AWS architecture?",
    "correct_answer": "Distributing incoming application traffic across multiple targets, such as EC2 instances",
    "distractors": [
      "Serving as a persistent data storage solution for databases",
      "Performing deep packet inspection for security threats",
      "Providing serverless compute for event-driven applications"
    ],
    "context": "Elastic Load Balancing automatically distributes your incoming application traffic across multiple targets, such as EC2 instances, containers, and IP addresses, in a single or multiple Availability Zones. It also monitors the health of its registered targets and routes traffic only to the healthy targets.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Networking",
    "subtopic": "Elastic Load Balancer",
    "question": "Which Elastic Load Balancer type is best suited for HTTP and HTTPS traffic routing at the application layer?",
    "correct_answer": "Application Load Balancer (ALB)",
    "distractors": ["Network Load Balancer (NLB)", "Classic Load Balancer (CLB)", "Amazon Route 53"],
    "context": "Application Load Balancer (ALB) operates at the application layer (Layer 7) and supports advanced routing based on content, such as URLs, headers, and hostnames.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Networking",
    "subtopic": "Elastic Load Balancer",
    "question": "Which AWS load balancer provides ultra-low latency and is ideal for handling millions of requests per second at the transport layer?",
    "correct_answer": "Network Load Balancer (NLB)",
    "distractors": ["Application Load Balancer (ALB)", "Classic Load Balancer (CLB)", "AWS Global Accelerator"],
    "context": "Network Load Balancer (NLB) operates at the transport layer (Layer 4) and is optimized for high performance, handling sudden and volatile traffic patterns while maintaining ultra-low latency.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Networking",
    "subtopic": "Elastic Load Balancer",
    "question": "Which AWS load balancing option supports both EC2-Classic and VPC and is typically used in legacy environments?",
    "correct_answer": "Classic Load Balancer (CLB)",
    "distractors": ["Application Load Balancer (ALB)", "Network Load Balancer (NLB)", "Gateway Load Balancer (GLB)"],
    "context": "Classic Load Balancer (CLB) supports basic load balancing across multiple Amazon EC2 instances and is commonly found in legacy applications using EC2-Classic networking.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Networking Services",
    "subtopic": "Route 53",
    "question": "Which Route 53 routing policy directs traffic to resources based on the geographic location of the user making the DNS query?",
    "correct_answer": "Geolocation routing policy",
    "distractors": [
      "Latency-based routing policy",
      "Weighted routing policy",
      "Failover routing policy"
    ],
    "context": "Geolocation routing policy allows you to route traffic based on the geographic location of your users, enabling you to serve different content or direct users to specific endpoints based on their continent, country, or state.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Networking Services",
    "subtopic": "Route 53",
    "question": "Which Route 53 routing policy automatically routes traffic to the resource that provides the fastest response time for the user?",
    "correct_answer": "Latency-based routing policy",
    "distractors": [
      "Geoproximity routing policy",
      "Simple routing policy",
      "Multi-value answer routing policy"
    ],
    "context": "Latency-based routing policy routes traffic to the AWS region that provides the lowest latency for the user, automatically directing DNS queries to the resource that can serve the user with the fastest response time based on network conditions.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Networking Services",
    "subtopic": "Route 53",
    "question": "What is the key difference between Geolocation and Geoproximity routing policies in Route 53?",
    "correct_answer": "Geolocation routes based on user location, while Geoproximity routes based on resource location with bias adjustment",
    "distractors": [
      "Geolocation supports health checks while Geoproximity does not",
      "Geoproximity only works with AWS resources while Geolocation works with any endpoint",
      "Geolocation provides faster response times while Geoproximity provides better security"
    ],
    "context": "Geolocation routing routes traffic based on the geographic location of the user, while Geoproximity routing routes traffic based on the geographic location of your resources and optionally shifts traffic from resources in one location to resources in another using a bias value.",
    "difficulty": "advanced",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Amazon Route 53",
    "subtopic": "DNS Routing Policies",
    "question": "What is the purpose of Amazon Route 53’s Simple Routing Policy?",
    "correct_answer": "To route traffic to a single resource without additional logic",
    "distractors": ["To distribute traffic based on user location", "To route traffic based on resource health", "To balance traffic across multiple regions"],
    "context": "The Simple Routing Policy in Amazon Route 53 directs traffic to a single resource, such as an EC2 instance or S3 bucket, without complex routing logic.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Amazon Route 53",
    "subtopic": "DNS Routing Policies",
    "question": "Which Amazon Route 53 routing policy directs traffic to the resource with the lowest latency for the user?",
    "correct_answer": "Latency Routing Policy",
    "distractors": ["Weighted Routing Policy", "Failover Routing Policy", "Geoproximity Routing Policy"],
    "context": "The Latency Routing Policy in Amazon Route 53 routes traffic to the resource in the AWS Region that provides the lowest latency for the user, improving performance.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Amazon Route 53",
    "subtopic": "DNS Routing Policies",
    "question": "How does the Failover Routing Policy in Amazon Route 53 enhance application availability?",
    "correct_answer": "By routing traffic to a backup resource when the primary resource fails",
    "distractors": ["By distributing traffic equally across all resources", "By routing traffic based on user geolocation", "By caching DNS responses at edge locations"],
    "context": "The Failover Routing Policy in Amazon Route 53 ensures high availability by directing traffic to a backup resource if the primary resource fails, based on health checks.",
    "difficulty": "advanced",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Networking and Content Delivery",
    "subtopic": "Route 53 (DNS routing policies)",
    "question": "Which Amazon Route 53 routing policy allows you to route traffic to multiple resources and specify the proportion of traffic that is routed to each?",
    "correct_answer": "Weighted routing policy",
    "distractors": [
      "Simple routing policy",
      "Failover routing policy",
      "Latency routing policy"
    ],
    "context": "The weighted routing policy lets you route traffic to multiple resources in proportions that you specify. For example, you can route 10% of your traffic to a small portion of your infrastructure for testing new features.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Networking and Content Delivery",
    "subtopic": "Route 53 (DNS routing policies)",
    "question": "To route users to the resource that provides the best performance for their location, which Amazon Route 53 routing policy should be implemented?",
    "correct_answer": "Latency routing policy",
    "distractors": [
      "Geolocation routing policy",
      "Multivalue answer routing policy",
      "Simple routing policy"
    ],
    "context": "Latency routing policy routes traffic to the resource that provides the best latency (fastest response time) for your users. You use this policy when you have resources in multiple AWS Regions and want to route traffic to the region that will give your users the lowest latency.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Networking and Content Delivery",
    "subtopic": "Route 53 (DNS routing policies)",
    "question": "Which Amazon Route 53 routing policy is used when you want to route traffic to a single resource and there are no special DNS functions required?",
    "correct_answer": "Simple routing policy",
    "distractors": [
      "Failover routing policy",
      "Weighted routing policy",
      "Geolocation routing policy"
    ],
    "context": "The simple routing policy is the most basic routing policy. You use simple routing when you want to route traffic to a single resource, such as a web server for your website, and you don't need any special DNS routing functions.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Networking",
    "subtopic": "Route 53",
    "question": "Which AWS service provides DNS management and supports routing policies such as latency-based and failover routing?",
    "correct_answer": "Amazon Route 53",
    "distractors": ["AWS Global Accelerator", "Amazon CloudFront", "Elastic Load Balancer"],
    "context": "Amazon Route 53 is a scalable and highly available Domain Name System (DNS) service that includes routing policies like simple, latency-based, failover, and geolocation routing.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Networking",
    "subtopic": "Route 53",
    "question": "Which Route 53 routing policy helps direct traffic to the region with the lowest network latency for the user?",
    "correct_answer": "Latency-based routing",
    "distractors": ["Geolocation routing", "Weighted routing", "Simple routing"],
    "context": "Latency-based routing in Route 53 sends users to the AWS Region with the lowest latency, improving performance by reducing response time.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Networking",
    "subtopic": "Route 53",
    "question": "Which Route 53 routing policy is best used to distribute traffic evenly across multiple resources with assigned weights?",
    "correct_answer": "Weighted routing",
    "distractors": ["Latency-based routing", "Failover routing", "Geoproximity routing"],
    "context": "Weighted routing in Route 53 allows traffic distribution across multiple endpoints by assigning each a relative weight, which determines the proportion of traffic received.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Content Delivery Services",
    "subtopic": "CloudFront",
    "question": "Which AWS service is a global content delivery network (CDN) that delivers content with low latency and high transfer speeds?",
    "correct_answer": "Amazon CloudFront",
    "distractors": [
      "Amazon S3",
      "Amazon Route 53",
      "AWS Global Accelerator"
    ],
    "context": "Amazon CloudFront is a fast content delivery network (CDN) service that securely delivers data, videos, applications, and APIs to customers globally with low latency, high transfer speeds, and no minimum usage commitments.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Content Delivery Services",
    "subtopic": "CloudFront",
    "question": "What are the locations called where CloudFront caches copies of content for faster delivery to users?",
    "correct_answer": "Edge locations",
    "distractors": [
      "Availability Zones",
      "Regional data centers",
      "Origin servers"
    ],
    "context": "CloudFront uses a global network of edge locations to cache copies of your content closer to your users, reducing latency and improving performance by serving content from the nearest edge location rather than the origin server.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Content Delivery Services",
    "subtopic": "CloudFront",
    "question": "Which feature of CloudFront allows you to run code at edge locations to customize content delivery based on user requests?",
    "correct_answer": "Lambda@Edge",
    "distractors": [
      "CloudFront Functions",
      "Edge Computing Service",
      "CloudFront Behaviors"
    ],
    "context": "Lambda@Edge is a feature of Amazon CloudFront that lets you run Lambda functions at AWS edge locations, enabling you to execute code closer to users and customize content delivery based on specific user requests without managing servers.",
    "difficulty": "advanced",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Amazon CloudFront",
    "subtopic": "Overview",
    "question": "What is the primary function of Amazon CloudFront in AWS?",
    "correct_answer": "To deliver content globally with low latency using a content delivery network",
    "distractors": ["To manage virtual server instances", "To provide scalable object storage", "To automate database backups"],
    "context": "Amazon CloudFront is a content delivery network (CDN) that distributes content globally using edge locations to reduce latency and improve performance for users.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Amazon CloudFront",
    "subtopic": "Integration",
    "question": "Which AWS service is commonly used as an origin for Amazon CloudFront to serve static content like images and videos?",
    "correct_answer": "Amazon S3",
    "distractors": ["Amazon EC2", "AWS Lambda", "Amazon RDS"],
    "context": "Amazon CloudFront integrates with Amazon S3 as an origin to cache and deliver static content, such as images, videos, and web files, to users with low latency.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Amazon CloudFront",
    "subtopic": "Security",
    "question": "How does Amazon CloudFront enhance security for content delivery when integrated with AWS services?",
    "correct_answer": "By supporting HTTPS and integrating with AWS WAF for protection",
    "distractors": ["By automatically scaling compute instances", "By encrypting data at rest in EC2", "By managing VPC subnets"],
    "context": "Amazon CloudFront enhances security by supporting HTTPS for encrypted content delivery and integrating with AWS Web Application Firewall (WAF) to protect against web attacks.",
    "difficulty": "advanced",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Networking and Content Delivery",
    "subtopic": "CloudFront",
    "question": "Which AWS service uses a global network of edge locations to deliver content to users with low latency and high transfer speeds?",
    "correct_answer": "Amazon CloudFront",
    "distractors": [
      "Amazon S3",
      "Amazon EC2",
      "AWS Direct Connect"
    ],
    "context": "Amazon CloudFront is a fast content delivery network (CDN) service that securely delivers data, videos, applications, and APIs to customers globally with low latency, high transfer speeds, all within a developer-friendly environment. CloudFront uses a global network of edge locations (Points of Presence).",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Networking and Content Delivery",
    "subtopic": "CloudFront",
    "question": "A company wants to distribute its static website content and video files worldwide, ensuring high availability and faster loading times for end-users. Which AWS service is best suited for this requirement?",
    "correct_answer": "Amazon CloudFront",
    "distractors": [
      "Amazon RDS",
      "AWS WAF",
      "Amazon Comprehend"
    ],
    "context": "CloudFront is commonly used to cache static content (like HTML, CSS, JavaScript, and images) and streaming media (like video files) closer to users, significantly reducing load times and improving the user experience.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Networking and Content Delivery",
    "subtopic": "CloudFront",
    "question": "When serving content through Amazon CloudFront, what is the term for the location where cached copies of your content are stored closer to your viewers?",
    "correct_answer": "Edge location",
    "distractors": [
      "Availability Zone",
      "Region",
      "VPC"
    ],
    "context": "CloudFront's global network of edge locations (also called Points of Presence) are strategically placed around the world. When a user requests content that CloudFront serves, the request is routed to the nearest edge location, which then serves the content from its cache if available, resulting in lower latency.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Content Delivery",
    "subtopic": "CloudFront",
    "question": "Which AWS service is used to deliver content to users with low latency by using a global network of edge locations?",
    "correct_answer": "Amazon CloudFront",
    "distractors": ["Amazon S3", "AWS Global Accelerator", "Amazon Route 53"],
    "context": "Amazon CloudFront is a content delivery network (CDN) service that uses a network of globally distributed edge locations to deliver data, videos, and APIs to users with low latency.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Content Delivery",
    "subtopic": "CloudFront",
    "question": "What is a key performance benefit of using CloudFront in a web application?",
    "correct_answer": "It caches content at edge locations closer to end users",
    "distractors": ["It stores logs in S3 buckets", "It increases EC2 compute capacity", "It encrypts traffic using IAM policies"],
    "context": "CloudFront improves the performance of web applications by caching content at edge locations, reducing the load on origin servers and improving latency for users.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Content Delivery",
    "subtopic": "CloudFront",
    "question": "Which type of origin can be configured with CloudFront for content distribution?",
    "correct_answer": "Amazon S3, HTTP server, or Elastic Load Balancer",
    "distractors": ["Only EC2 instances with public IPs", "Only DynamoDB tables", "Only AWS Lambda functions"],
    "context": "Amazon CloudFront can use various sources as its origin for content, including S3 buckets, HTTP servers, and Elastic Load Balancers, to distribute content to users efficiently.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Cloud Deployment Models",
    "subtopic": "Public Cloud",
    "question": "Which cloud deployment model allows multiple organizations to share the same infrastructure and resources managed by a third-party provider?",
    "correct_answer": "Public Cloud",
    "distractors": ["Private Cloud", "Hybrid Cloud", "Multi-cloud"],
    "context": "A public cloud is a deployment model where cloud resources are owned and operated by a third-party provider and shared among multiple customers over the internet.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Cloud Deployment Models",
    "subtopic": "Private Cloud",
    "question": "Which cloud deployment model is dedicated to a single organization and provides greater control over security and compliance?",
    "correct_answer": "Private Cloud",
    "distractors": ["Public Cloud", "Hybrid Cloud", "Multi-cloud"],
    "context": "A private cloud is a cloud environment dedicated to a single organization, offering enhanced security and control, often hosted on-premises or by a third-party provider.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Cloud Deployment Models",
    "subtopic": "Hybrid Cloud",
    "question": "Which cloud deployment model combines on-premises infrastructure with cloud resources to provide flexibility and scalability?",
    "correct_answer": "Hybrid Cloud",
    "distractors": ["Public Cloud", "Private Cloud", "Multi-cloud"],
    "context": "A hybrid cloud integrates on-premises infrastructure with public or private cloud resources, enabling data and application portability between environments.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Cloud Deployment Models",
    "subtopic": "Multi-cloud",
    "question": "Which cloud deployment model involves using services from multiple cloud providers to avoid vendor lock-in?",
    "correct_answer": "Multi-cloud",
    "distractors": ["Hybrid Cloud", "Public Cloud", "Private Cloud"],
    "context": "A multi-cloud strategy involves using multiple cloud providers to leverage specific services, improve redundancy, and avoid dependency on a single provider.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Cloud Deployment Models",
    "subtopic": "Public Cloud",
    "question": "Which AWS service is commonly used in a public cloud deployment to provide scalable compute capacity?",
    "correct_answer": "Amazon EC2",
    "distractors": ["AWS Lambda", "Amazon RDS", "Amazon S3"],
    "context": "In a public cloud, Amazon EC2 provides resizable compute capacity, allowing organizations to run applications on shared infrastructure managed by AWS.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Cloud Deployment Models",
    "subtopic": "Hybrid Cloud",
    "question": "Which AWS service helps organizations extend their on-premises infrastructure to the AWS cloud for a hybrid deployment?",
    "correct_answer": "AWS Outposts",
    "distractors": ["AWS Snowball", "AWS Direct Connect", "Amazon VPC"],
    "context": "AWS Outposts enables hybrid cloud deployments by extending AWS infrastructure and services to on-premises environments for consistent hybrid experiences.",
    "difficulty": "advanced",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Cloud Deployment Models",
    "subtopic": "Multi-cloud",
    "question": "What is a key benefit of a multi-cloud strategy when using AWS alongside another cloud provider?",
    "correct_answer": "Improved resilience and redundancy",
    "distractors": ["Reduced latency for all applications", "Simplified billing processes", "Centralized resource management"],
    "context": "A multi-cloud strategy enhances resilience by distributing workloads across multiple providers, reducing the risk of downtime and improving fault tolerance.",
    "difficulty": "advanced",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Cloud Deployment Models",
    "subtopic": "Public Cloud",
    "question": "Which cloud deployment model allows organizations to use infrastructure hosted by AWS over the internet?",
    "correct_answer": "Public Cloud",
    "distractors": ["Private Cloud", "Hybrid Cloud", "Multi-cloud"],
    "context": "In the public cloud model, AWS provides infrastructure and services over the internet, which can be accessed by any customer.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Cloud Deployment Models",
    "subtopic": "Private Cloud",
    "question": "Which cloud deployment model is best suited for organizations that require full control over their infrastructure for security or compliance?",
    "correct_answer": "Private Cloud",
    "distractors": ["Public Cloud", "Hybrid Cloud", "Multi-cloud"],
    "context": "Private cloud is a cloud deployment model where infrastructure is provisioned for exclusive use by a single organization, often for regulatory or security reasons.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Cloud Deployment Models",
    "subtopic": "Hybrid Cloud",
    "question": "Which cloud deployment model combines on-premises infrastructure with cloud services?",
    "correct_answer": "Hybrid Cloud",
    "distractors": ["Private Cloud", "Public Cloud", "Multi-cloud"],
    "context": "Hybrid cloud integrates on-premises infrastructure with cloud services, allowing organizations to run workloads across both environments.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Cloud Deployment Models",
    "subtopic": "Multi-cloud",
    "question": "Which deployment model involves using cloud services from multiple vendors?",
    "correct_answer": "Multi-cloud",
    "distractors": ["Hybrid Cloud", "Private Cloud", "Public Cloud"],
    "context": "Multi-cloud refers to the use of cloud services from more than one provider to avoid vendor lock-in or leverage best-of-breed services.",
    "difficulty": "advanced",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Cloud Deployment Models",
    "subtopic": "Public vs Private",
    "question": "Which is a key benefit of using a public cloud deployment model compared to a private cloud?",
    "correct_answer": "Reduced upfront costs and scalability",
    "distractors": ["Complete infrastructure control", "Custom-built security hardware", "Dedicated physical servers"],
    "context": "Public cloud offers reduced costs and scalable resources without the need for upfront capital expenditure, unlike private cloud.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Cloud Deployment Models",
    "subtopic": "Hybrid Benefits",
    "question": "Which advantage does a hybrid cloud model offer to organizations transitioning to the cloud?",
    "correct_answer": "Gradual migration with on-premise integration",
    "distractors": ["Exclusive use of AWS services", "Single-vendor lock-in", "No legacy system support"],
    "context": "Hybrid cloud enables organizations to migrate gradually while still maintaining their existing on-premise systems.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Cloud Deployment Models",
    "subtopic": "Multi-cloud Strategy",
    "question": "Why might an enterprise adopt a multi-cloud strategy?",
    "correct_answer": "To avoid vendor lock-in and increase redundancy",
    "distractors": ["To reduce data center costs", "To limit scalability", "To use only AWS services"],
    "context": "A multi-cloud strategy allows enterprises to use multiple cloud providers, improving redundancy and reducing dependency on a single vendor.",
    "difficulty": "advanced",
    "type": "mcq"
  },
   {
    "goal": "AWS Cloud Practitioner",
    "topic": "Cloud Deployment Models",
    "subtopic": "Public Cloud",
    "question": "What is a key characteristic of the public cloud deployment model?",
    "correct_answer": "Shared infrastructure owned and operated by a cloud service provider",
    "distractors": [
      "Dedicated physical servers exclusively for one organization",
      "On-premises infrastructure managed by internal IT teams",
      "Isolated network segments within private data centers"
    ],
    "context": "Public cloud is a deployment model where computing resources are owned and operated by a third-party cloud service provider and shared among multiple organizations over the internet.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Cloud Deployment Models",
    "subtopic": "Private Cloud",
    "question": "Which deployment model provides dedicated cloud infrastructure exclusively for a single organization?",
    "correct_answer": "Private Cloud",
    "distractors": [
      "Public Cloud",
      "Community Cloud",
      "Distributed Cloud"
    ],
    "context": "Private cloud is a deployment model where cloud infrastructure is provisioned for exclusive use by a single organization, providing greater control and security but at higher costs.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Cloud Deployment Models",
    "subtopic": "Hybrid Cloud",
    "question": "What is the primary benefit of a hybrid cloud deployment model?",
    "correct_answer": "Combines public and private cloud resources for flexible workload placement",
    "distractors": [
      "Eliminates the need for on-premises infrastructure entirely",
      "Provides the lowest cost option for all workloads",
      "Guarantees the highest security for all applications"
    ],
    "context": "Hybrid cloud combines public and private cloud environments, allowing organizations to keep sensitive data in private infrastructure while leveraging public cloud scalability for other workloads.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Cloud Deployment Models",
    "subtopic": "Multi-cloud",
    "question": "What defines a multi-cloud strategy?",
    "correct_answer": "Using services from multiple cloud providers simultaneously",
    "distractors": [
      "Using multiple regions within a single cloud provider",
      "Deploying applications across multiple availability zones",
      "Running multiple instances of the same application"
    ],
    "context": "Multi-cloud strategy involves using cloud services from multiple cloud providers (like AWS, Azure, and Google Cloud) to avoid vendor lock-in and optimize for specific capabilities or pricing.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Cloud Deployment Models",
    "subtopic": "Hybrid Cloud",
    "question": "Which AWS service is commonly used to establish secure connectivity between on-premises infrastructure and AWS cloud in a hybrid deployment?",
    "correct_answer": "AWS Direct Connect",
    "distractors": [
      "Amazon CloudFront",
      "AWS Lambda",
      "Amazon RDS"
    ],
    "context": "AWS Direct Connect provides dedicated network connections between on-premises environments and AWS, enabling secure and reliable hybrid cloud connectivity with consistent network performance.",
    "difficulty": "advanced",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Cloud Deployment Models",
    "subtopic": "Public Cloud",
    "question": "What is a potential disadvantage of public cloud deployment compared to private cloud?",
    "correct_answer": "Less control over security and compliance configurations",
    "distractors": [
      "Higher upfront capital expenditure costs",
      "Limited scalability and elasticity options",
      "Longer time to provision new resources"
    ],
    "context": "Public cloud offers shared infrastructure managed by the provider, which can result in less granular control over security configurations and compliance requirements compared to private cloud environments.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "AWS Cloud Practitioner",
    "topic": "Cloud Deployment Models",
    "subtopic": "Multi-cloud",
    "question": "What is a key challenge organizations face when implementing a multi-cloud strategy?",
    "correct_answer": "Increased complexity in management and integration across different platforms",
    "distractors": [
      "Reduced redundancy and disaster recovery options",
      "Limited choice of cloud services and features",
      "Higher security risks due to single point of failure"
    ],
    "context": "Multi-cloud environments introduce complexity in managing different APIs, security models, billing systems, and integration requirements across multiple cloud platforms, requiring specialized skills and tools.",
    "difficulty": "advanced",
    "type": "mcq"
  },
  
  {
    "goal": "GATE CSE",
    "topic": "Algorithms",
    "subtopic": "Sorting",
    "question": "Which sorting algorithm maintains the relative order of equal elements and is considered stable?",
    "correct_answer": "Merge Sort",
    "distractors": ["Quick Sort", "Heap Sort", "Selection Sort"],
    "context": "Merge Sort is a stable divide and conquer sorting algorithm that preserves the relative order of equal elements.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Algorithms",
    "subtopic": "Divide and Conquer",
    "question": "Which algorithm uses divide and conquer to sort elements by recursively splitting and merging subarrays?",
    "correct_answer": "Merge Sort",
    "distractors": ["Bubble Sort", "Insertion Sort", "Radix Sort"],
    "context": "Merge Sort is a divide and conquer algorithm that recursively splits arrays and merges them in sorted order.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Algorithms",
    "subtopic": "Greedy Algorithms",
    "question": "Which problem can be optimally solved using a greedy approach by selecting jobs with the earliest finish time?",
    "correct_answer": "Activity Selection Problem",
    "distractors": ["Knapsack Problem", "Matrix Chain Multiplication", "Longest Common Subsequence"],
    "context": "The Activity Selection Problem selects the maximum number of activities that don't overlap by using a greedy strategy.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Algorithms",
    "subtopic": "Searching",
    "question": "Which searching technique repeatedly divides the search interval in half for a sorted array?",
    "correct_answer": "Binary Search",
    "distractors": ["Linear Search", "Depth First Search", "Breadth First Search"],
    "context": "Binary Search is an efficient algorithm for searching in sorted arrays using a divide and conquer strategy.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Algorithms",
    "subtopic": "Greedy Algorithms",
    "question": "Which algorithm uses a greedy approach to construct a Minimum Spanning Tree by selecting the least weight edge?",
    "correct_answer": "Prim's Algorithm",
    "distractors": ["Dijkstra's Algorithm", "Bellman-Ford Algorithm", "Floyd-Warshall Algorithm"],
    "context": "Prim’s Algorithm builds a Minimum Spanning Tree using a greedy strategy by always choosing the smallest weight edge.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Algorithms",
    "subtopic": "Divide and Conquer",
    "question": "Which algorithm finds the k-th smallest element in an unordered list using a divide and conquer approach?",
    "correct_answer": "Quickselect",
    "distractors": ["Quicksort", "Heapsort", "Counting Sort"],
    "context": "Quickselect is a selection algorithm using a partitioning method similar to quicksort to find the k-th smallest element.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Algorithms",
    "subtopic": "Sorting",
    "question": "Which algorithm sorts elements by selecting the minimum element and placing it at the beginning of the array?",
    "correct_answer": "Selection Sort",
    "distractors": ["Insertion Sort", "Bubble Sort", "Counting Sort"],
    "context": "Selection Sort works by repeatedly selecting the smallest element and placing it at the sorted portion of the array.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Sorting & Searching",
    "subtopic": "Binary Search",
    "question": "What is the time complexity of binary search in a sorted array of n elements?",
    "correct_answer": "O(log n)",
    "distractors": [
      "O(n)",
      "O(n log n)",
      "O(1)"
    ],
    "context": "Binary search works by repeatedly dividing the search interval in half, comparing the target with the middle element, and eliminating half of the remaining elements at each step.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Sorting & Searching",
    "subtopic": "Quick Sort",
    "question": "In the worst case scenario, what is the time complexity of Quick Sort?",
    "correct_answer": "O(n²)",
    "distractors": [
      "O(n log n)",
      "O(n)",
      "O(log n)"
    ],
    "context": "Quick Sort's worst case occurs when the pivot is always the smallest or largest element, leading to unbalanced partitions where one partition has n-1 elements and the other has 0 elements.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Divide and Conquer",
    "subtopic": "Merge Sort",
    "question": "Which property makes Merge Sort particularly suitable for sorting linked lists?",
    "correct_answer": "Stable sorting with O(1) space complexity for linked lists",
    "distractors": [
      "In-place sorting capability",
      "Adaptive nature for partially sorted data",
      "Better cache performance than other algorithms"
    ],
    "context": "Merge Sort maintains stability by preserving the relative order of equal elements and can sort linked lists without requiring additional space for merging, unlike arrays where O(n) extra space is needed.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Divide and Conquer",
    "subtopic": "Master Theorem",
    "question": "For the recurrence relation T(n) = 2T(n/2) + O(n), what is the time complexity according to Master Theorem?",
    "correct_answer": "O(n log n)",
    "distractors": [
      "O(n²)",
      "O(n)",
      "O(log n)"
    ],
    "context": "Using Master Theorem case 2, where a=2, b=2, and f(n)=O(n). Since f(n) = Θ(n^(log_b(a))) = Θ(n¹), the solution is Θ(n^(log_b(a)) × log n) = Θ(n log n).",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Greedy Algorithms",
    "subtopic": "Activity Selection",
    "question": "In the Activity Selection Problem, which greedy choice leads to the optimal solution?",
    "correct_answer": "Select activity with earliest finish time",
    "distractors": [
      "Select activity with earliest start time",
      "Select activity with shortest duration",
      "Select activity with maximum profit per unit time"
    ],
    "context": "The greedy approach for Activity Selection Problem works by always choosing the activity that finishes earliest among the remaining activities, as this leaves maximum room for selecting subsequent activities.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Greedy Algorithms",
    "subtopic": "Huffman Coding",
    "question": "What data structure is primarily used in Huffman Coding algorithm implementation?",
    "correct_answer": "Min Heap (Priority Queue)",
    "distractors": [
      "Max Heap",
      "Stack",
      "Hash Table"
    ],
    "context": "Huffman Coding uses a min heap to repeatedly extract the two nodes with minimum frequency and merge them to build the optimal prefix-free binary tree for encoding.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Sorting & Searching",
    "subtopic": "Heap Sort",
    "question": "What is the space complexity of Heap Sort algorithm?",
    "correct_answer": "O(1)",
    "distractors": [
      "O(n)",
      "O(log n)",
      "O(n log n)"
    ],
    "context": "Heap Sort is an in-place sorting algorithm that transforms the input array into a heap structure and then repeatedly extracts the maximum element, requiring only constant extra space for variables.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Algorithms",
    "subtopic": "Sorting",
    "question": "Which sorting algorithm has the best average-case time complexity for sorting a random array of integers?",
    "correct_answer": "Quick Sort",
    "distractors": ["Bubble Sort", "Selection Sort", "Insertion Sort"],
    "context": "Quick Sort has an average-case time complexity of O(n log n) due to its divide-and-conquer strategy, making it efficient for large datasets compared to simpler sorting algorithms.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Algorithms",
    "subtopic": "Searching",
    "question": "What is the time complexity of Binary Search when applied to a sorted array of n elements?",
    "correct_answer": "O(log n)",
    "distractors": ["O(n)", "O(n log n)", "O(1)"],
    "context": "Binary Search divides the search interval in half repeatedly, resulting in a logarithmic time complexity of O(log n) for a sorted array.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Algorithms",
    "subtopic": "Divide and Conquer",
    "question": "Which algorithm uses the Divide and Conquer strategy to find the closest pair of points in a set of n points in a 2D plane?",
    "correct_answer": "Closest Pair Algorithm",
    "distractors": ["Kruskal's Algorithm", "Dijkstra's Algorithm", "Prim's Algorithm"],
    "context": "The Closest Pair Algorithm uses a Divide and Conquer approach to split points into subsets, achieving a time complexity of O(n log n) for finding the closest pair in a 2D plane.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Algorithms",
    "subtopic": "Greedy Algorithms",
    "question": "Which greedy algorithm is used to find the minimum spanning tree of a connected, undirected graph?",
    "correct_answer": "Kruskal's Algorithm",
    "distractors": ["Floyd-Warshall Algorithm", "Bellman-Ford Algorithm", "A* Algorithm"],
    "context": "Kruskal's Algorithm is a greedy algorithm that selects edges in increasing order of weight to form a minimum spanning tree, ensuring no cycles are formed.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Algorithms",
    "subtopic": "Sorting",
    "question": "Which sorting algorithm is most efficient for sorting a nearly sorted array where each element is at most k positions away from its sorted position?",
    "correct_answer": "Insertion Sort",
    "distractors": ["Merge Sort", "Heap Sort", "Quick Sort"],
    "context": "Insertion Sort performs efficiently on nearly sorted arrays with a time complexity of O(nk) in such cases, as it only needs to make small adjustments to place elements correctly.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Algorithms",
    "subtopic": "Searching",
    "question": "Which search algorithm is optimal for searching in a rotated sorted array with no duplicates?",
    "correct_answer": "Modified Binary Search",
    "distractors": ["Linear Search", "Jump Search", "Exponential Search"],
    "context": "Modified Binary Search adapts the standard Binary Search to handle rotated sorted arrays by determining which half is sorted and continuing the search in the appropriate half, maintaining O(log n) complexity.",
    "difficulty": "advanced",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Algorithms",
    "subtopic": "Greedy Algorithms",
    "question": "Which greedy algorithm is used to solve the activity selection problem when activities have start and finish times?",
    "correct_answer": "Activity Selection Algorithm",
    "distractors": ["Huffman Coding", "Fractional Knapsack", "Job Sequencing"],
    "context": "The Activity Selection Algorithm greedily selects the maximum number of non-overlapping activities by choosing the activity with the earliest finish time at each step.",
    "difficulty": "advanced",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Algorithms",
    "subtopic": "Sorting & Searching",
    "question": "A software development team needs to frequently query a large, dynamic dataset for specific customer records. Which data structure and search algorithm combination would provide the most efficient average-case performance for retrieval, assuming no prior knowledge of data distribution?",
    "correct_answer": "Hash Table with Average O(1) Search",
    "distractors": [
      "Sorted Array with Binary Search (O(log n))",
      "Linked List with Linear Search (O(n))",
      "Binary Search Tree (BST) with Average O(log n) Search"
    ],
    "context": "Hash tables offer average-case O(1) time complexity for search, insertion, and deletion operations, making them highly efficient for frequent data retrieval in dynamic datasets. Binary search is efficient on sorted data, but sorting can be costly for dynamic sets.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Algorithms",
    "subtopic": "Divide and Conquer",
    "question": "A new feature in an e-commerce application requires finding the two closest product prices from a list of millions of prices to suggest alternative options. Which algorithmic paradigm is most suitable for efficiently solving this problem, and why?",
    "correct_answer": "Divide and Conquer, due to its ability to break down the problem into smaller, independent subproblems and combine their solutions.",
    "distractors": [
      "Greedy Algorithms, as they focus on making locally optimal choices without global consideration.",
      "Dynamic Programming, as it is primarily used for problems with overlapping subproblems and optimal substructure.",
      "Brute Force, due to its simplicity but O(n^2) time complexity for this problem."
    ],
    "context": "The closest pair of points problem, which is analogous to finding closest prices, is typically solved efficiently using the Divide and Conquer paradigm. This approach recursively divides the set of points into two halves, finds the closest pair in each half, and then finds the closest pair across the dividing line.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Algorithms",
    "subtopic": "Greedy Algorithms",
    "question": "A software project manager needs to schedule a set of tasks with varying durations and deadlines on a single processor to maximize the number of completed tasks. Which type of algorithm is generally best suited for this problem, and what is its core principle?",
    "correct_answer": "Greedy Algorithm, by prioritizing tasks with the earliest deadlines.",
    "distractors": [
      "Divide and Conquer, by breaking down tasks into smaller, manageable sub-tasks.",
      "Dynamic Programming, by storing and reusing solutions to subproblems to avoid redundant computations.",
      "Backtracking, by systematically trying all possible task orderings."
    ],
    "context": "The activity selection problem, a classic example of a problem solvable with a greedy approach, aims to select the maximum number of non-overlapping activities. A common greedy strategy is to always pick the activity that finishes earliest.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Algorithms",
    "subtopic": "Sorting & Searching",
    "question": "In a cloud-based document management system, users frequently upload new versions of documents. Which sorting algorithm would be most efficient for maintaining a sorted list of document versions by upload time, considering that the list is mostly sorted already?",
    "correct_answer": "Insertion Sort",
    "distractors": [
      "Merge Sort",
      "Quick Sort",
      "Heap Sort"
    ],
    "context": "Insertion Sort performs well on nearly sorted arrays. Its time complexity approaches O(n) in such scenarios, making it more efficient than other comparison-based sorting algorithms like Merge Sort, Quick Sort, or Heap Sort which have an average time complexity of O(n log n) regardless of the input's sortedness.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Algorithms",
    "subtopic": "Divide and Conquer",
    "question": "A distributed system needs to find the maximum element across millions of nodes efficiently. How can the Divide and Conquer paradigm be applied to solve this problem in a highly parallelizable manner?",
    "correct_answer": "Recursively find the maximum in subsets of nodes, then combine results.",
    "distractors": [
      "Iteratively compare elements from each node in a centralized fashion.",
      "Use a greedy approach by always picking the largest element seen so far.",
      "Employ dynamic programming to build up the maximum value from smaller segments."
    ],
    "context": "Divide and Conquer is well-suited for parallel computation. To find the maximum element, the set of nodes can be divided into smaller groups, and the maximum can be found independently in each group. These results are then combined to find the overall maximum, allowing for parallel execution on different processors.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Algorithms",
    "subtopic": "Greedy Algorithms",
    "question": "For a software engineer developing an algorithm to find the minimum number of coins to make a given change amount, which greedy strategy works for standard coin denominations (e.g., 1, 5, 10, 25 cents), and why might it fail for arbitrary denominations?",
    "correct_answer": "Always pick the largest denomination less than or equal to the remaining amount. It fails for arbitrary denominations because the globally optimal choice might not be achieved by locally optimal steps.",
    "distractors": [
      "Always pick the smallest denomination first. It always works for any denominations.",
      "Randomly pick denominations until the amount is met. It is computationally inefficient.",
      "Use dynamic programming as it is the only way to guarantee an optimal solution for all denominations."
    ],
    "context": "The greedy coin change algorithm works for canonical coin systems (like USD or EUR) because of their specific denominations. However, it fails for non-canonical systems (e.g., if denominations were 1, 3, 4 cents and the target was 6, greedy would pick 4+1+1, while optimal is 3+3). This highlights that greedy choices don't always lead to global optimality.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Algorithms",
    "subtopic": "Sorting & Searching",
    "question": "A software engineer is tasked with implementing a highly optimized search function for a real-time system where data changes very frequently. Given the need for minimal search latency, and accepting a potential trade-off in memory usage, which searching technique should be considered?",
    "correct_answer": "Hashing with a well-designed hash function and collision resolution.",
    "distractors": [
      "Binary Search on a sorted array.",
      "Linear Search on an unsorted linked list.",
      "Breadth-First Search on a graph representation."
    ],
    "context": "Hashing provides average-case O(1) search time, which is crucial for real-time systems requiring minimal latency. While it can consume more memory due to potential empty slots or collision resolution overhead, its speed often outweighs this for performance-critical applications. Binary search requires a sorted array, which is difficult to maintain with frequent changes, and linear search is too slow for large datasets.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Algorithms",
    "subtopic": "Dynamic Programming",
    "question": "Which technique solves problems by breaking them into overlapping subproblems and storing their results to avoid recomputation?",
    "correct_answer": "Dynamic Programming",
    "distractors": ["Greedy Algorithm", "Divide and Conquer", "Backtracking"],
    "context": "Dynamic Programming solves complex problems by breaking them into smaller overlapping subproblems and caching their results.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Algorithms",
    "subtopic": "Graph Algorithms",
    "question": "Which algorithm finds the shortest path from a source node to all other nodes in a weighted graph with non-negative edges?",
    "correct_answer": "Dijkstra's Algorithm",
    "distractors": ["Prim's Algorithm", "Floyd-Warshall Algorithm", "Kruskal's Algorithm"],
    "context": "Dijkstra’s Algorithm computes the shortest path from a source node to all other nodes in a graph with non-negative edge weights.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Algorithms",
    "subtopic": "Graph Algorithms",
    "question": "Which traversal algorithm uses a queue to explore all nodes at the present depth before moving to the next level?",
    "correct_answer": "Breadth First Search",
    "distractors": ["Depth First Search", "Dijkstra’s Algorithm", "Topological Sort"],
    "context": "Breadth First Search (BFS) uses a queue to visit all nodes level by level and is commonly used in unweighted shortest path finding.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Algorithms",
    "subtopic": "NP-Completeness",
    "question": "Which class of problems is characterized by the property that solutions can be verified in polynomial time?",
    "correct_answer": "NP",
    "distractors": ["P", "NP-Hard", "EXP"],
    "context": "NP is a complexity class where a given solution can be verified in polynomial time, even if finding the solution is hard.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Algorithms",
    "subtopic": "NP-Completeness",
    "question": "Which problem is a classic example of an NP-Complete problem often used to reduce other problems?",
    "correct_answer": "Boolean Satisfiability Problem (SAT)",
    "distractors": ["Sorting", "Primality Testing", "Greatest Common Divisor"],
    "context": "The Boolean Satisfiability Problem (SAT) is the first proven NP-Complete problem and is widely used in reductions.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Algorithms",
    "subtopic": "Graph Algorithms",
    "question": "Which algorithm constructs a Minimum Spanning Tree by always selecting the edge with the smallest weight that doesn’t form a cycle?",
    "correct_answer": "Kruskal’s Algorithm",
    "distractors": ["Prim’s Algorithm", "Dijkstra’s Algorithm", "Bellman-Ford Algorithm"],
    "context": "Kruskal’s Algorithm is a greedy method that builds a Minimum Spanning Tree by choosing the lowest weight edges without forming cycles.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Algorithms",
    "subtopic": "Dynamic Programming",
    "question": "Which problem is typically solved using dynamic programming by storing optimal substructure values in a 2D table?",
    "correct_answer": "Longest Common Subsequence",
    "distractors": ["Breadth First Search", "Merge Sort", "Quickselect"],
    "context": "The Longest Common Subsequence (LCS) problem uses a 2D dynamic programming table to store lengths of matching subsequences.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Dynamic Programming",
    "subtopic": "Longest Common Subsequence",
    "question": "What is the time complexity of finding the Longest Common Subsequence (LCS) of two strings of length m and n using dynamic programming?",
    "correct_answer": "O(m × n)",
    "distractors": [
      "O(m + n)",
      "O(2^(m+n))",
      "O(m × n × log(min(m,n)))"
    ],
    "context": "The LCS problem uses a 2D DP table where each cell [i][j] represents the length of LCS of first i characters of string1 and first j characters of string2, requiring O(m × n) time to fill the entire table.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Dynamic Programming",
    "subtopic": "0/1 Knapsack",
    "question": "In the 0/1 Knapsack problem with n items and capacity W, what is the space complexity of the optimized DP solution?",
    "correct_answer": "O(W)",
    "distractors": [
      "O(n × W)",
      "O(n)",
      "O(n + W)"
    ],
    "context": "The 0/1 Knapsack problem can be solved using space optimization where only the current and previous rows of the DP table are maintained, reducing space complexity from O(n × W) to O(W) by using a 1D array.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Graph Algorithms",
    "subtopic": "Breadth-First Search",
    "question": "What data structure is essential for implementing Breadth-First Search (BFS) traversal?",
    "correct_answer": "Queue",
    "distractors": [
      "Stack",
      "Priority Queue",
      "Hash Table"
    ],
    "context": "BFS explores vertices level by level, visiting all vertices at distance k before visiting vertices at distance k+1. A queue (FIFO structure) ensures this order by adding neighbors to the rear and processing vertices from the front.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Graph Algorithms",
    "subtopic": "Dijkstra's Algorithm",
    "question": "What is the time complexity of Dijkstra's algorithm when implemented using a binary heap?",
    "correct_answer": "O((V + E) log V)",
    "distractors": [
      "O(V²)",
      "O(E log E)",
      "O(V log V + E)"
    ],
    "context": "Dijkstra's algorithm using binary heap performs V extract-min operations (each taking O(log V)) and up to E decrease-key operations (each taking O(log V)), resulting in O((V + E) log V) total complexity.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Graph Algorithms",
    "subtopic": "Minimum Spanning Tree",
    "question": "Which property must be satisfied by any Minimum Spanning Tree (MST) of a connected graph with n vertices?",
    "correct_answer": "Contains exactly (n-1) edges",
    "distractors": [
      "Contains exactly n edges",
      "All edges have the same weight",
      "Contains at least one cycle"
    ],
    "context": "A Minimum Spanning Tree of a connected graph with n vertices is a tree that spans all vertices with minimum total edge weight. Since it's a tree, it must contain exactly (n-1) edges and be acyclic.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "NP-Completeness and Approximation",
    "subtopic": "P vs NP",
    "question": "Which statement correctly describes the relationship between P and NP complexity classes?",
    "correct_answer": "P ⊆ NP, but whether P = NP is unknown",
    "distractors": [
      "P = NP has been proven true",
      "NP ⊆ P has been proven true",
      "P and NP are disjoint sets"
    ],
    "context": "The class P contains problems solvable in polynomial time, while NP contains problems verifiable in polynomial time. Since any problem solvable in polynomial time is also verifiable in polynomial time, P ⊆ NP. However, whether P = NP remains the most famous unsolved problem in computer science.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "NP-Completeness and Approximation",
    "subtopic": "TSP Approximation",
    "question": "What is the approximation ratio of the Christofides algorithm for the Traveling Salesman Problem (TSP)?",
    "correct_answer": "3/2",
    "distractors": [
      "2",
      "1.5 log n",
      "√n"
    ],
    "context": "The Christofides algorithm provides a 3/2-approximation for the metric TSP by finding an MST, identifying odd-degree vertices, finding minimum-weight perfect matching on them, and combining to create an Eulerian graph before converting to Hamiltonian cycle.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Algorithms",
    "subtopic": "Dynamic Programming",
    "question": "Which problem can be solved using Dynamic Programming to find the length of the longest common subsequence of two strings?",
    "correct_answer": "Longest Common Subsequence",
    "distractors": ["Longest Increasing Subsequence", "Knapsack Problem", "Matrix Chain Multiplication"],
    "context": "The Longest Common Subsequence (LCS) problem uses Dynamic Programming to build a table that stores lengths of common subsequences, achieving a time complexity of O(mn) for strings of lengths m and n.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Algorithms",
    "subtopic": "Graph Algorithms",
    "question": "Which graph traversal algorithm explores all neighbors of a vertex before moving to the next level of vertices?",
    "correct_answer": "Breadth-First Search",
    "distractors": ["Depth-First Search", "Dijkstra’s Algorithm", "Prim’s Algorithm"],
    "context": "Breadth-First Search (BFS) uses a queue to explore vertices level by level, ensuring all neighbors at the current depth are visited before moving deeper.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Algorithms",
    "subtopic": "Graph Algorithms",
    "question": "Which algorithm finds the shortest path from a single source to all other vertices in a weighted graph with non-negative edge weights?",
    "correct_answer": "Dijkstra’s Algorithm",
    "distractors": ["Bellman-Ford Algorithm", "Floyd-Warshall Algorithm", "Kruskal’s Algorithm"],
    "context": "Dijkstra’s Algorithm uses a priority queue to greedily select the vertex with the smallest tentative distance, achieving a time complexity of O((V + E) log V) with a binary heap.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Algorithms",
    "subtopic": "Dynamic Programming",
    "question": "Which Dynamic Programming problem involves selecting items with given weights and values to maximize value within a knapsack’s capacity?",
    "correct_answer": "0/1 Knapsack Problem",
    "distractors": ["Fractional Knapsack Problem", "Longest Palindromic Subsequence", "Edit Distance"],
    "context": "The 0/1 Knapsack Problem uses a Dynamic Programming table to decide whether to include each item, with a time complexity of O(nW) where n is the number of items and W is the capacity.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Algorithms",
    "subtopic": "Graph Algorithms",
    "question": "Which algorithm constructs a minimum spanning tree by repeatedly adding the smallest edge that connects a vertex in the tree to a vertex outside it?",
    "correct_answer": "Prim’s Algorithm",
    "distractors": ["Kruskal’s Algorithm", "Bellman-Ford Algorithm", "A* Algorithm"],
    "context": "Prim’s Algorithm grows a minimum spanning tree by selecting the smallest edge connecting the tree to an unvisited vertex, with a time complexity of O((V + E) log V) using a priority queue.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Algorithms",
    "subtopic": "NP-Completeness",
    "question": "Which of the following problems is known to be NP-Complete and involves finding a subset of vertices that covers all edges in a graph?",
    "correct_answer": "Vertex Cover Problem",
    "distractors": ["Shortest Path Problem", "Minimum Spanning Tree", "Topological Sort"],
    "context": "The Vertex Cover Problem is NP-Complete, requiring the smallest set of vertices such that each edge in the graph is incident to at least one vertex in the set.",
    "difficulty": "advanced",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Algorithms",
    "subtopic": "Approximation Algorithms",
    "question": "Which approximation algorithm provides a 2-approximation for the Vertex Cover Problem in polynomial time?",
    "correct_answer": "Greedy Vertex Cover",
    "distractors": ["Greedy Knapsack", "Greedy Set Cover", "Randomized Rounding"],
    "context": "The Greedy Vertex Cover algorithm selects edges and includes both endpoints in the cover, ensuring a solution no more than twice the size of the optimal vertex cover in polynomial time.",
    "difficulty": "advanced",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Algorithms",
    "subtopic": "Dynamic Programming",
    "question": "A software company is building a recommendation engine that needs to find the longest common subsequence between two user's movie watch histories to suggest similar films. Which algorithmic paradigm is best suited for this task, and why?",
    "correct_answer": "Dynamic Programming, because it efficiently solves problems with overlapping subproblems and optimal substructure by storing intermediate results.",
    "distractors": [
      "Greedy Algorithms, as they make locally optimal choices which may not lead to a globally optimal longest common subsequence.",
      "Divide and Conquer, as breaking the problem into independent subproblems does not directly leverage the overlapping nature of common subsequences.",
      "Backtracking, as it would explore too many redundant paths, leading to inefficiency for larger watch histories."
    ],
    "context": "The Longest Common Subsequence (LCS) problem is a classic application of dynamic programming. It exhibits optimal substructure (an optimal solution to the LCS problem contains optimal solutions to subproblems) and overlapping subproblems (the same subproblems are solved multiple times if not memoized or tabulated).",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Algorithms",
    "subtopic": "Graph Algorithms (BFS, DFS, Dijkstra, MST)",
    "question": "A network administrator needs to determine the shortest path for data packets from a central server to all other servers in a large, weighted network, where link costs represent latency. Which graph algorithm should be employed?",
    "correct_answer": "Dijkstra's Algorithm",
    "distractors": [
      "Breadth-First Search (BFS)",
      "Depth-First Search (DFS)",
      "Prim's Algorithm for Minimum Spanning Tree"
    ],
    "context": "Dijkstra's Algorithm finds the shortest paths from a single source node to all other nodes in a graph with non-negative edge weights. BFS finds shortest paths in unweighted graphs, while DFS is for traversal. Prim's Algorithm finds a Minimum Spanning Tree, not shortest paths.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Algorithms",
    "subtopic": "NP-Completeness and Approximation",
    "question": "A logistics company is trying to optimize delivery routes for a large fleet of vehicles to minimize total travel distance, visiting each customer exactly once. This problem is known to be computationally hard. What complexity class does it belong to, and why is an exact solution often impractical for large instances?",
    "correct_answer": "NP-hard, because there is no known polynomial-time algorithm to find an optimal solution, and verifying a solution is easy.",
    "distractors": [
      "P-class, because a polynomial-time algorithm exists for all instances.",
      "NP-complete, because it is both in NP and NP-hard, and a solution can be found in polynomial time.",
      "Undecidable, because no algorithm can solve it in finite time."
    ],
    "context": "The Traveling Salesperson Problem (TSP), which describes visiting each customer exactly once to minimize total distance, is a classic example of an NP-hard problem. This means no known polynomial-time algorithm exists for finding the optimal solution, making exact solutions impractical for large instances and necessitating the use of approximation algorithms or heuristics.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Algorithms",
    "subtopic": "Dynamic Programming",
    "question": "Consider a scenario where a financial institution needs to calculate the maximum profit that can be obtained by buying and selling a stock exactly once, given a sequence of stock prices over 'n' days. How can dynamic programming be applied to efficiently solve this?",
    "correct_answer": "By iterating through the prices, keeping track of the minimum price seen so far and updating the maximum profit.",
    "distractors": [
      "By exhaustively checking every possible buy and sell pair, leading to O(n^2) complexity.",
      "By using a greedy approach, always buying at the lowest point and selling at the next highest, which might miss the global optimum.",
      "By dividing the problem into smaller time intervals and solving them independently, without considering dependencies."
    ],
    "context": "The 'Best Time to Buy and Sell Stock' problem (with one transaction) can be solved using a dynamic programming approach in O(n) time. The key is to maintain a variable for the minimum price encountered so far and, for each subsequent price, calculate the potential profit and update the maximum profit found.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Algorithms",
    "subtopic": "Graph Algorithms (BFS, DFS, Dijkstra, MST)",
    "question": "A social media platform wants to identify all users reachable within 'k' degrees of separation from a given user to suggest new connections. Which graph traversal algorithm is most suitable for this task?",
    "correct_answer": "Breadth-First Search (BFS)",
    "distractors": [
      "Depth-First Search (DFS)",
      "Dijkstra's Algorithm",
      "Prim's Algorithm"
    ],
    "context": "BFS is ideal for finding the shortest path in unweighted graphs and for exploring all nodes at a given 'depth' or distance from a starting node. This directly applies to finding users within a specific number of connections (degrees of separation). DFS explores branches as far as possible before backtracking.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Algorithms",
    "subtopic": "NP-Completeness and Approximation",
    "question": "In the context of designing scheduling algorithms for a multi-core processor, a critical challenge is to find an optimal assignment of tasks to cores to minimize the total execution time, given that tasks have dependencies. If this problem is proven to be NP-complete, what implication does this have for a software developer?",
    "correct_answer": "An exact polynomial-time algorithm is unlikely to exist, so heuristic or approximation algorithms are often the practical solution.",
    "distractors": [
      "The problem can be solved in polynomial time with a clever algorithm.",
      "The problem is undecidable, meaning no algorithm can ever solve it.",
      "Only brute-force solutions are possible, regardless of problem size."
    ],
    "context": "If a problem is NP-complete, it implies that it's as hard as any problem in NP, and no polynomial-time algorithm is known to exist for it. Therefore, for large instances, developers typically resort to approximation algorithms that provide a 'good enough' solution within a reasonable time, rather than an absolute optimal solution.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Algorithms",
    "subtopic": "Graph Algorithms (BFS, DFS, Dijkstra, MST)",
    "question": "During the development of a compiler, a crucial step involves detecting cycles in a program's call graph to identify potential infinite recursion. Which graph traversal algorithm is most suitable for efficiently identifying the presence of cycles?",
    "correct_answer": "Depth-First Search (DFS)",
    "distractors": [
      "Breadth-First Search (BFS)",
      "Kruskal's Algorithm",
      "Floyd-Warshall Algorithm"
    ],
    "context": "Depth-First Search (DFS) is particularly effective for cycle detection in graphs. During a DFS traversal, if an already visited node (that is still in the current recursion stack) is encountered, it indicates the presence of a cycle. BFS is generally used for shortest paths in unweighted graphs, while Kruskal's and Floyd-Warshall are for MST and all-pairs shortest paths respectively.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Data Structures",
    "subtopic": "Arrays, Linked Lists, Stacks, Queues",
    "question": "A software engineer is developing a feature for a music streaming application that allows users to 'undo' their last listened song. Which data structure is most appropriate to efficiently implement this 'undo' functionality?",
    "correct_answer": "Stack",
    "distractors": [
      "Queue",
      "Array",
      "Linked List"
    ],
    "context": "A Stack operates on a Last-In, First-Out (LIFO) principle, where the last item added is the first one to be removed. This behavior perfectly aligns with an 'undo' functionality, where the most recent action is the one to be reversed.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Data Structures",
    "subtopic": "Arrays, Linked Lists, Stacks, Queues",
    "question": "In a highly concurrent system managing incoming sensor data, where data must be processed in the order it arrives, which data structure offers the most efficient way to handle this 'first-in, first-out' processing?",
    "correct_answer": "Queue",
    "distractors": [
      "Stack",
      "Array",
      "Doubly Linked List"
    ],
    "context": "A Queue follows a First-In, First-Out (FIFO) principle, meaning elements are processed in the order they are added. This is ideal for scenarios like processing incoming data streams or managing tasks where the order of arrival dictates the order of service.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Data Structures",
    "subtopic": "Trees (Binary, BST, AVL, B-Trees)",
    "question": "A database system frequently performs range queries (e.g., retrieve all records where a key is between X and Y). Which type of balanced binary search tree is particularly well-suited for efficient range query operations due to its structure and properties?",
    "correct_answer": "B-Tree",
    "distractors": [
      "AVL Tree",
      "Red-Black Tree",
      "Binary Search Tree (unbalanced)"
    ],
    "context": "B-Trees are multi-way trees commonly used in database and file systems because they are optimized for disk-based storage. Their high branching factor (many children per node) and ordered structure allow for efficient range queries and sequential access by minimizing disk I/O operations.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Data Structures",
    "subtopic": "Trees (Binary, BST, AVL, B-Trees)",
    "question": "A software engineer is designing an in-memory dictionary for a programming language interpreter, where frequent insertions, deletions, and lookups of keywords are expected. Which self-balancing binary search tree guarantees O(log n) time complexity for these operations in all cases?",
    "correct_answer": "AVL Tree",
    "distractors": [
      "Binary Search Tree (unbalanced)",
      "B-Tree",
      "Trie"
    ],
    "context": "AVL trees are self-balancing binary search trees that maintain a balance factor for each node, ensuring that the height difference between the left and right subtrees is at most 1. This strict balancing guarantees O(log n) time complexity for search, insertion, and deletion operations in the worst case, making them highly reliable for performance-critical applications.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Data Structures",
    "subtopic": "Heaps",
    "question": "In a real-time operating system, tasks are prioritized based on their urgency, and the highest-priority task must always be executed next. Which data structure is ideal for efficiently managing and extracting the highest-priority task?",
    "correct_answer": "Max Heap",
    "distractors": [
      "Min Heap",
      "Binary Search Tree",
      "Queue"
    ],
    "context": "A Max Heap is a complete binary tree where the value of each node is greater than or equal to the value of its children. This property ensures that the maximum element is always at the root, allowing for O(1) access to the highest-priority task and O(log n) for extraction and insertion.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Data Structures",
    "subtopic": "Heaps",
    "question": "A network monitoring tool collects latency data from various servers. The tool needs to quickly identify the server with the lowest latency at any given moment. Which heap variant would be most suitable for this purpose?",
    "correct_answer": "Min Heap",
    "distractors": [
      "Max Heap",
      "Fibonacci Heap",
      "Binary Search Tree"
    ],
    "context": "A Min Heap is a complete binary tree where the value of each node is less than or equal to the value of its children. This structure ensures that the minimum element is always at the root, making it highly efficient for quickly retrieving the smallest value, such as the lowest latency.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Data Structures",
    "subtopic": "Arrays, Linked Lists, Stacks, Queues",
    "question": "A software team is developing a text editor that requires efficient insertion and deletion of characters anywhere within a large document. Which data structure would be the most suitable choice to handle these dynamic operations without significant performance overhead for shifts?",
    "correct_answer": "Doubly Linked List",
    "distractors": [
      "Array",
      "Singly Linked List",
      "Circular Queue"
    ],
    "context": "A Doubly Linked List allows for efficient insertion and deletion of nodes (characters) at any position in O(1) time (once the position is found) because it maintains pointers to both the previous and next nodes. In contrast, arrays require O(n) time for insertions/deletions as elements need to be shifted, and singly linked lists only allow efficient insertion/deletion after traversing to the preceding node.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Data Structures",
    "subtopic": "Arrays",
    "question": "Which operation in an array has a time complexity of O(n) in the worst case when accessing elements by index?",
    "correct_answer": "Shifting elements",
    "distractors": ["Accessing by index", "Appending at the end", "Searching in a sorted array"],
    "context": "Shifting elements in an array, such as during insertion or deletion in the middle, requires moving subsequent elements, resulting in O(n) time complexity in the worst case.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Data Structures",
    "subtopic": "Linked Lists",
    "question": "Which type of linked list allows traversal in both directions and efficient insertion/deletion at both ends?",
    "correct_answer": "Doubly Linked List",
    "distractors": ["Singly Linked List", "Circular Linked List", "Skip List"],
    "context": "A Doubly Linked List has nodes with pointers to both the next and previous nodes, enabling bidirectional traversal and O(1) insertion/deletion at the head or tail.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Data Structures",
    "subtopic": "Stacks",
    "question": "Which data structure is best suited for implementing a function call stack in a recursive program?",
    "correct_answer": "Stack",
    "distractors": ["Queue", "Heap", "Binary Tree"],
    "context": "A Stack follows the Last-In-First-Out (LIFO) principle, making it ideal for managing function calls in recursion, as the most recent call is popped first.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Data Structures",
    "subtopic": "Queues",
    "question": "Which queue variant allows insertion at both ends but deletion only at the front?",
    "correct_answer": "Deque",
    "distractors": ["Priority Queue", "Circular Queue", "Simple Queue"],
    "context": "A Deque (Double-Ended Queue) supports insertion at both ends and deletion at the front, providing flexibility over a simple queue while maintaining O(1) operations for these tasks.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Data Structures",
    "subtopic": "Trees",
    "question": "Which self-balancing binary search tree ensures that the height difference between left and right subtrees of any node is at most 1?",
    "correct_answer": "AVL Tree",
    "distractors": ["Binary Search Tree", "B-Tree", "Red-Black Tree"],
    "context": "An AVL Tree maintains balance by ensuring the balance factor of each node is -1, 0, or 1, guaranteeing O(log n) time for search, insertion, and deletion.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Data Structures",
    "subtopic": "Trees",
    "question": "Which tree data structure is commonly used in databases and file systems to minimize disk I/O operations?",
    "correct_answer": "B-Tree",
    "distractors": ["Binary Search Tree", "AVL Tree", "Heap"],
    "context": "B-Trees are multi-way balanced trees designed to reduce disk I/O by keeping multiple keys in each node and maintaining a low height, making them ideal for databases and file systems.",
    "difficulty": "advanced",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Data Structures",
    "subtopic": "Heaps",
    "question": "Which heap operation can be used to efficiently find the kth smallest element in an unsorted array?",
    "correct_answer": "Build Min-Heap",
    "distractors": ["Build Max-Heap", "Heap Sort", "Priority Queue Dequeue"],
    "context": "Building a Min-Heap from an array takes O(n) time, and extracting the minimum k times yields the kth smallest element in O(n + k log n) time, efficient for small k.",
    "difficulty": "advanced",
    "type": "mcq"
  },
   {
    "goal": "GATE CSE",
    "topic": "Data Structures",
    "subtopic": "Arrays",
    "question": "What is the time complexity of accessing an element at a given index in an array?",
    "correct_answer": "O(1)",
    "distractors": [
      "O(n)",
      "O(log n)",
      "O(n log n)"
    ],
    "context": "Arrays provide random access to elements using index-based addressing. Since the memory address of any element can be calculated directly using the base address and index (address = base + index × size), access time is constant regardless of array size.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Data Structures",
    "subtopic": "Linked Lists",
    "question": "What is the main advantage of a doubly linked list over a singly linked list?",
    "correct_answer": "Efficient backward traversal and deletion of given node",
    "distractors": [
      "Lower memory usage per node",
      "Faster insertion at the beginning",
      "Better cache locality"
    ],
    "context": "Doubly linked lists maintain both next and previous pointers, allowing bidirectional traversal and O(1) deletion of a node when given its reference, unlike singly linked lists which require O(n) time to find the previous node for deletion.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Data Structures",
    "subtopic": "Stacks and Queues",
    "question": "Which data structure is most suitable for implementing function call management in programming languages?",
    "correct_answer": "Stack",
    "distractors": [
      "Queue",
      "Circular Queue",
      "Priority Queue"
    ],
    "context": "Function calls follow Last-In-First-Out (LIFO) order where the most recently called function must complete first before returning to the previous function. Stack's LIFO property makes it ideal for managing function call frames, local variables, and return addresses.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Trees",
    "subtopic": "Binary Search Tree",
    "question": "In a balanced Binary Search Tree with n nodes, what is the time complexity of search, insertion, and deletion operations?",
    "correct_answer": "O(log n)",
    "distractors": [
      "O(n)",
      "O(1)",
      "O(n log n)"
    ],
    "context": "In a balanced BST, the height is approximately log₂(n). Since search, insertion, and deletion operations traverse from root to leaf in the worst case, they all have O(log n) time complexity due to the logarithmic height of the balanced tree.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Trees",
    "subtopic": "AVL Tree",
    "question": "What is the maximum difference in heights between left and right subtrees allowed in an AVL tree?",
    "correct_answer": "1",
    "distractors": [
      "0",
      "2",
      "log n"
    ],
    "context": "AVL trees maintain the balance factor property where for every node, the height difference between left and right subtrees must be at most 1. This strict balancing ensures O(log n) operations by preventing the tree from becoming skewed.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Trees",
    "subtopic": "B-Trees",
    "question": "In a B-Tree of order m, what is the minimum number of children a non-leaf internal node can have?",
    "correct_answer": "⌈m/2⌉",
    "distractors": [
      "m",
      "m-1",
      "⌊m/2⌋"
    ],
    "context": "B-Trees maintain balance by ensuring each internal node (except root) has at least ⌈m/2⌉ children and at most m children. This property guarantees that the tree remains balanced and provides efficient search, insertion, and deletion operations in O(log n) time.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Heaps",
    "subtopic": "Binary Heap",
    "question": "What is the time complexity of building a binary heap from an unsorted array of n elements using the bottom-up approach?",
    "correct_answer": "O(n)",
    "distractors": [
      "O(n log n)",
      "O(log n)",
      "O(n²)"
    ],
    "context": "Building a heap using bottom-up heapify starts from the last non-leaf node and applies heapify operation. The total work done is bounded by the sum of heights of all nodes, which equals O(n) due to the geometric series where most nodes are at lower levels.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Data Structures",
    "subtopic": "Stacks",
    "question": "Which data structure follows the Last-In-First-Out (LIFO) principle for element access?",
    "correct_answer": "Stack",
    "distractors": ["Queue", "Heap", "Linked List"],
    "context": "A stack is a linear data structure that allows insertion and deletion only at one end, following the LIFO principle.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Data Structures",
    "subtopic": "Linked Lists",
    "question": "Which operation is more efficient in a singly linked list compared to an array?",
    "correct_answer": "Insertion at the beginning",
    "distractors": ["Random access", "Sorting", "Binary search"],
    "context": "Linked lists allow constant time insertion at the beginning, unlike arrays that require shifting elements.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Data Structures",
    "subtopic": "Queues",
    "question": "Which data structure allows insertion at one end and deletion at the other end?",
    "correct_answer": "Queue",
    "distractors": ["Stack", "Array", "Heap"],
    "context": "A queue operates in FIFO (First-In-First-Out) order, where insertion happens at the rear and deletion at the front.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Data Structures",
    "subtopic": "Binary Search Trees",
    "question": "What is the worst-case time complexity of searching in an unbalanced Binary Search Tree?",
    "correct_answer": "O(n)",
    "distractors": ["O(log n)", "O(1)", "O(n log n)"],
    "context": "In an unbalanced BST, the tree can degrade to a linked list in the worst case, leading to O(n) search time.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Data Structures",
    "subtopic": "AVL Trees",
    "question": "Which type of binary tree ensures that the height difference between left and right subtrees is at most one?",
    "correct_answer": "AVL Tree",
    "distractors": ["Binary Search Tree", "B-Tree", "Red-Black Tree"],
    "context": "AVL Trees are self-balancing binary search trees where the difference in height of subtrees is restricted to 1.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Data Structures",
    "subtopic": "Heaps",
    "question": "Which heap property must a max-heap maintain?",
    "correct_answer": "Every parent node is greater than or equal to its children",
    "distractors": ["Each child is greater than its parent", "Only leaf nodes have values", "All nodes are sorted"],
    "context": "A max-heap is a complete binary tree where the value of each parent node is greater than or equal to its children.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Data Structures",
    "subtopic": "B-Trees",
    "question": "Which tree data structure is commonly used in databases and file systems to handle large amounts of data efficiently?",
    "correct_answer": "B-Tree",
    "distractors": ["AVL Tree", "Heap", "Segment Tree"],
    "context": "B-Trees are balanced search trees optimized for systems that read and write large blocks of data, like databases.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Data Structures",
    "subtopic": "Hashing",
    "question": "Which technique is commonly used in hashing to resolve collisions by placing the new item in the next available bucket?",
    "correct_answer": "Linear Probing",
    "distractors": ["Chaining", "Double Hashing", "Separate Addressing"],
    "context": "Linear probing is a collision resolution technique in open addressing where the next slot is checked sequentially.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Data Structures",
    "subtopic": "Hashing",
    "question": "In open addressing, which method uses a second hash function to calculate the interval between probes?",
    "correct_answer": "Double Hashing",
    "distractors": ["Linear Probing", "Quadratic Probing", "Chaining"],
    "context": "Double hashing reduces clustering by using a second hash function to calculate the probe step in open addressing.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Data Structures",
    "subtopic": "Hashing",
    "question": "What is the main advantage of using chaining to handle collisions in a hash table?",
    "correct_answer": "It allows multiple elements to exist at the same index using linked lists",
    "distractors": ["It avoids using extra memory", "It sorts the elements automatically", "It reduces hash computations"],
    "context": "Chaining uses linked lists to store multiple values at a single hash index, effectively handling collisions.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Data Structures",
    "subtopic": "Graph Representations",
    "question": "Which graph representation uses less space for sparse graphs?",
    "correct_answer": "Adjacency List",
    "distractors": ["Adjacency Matrix", "Incidence Matrix", "Edge List"],
    "context": "Adjacency lists are space-efficient for sparse graphs because they store only existing edges per vertex.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Data Structures",
    "subtopic": "Graph Representations",
    "question": "Which representation allows constant-time edge existence checks but takes O(V^2) space?",
    "correct_answer": "Adjacency Matrix",
    "distractors": ["Adjacency List", "Edge List", "Hash Table"],
    "context": "Adjacency matrices provide O(1) time edge lookup but require O(V²) space even for sparse graphs.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Data Structures",
    "subtopic": "Graph Representations",
    "question": "Which graph representation explicitly lists all edges as vertex pairs?",
    "correct_answer": "Edge List",
    "distractors": ["Adjacency Matrix", "Adjacency List", "Weight Matrix"],
    "context": "An edge list stores all edges as pairs of vertices, making it simple but less efficient for adjacency queries.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Hashing",
    "subtopic": "Hash Functions",
    "question": "What is the expected time complexity of search operation in a hash table with good hash function and proper load factor?",
    "correct_answer": "O(1)",
    "distractors": [
      "O(log n)",
      "O(n)",
      "O(n log n)"
    ],
    "context": "A hash table with a good hash function distributes keys uniformly across buckets, and maintaining proper load factor ensures minimal collisions. Under these conditions, the average case time complexity for search, insert, and delete operations is O(1) constant time.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Hashing",
    "subtopic": "Collision Resolution",
    "question": "In linear probing collision resolution, what is the primary disadvantage that affects performance?",
    "correct_answer": "Primary clustering",
    "distractors": [
      "Secondary clustering",
      "Infinite loops during insertion",
      "Higher memory overhead"
    ],
    "context": "Linear probing suffers from primary clustering where consecutive occupied slots form clusters. When a collision occurs, the probe sequence examines consecutive slots, causing items to cluster together and increasing the average probe distance for future operations.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Hashing",
    "subtopic": "Double Hashing",
    "question": "In double hashing, what condition must the second hash function h2(k) satisfy to ensure all table positions are probed?",
    "correct_answer": "h2(k) must be relatively prime to table size",
    "distractors": [
      "h2(k) must be even",
      "h2(k) must be greater than h1(k)",
      "h2(k) must be a power of 2"
    ],
    "context": "Double hashing uses probe sequence h1(k) + i×h2(k) mod m. For this sequence to visit all table positions before repeating, h2(k) and table size m must be relatively prime (gcd(h2(k), m) = 1), ensuring the probe sequence has period m.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Graph Representations",
    "subtopic": "Adjacency Matrix",
    "question": "What is the space complexity of representing a graph with V vertices using an adjacency matrix?",
    "correct_answer": "O(V²)",
    "distractors": [
      "O(V)",
      "O(V + E)",
      "O(E)"
    ],
    "context": "An adjacency matrix is a V×V matrix where entry (i,j) indicates whether there is an edge between vertices i and j. Regardless of the actual number of edges E in the graph, the matrix always requires V² space to store all possible vertex pairs.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Graph Representations",
    "subtopic": "Adjacency List",
    "question": "For a sparse graph with V vertices and E edges, which representation is more space-efficient?",
    "correct_answer": "Adjacency List",
    "distractors": [
      "Adjacency Matrix",
      "Incidence Matrix",
      "Edge List"
    ],
    "context": "Adjacency list uses O(V + E) space by maintaining a list of neighbors for each vertex. For sparse graphs where E << V², this is significantly more space-efficient than adjacency matrix's O(V²) space, especially when E is much smaller than V².",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Graph Representations",
    "subtopic": "Incidence Matrix",
    "question": "In an incidence matrix representation of a graph with V vertices and E edges, what are the dimensions of the matrix?",
    "correct_answer": "V × E",
    "distractors": [
      "V × V",
      "E × E",
      "E × V"
    ],
    "context": "An incidence matrix has V rows (one for each vertex) and E columns (one for each edge). Entry (i,j) is 1 if vertex i is incident to edge j, and 0 otherwise. This representation explicitly shows the relationship between vertices and edges.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Data Structures",
    "subtopic": "Hashing",
    "question": "Which technique is used in hashing to resolve collisions by storing multiple elements in the same slot using a linked list?",
    "correct_answer": "Chaining",
    "distractors": ["Open Addressing", "Double Hashing", "Linear Probing"],
    "context": "Chaining resolves hash collisions by maintaining a linked list at each hash table slot, allowing multiple elements to be stored at the same index with O(1) average-case insertion time.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Data Structures",
    "subtopic": "Graph Representations",
    "question": "Which graph representation is most suitable for a dense graph with V vertices and E edges?",
    "correct_answer": "Adjacency Matrix",
    "distractors": ["Adjacency List", "Edge List", "Incidence Matrix"],
    "context": "An Adjacency Matrix uses a VxV matrix to represent a graph, requiring O(V^2) space, making it efficient for dense graphs where the number of edges is close to V^2.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Data Structures",
    "subtopic": "Hashing",
    "question": "What is the time complexity of searching for an element in a hash table with a good hash function and no collisions?",
    "correct_answer": "O(1)",
    "distractors": ["O(log n)", "O(n)", "O(n log n)"],
    "context": "With a good hash function and no collisions, a hash table achieves O(1) average-case time complexity for search operations due to direct index mapping.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Data Structures",
    "subtopic": "Graph Representations",
    "question": "Which graph representation is most efficient for checking if an edge exists between two vertices in constant time?",
    "correct_answer": "Adjacency Matrix",
    "distractors": ["Adjacency List", "Edge List", "Incidence Matrix"],
    "context": "An Adjacency Matrix allows checking for an edge between two vertices in O(1) time by accessing the matrix element at [u][v], unlike other representations which may require iteration.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Data Structures",
    "subtopic": "Hashing",
    "question": "Which hashing technique uses a second hash function to resolve collisions by probing at intervals determined by the second hash value?",
    "correct_answer": "Double Hashing",
    "distractors": ["Linear Probing", "Quadratic Probing", "Chaining"],
    "context": "Double Hashing uses a second hash function to compute the step size for probing, reducing clustering and achieving better distribution of elements in the hash table.",
    "difficulty": "advanced",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Data Structures",
    "subtopic": "Graph Representations",
    "question": "Which graph representation is most space-efficient for a sparse graph with V vertices and E edges?",
    "correct_answer": "Adjacency List",
    "distractors": ["Adjacency Matrix", "Incidence Matrix", "Edge List"],
    "context": "An Adjacency List uses O(V + E) space, making it ideal for sparse graphs where the number of edges is much less than V^2, as it only stores the actual edges.",
    "difficulty": "advanced",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Data Structures",
    "subtopic": "Hashing",
    "question": "A software development team is building a high-performance in-memory cache for a web application where frequent lookups of key-value pairs are critical. Which technique for handling collisions in a hash table typically offers the best cache performance due to better cache locality?",
    "correct_answer": "Open Addressing (e.g., Linear Probing, Quadratic Probing)",
    "distractors": [
      "Separate Chaining",
      "Perfect Hashing",
      "Cuckoo Hashing"
    ],
    "context": "Open Addressing collision resolution techniques (like linear or quadratic probing) store all elements directly within the hash table's array. This often leads to better cache performance because data elements are stored contiguously in memory, reducing cache misses during lookups compared to Separate Chaining which uses linked lists (or other data structures) external to the main array.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Data Structures",
    "subtopic": "Hashing",
    "question": "A system requires storing a very large set of IP addresses and performing extremely fast lookups to check if an IP address has been seen before. Given potential memory constraints, which hashing-related data structure might be suitable for approximating membership testing with a small probability of false positives?",
    "correct_answer": "Bloom Filter",
    "distractors": [
      "Hash Map (Separate Chaining)",
      "Hash Table (Open Addressing)",
      "Balanced Binary Search Tree"
    ],
    "context": "A Bloom Filter is a probabilistic data structure that can test whether an element is a member of a set. It uses multiple hash functions to set bits in a bit array. While it can produce false positives (claiming an element is present when it's not), it guarantees no false negatives and is highly memory-efficient for large datasets, making it suitable for approximate membership testing.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Graph Representations",
    "question": "In a social network application, users and their friendships are represented as a graph. If the application frequently needs to list all friends of a particular user (i.e., find all neighbors of a vertex), which graph representation would be most efficient for this operation?",
    "correct_answer": "Adjacency List",
    "distractors": [
      "Adjacency Matrix",
      "Incidence Matrix",
      "Edge List"
    ],
    "context": "An Adjacency List represents a graph as an array of lists, where each `array[i]` contains a list of all vertices adjacent to vertex 'i'. This representation is highly efficient for sparse graphs (where the number of edges is much less than $|V|^2$) and for iterating through all neighbors of a specific vertex, as it only stores existing edges.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Hashing",
    "subtopic": "Hash Function Properties",
    "question": "When designing a hash function for a critical system, what is the primary goal to ensure an even distribution of keys across the hash table and minimize collisions?",
    "correct_answer": "Minimizing collisions and distributing keys uniformly.",
    "distractors": [
      "Ensuring the hash function is cryptographically secure.",
      "Making the hash function computationally expensive.",
      "Producing fixed-size hash values regardless of input size."
    ],
    "context": "A good hash function aims to distribute keys as uniformly as possible across the hash table's address space. This uniform distribution minimizes the number of collisions, which in turn leads to better average-case performance for hash table operations (insertion, deletion, lookup). While cryptographic security and fixed-size output are properties of some hash functions, the primary goal for general hash table performance is collision minimization through uniform distribution.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Data Structures",
    "subtopic": "Graph Representations",
    "question": "A software engineer is working on a pathfinding algorithm for a game. The game world can be modeled as a graph, and due to frequent additions and removals of obstacles (edges), the graph structure changes dynamically. Which graph representation offers the best flexibility for adding and removing edges efficiently?",
    "correct_answer": "Adjacency List",
    "distractors": [
      "Adjacency Matrix",
      "Incidence Matrix",
      "2D Array"
    ],
    "context": "An Adjacency List is preferred when a graph is sparse and undergoes frequent modifications (additions or removals of edges). Adding or removing an edge in an Adjacency List typically involves modifying a linked list (or dynamic array) associated with a vertex, which can be done in O(degree(vertex)) or amortized O(1) time. In contrast, an Adjacency Matrix requires updating a specific cell, which is fast, but resizing the matrix for changing vertex counts can be costly, and for sparse graphs, it wastes memory.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Theory of Computation",
    "subtopic": "Regular Languages & Finite Automata",
    "question": "A network protocol is designed to accept only sequences of '0's and '1's that do not contain the substring '11'. Which type of automaton is precisely capable of recognizing all and only such valid sequences?",
    "correct_answer": "Deterministic Finite Automaton (DFA)",
    "distractors": [
      "Pushdown Automaton (PDA)",
      "Turing Machine",
      "Linear Bounded Automaton (LBA)"
    ],
    "context": "Regular languages are precisely those languages that can be recognized by Finite Automata (both DFA and NFA). The language of strings that do not contain a specific substring is a classic example of a regular language, for which a DFA can be constructed to keep track of the last few characters seen.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Theory of Computation",
    "subtopic": "Regular Languages & Finite Automata",
    "question": "In the context of compiler design, lexical analysis (tokenization) is the phase that breaks source code into a stream of tokens. Which theoretical model is most directly applied to define and recognize the patterns of these tokens (like identifiers, keywords, and operators)?",
    "correct_answer": "Regular Expressions and Finite Automata",
    "distractors": [
      "Context-Free Grammars",
      "Turing Machines",
      "Lambda Calculus"
    ],
    "context": "Lexical analysis is fundamentally based on regular languages, which are formally described by regular expressions. Finite Automata are the computational models that implement the recognition of these regular expressions, effectively scanning the input and producing tokens based on defined patterns.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Theory of Computation",
    "subtopic": "Context-Free Grammars & Pushdown Automata",
    "question": "A programming language requires matching opening and closing parentheses, brackets, and braces. Which type of grammar is necessary to formally describe such a language feature, and what automaton can recognize it?",
    "correct_answer": "Context-Free Grammar (CFG) and Pushdown Automaton (PDA)",
    "distractors": [
      "Regular Grammar and Finite Automaton",
      "Context-Sensitive Grammar and Linear Bounded Automaton",
      "Unrestricted Grammar and Turing Machine"
    ],
    "context": "Languages requiring arbitrary nesting, like balanced parentheses, cannot be recognized by finite automata because they lack memory to count and match nested structures. Context-Free Grammars, with their recursive rules, are suitable for describing such nested structures, and Pushdown Automata (which use a stack) are precisely the computational model capable of recognizing Context-Free Languages.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Theory of Computation",
    "subtopic": "Context-Free Grammars & Pushdown Automata",
    "question": "In a compiler's parsing phase, the syntax of a program is checked against a set of rules. For languages with recursive structures like nested function calls and arithmetic expressions, which formal system is used to define the syntax and what automaton type handles its recognition?",
    "correct_answer": "Context-Free Grammars (CFGs) for syntax definition, and Pushdown Automata (PDAs) for recognition.",
    "distractors": [
      "Regular Expressions for syntax definition, and Finite Automata for recognition.",
      "Turing Machines for syntax definition, and their variants for recognition.",
      "Context-Sensitive Grammars for syntax definition, and Linear Bounded Automata for recognition."
    ],
    "context": "Context-Free Grammars are the standard formal tool for defining the syntax (grammatical structure) of programming languages. Features like nested expressions, function calls, and block structures exhibit context-free properties. Pushdown Automata, with their stack memory, are precisely designed to parse and recognize languages described by CFGs.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Theory of Computation",
    "subtopic": "Turing Machines",
    "question": "A software engineer is asked to develop an algorithm that can determine if an arbitrary C++ program will eventually halt or run forever. Based on the theory of computation, what is the fundamental limitation encountered here, and what theoretical model demonstrates this?",
    "correct_answer": "The Halting Problem is undecidable, as proven by the Turing Machine model.",
    "distractors": [
      "This problem can be solved by a Pushdown Automaton.",
      "This problem can be solved by a Deterministic Finite Automaton.",
      "This problem is NP-complete, meaning it has no polynomial-time solution."
    ],
    "context": "The Halting Problem states that there is no general algorithm that can determine, for any arbitrary program and input, whether that program will eventually halt or continue to run forever. This fundamental undecidability was proven by Alan Turing using the Turing Machine model, which represents the most powerful model of computation.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Theory of Computation",
    "subtopic": "Turing Machines",
    "question": "What is the most powerful model of computation in the Chomsky Hierarchy, capable of recognizing any language that can be generated by an unrestricted grammar, and which encompasses all computable functions?",
    "correct_answer": "Turing Machine",
    "distractors": [
      "Pushdown Automaton (PDA)",
      "Finite Automaton (FA)",
      "Linear Bounded Automaton (LBA)"
    ],
    "context": "The Turing Machine is considered the most powerful model of computation in the Chomsky Hierarchy. It can simulate any algorithm and is capable of recognizing all recursively enumerable languages (Type-0 languages), which are generated by unrestricted grammars. This universality is a cornerstone of theoretical computer science.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Theory of Computation",
    "subtopic": "Regular Languages & Finite Automata",
    "question": "Consider a system that processes network packets, and it needs to validate if a packet ID follows a specific format: exactly three alphanumeric characters followed by a hyphen, then exactly two digits. Which formal language concept is used to describe such patterns, and what automaton can recognize it?",
    "correct_answer": "Regular Expression, recognized by a Finite Automaton.",
    "distractors": [
      "Context-Free Grammar, recognized by a Pushdown Automaton.",
      "Turing Machine description, recognized by a Universal Turing Machine.",
      "Chomsky Normal Form, recognized by a Context-Sensitive Automaton."
    ],
    "context": "The described packet ID format (fixed length, specific character types) is a classic example of a pattern that can be precisely defined using a regular expression. Regular expressions are used to describe regular languages, which are exactly the set of languages that can be recognized by Finite Automata (either DFA or NFA).",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Theory of Computation",
    "subtopic": "Regular Languages",
    "question": "Which type of automaton accepts regular languages?",
    "correct_answer": "Finite Automaton",
    "distractors": ["Pushdown Automaton", "Turing Machine", "Linear Bounded Automaton"],
    "context": "A Finite Automaton, either deterministic (DFA) or nondeterministic (NFA), accepts regular languages, which can be described by regular expressions and have a finite number of states.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Theory of Computation",
    "subtopic": "Regular Languages",
    "question": "Which property of regular languages ensures that the union of two regular languages is also a regular language?",
    "correct_answer": "Closure under Union",
    "distractors": ["Closure under Intersection", "Closure under Complement", "Closure under Concatenation"],
    "context": "Regular languages are closed under union, meaning that if L1 and L2 are regular languages, their union L1 ∪ L2 can also be recognized by a finite automaton.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Theory of Computation",
    "subtopic": "Context-Free Grammars",
    "question": "Which automaton is used to accept languages generated by context-free grammars?",
    "correct_answer": "Pushdown Automaton",
    "distractors": ["Finite Automaton", "Turing Machine", "Linear Bounded Automaton"],
    "context": "A Pushdown Automaton (PDA) uses a stack to accept context-free languages, which are generated by context-free grammars, allowing it to handle nested structures like balanced parentheses.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Theory of Computation",
    "subtopic": "Context-Free Grammars",
    "question": "Which normal form of context-free grammar ensures that all productions are of the form A → BC or A → a, where A, B, C are variables and a is a terminal?",
    "correct_answer": "Chomsky Normal Form",
    "distractors": ["Greibach Normal Form", "Backus-Naur Form", "Kuroda Normal Form"],
    "context": "Chomsky Normal Form (CNF) transforms a context-free grammar so that each production is either of the form A → BC (two variables) or A → a (a terminal), simplifying parsing algorithms.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Theory of Computation",
    "subtopic": "Finite Automata",
    "question": "Which type of finite automaton can have multiple possible transitions for the same input symbol from a given state?",
    "correct_answer": "Nondeterministic Finite Automaton",
    "distractors": ["Deterministic Finite Automaton", "Pushdown Automaton", "Epsilon-NFA"],
    "context": "A Nondeterministic Finite Automaton (NFA) allows multiple transitions for the same input symbol and may include epsilon transitions, but it is equivalent in power to a DFA for recognizing regular languages.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Theory of Computation",
    "subtopic": "Turing Machines",
    "question": "Which machine is capable of deciding any recursively enumerable language?",
    "correct_answer": "Turing Machine",
    "distractors": ["Finite Automaton", "Pushdown Automaton", "Linear Bounded Automaton"],
    "context": "A Turing Machine is a computational model that can recognize recursively enumerable languages by using an infinite tape and a read/write head, making it more powerful than finite or pushdown automata.",
    "difficulty": "advanced",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Theory of Computation",
    "subtopic": "Turing Machines",
    "question": "Which problem related to Turing Machines is known to be undecidable?",
    "correct_answer": "Halting Problem",
    "distractors": ["Emptiness Problem", "Reachability Problem", "Equivalence Problem"],
    "context": "The Halting Problem, which determines whether a Turing Machine halts on a given input, is undecidable, meaning no general algorithm can solve it for all possible inputs.",
    "difficulty": "advanced",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Theory of Computation",
    "subtopic": "Regular Languages",
    "question": "Which of the following languages is NOT regular?",
    "correct_answer": "L = {a^n b^n | n ≥ 0}",
    "distractors": [
      "L = {a^n | n ≥ 0}",
      "L = {strings over {a,b} with even number of a's}",
      "L = {strings over {a,b} ending with 'ab'}"
    ],
    "context": "Regular languages can be recognized by finite automata which have finite memory. The language {a^n b^n | n ≥ 0} requires counting and matching equal numbers of a's and b's, which needs infinite memory to store the count, making it non-regular by the pumping lemma.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Theory of Computation",
    "subtopic": "Finite Automata",
    "question": "What is the minimum number of states required in a DFA to accept strings over {0,1} that contain '101' as a substring?",
    "correct_answer": "4",
    "distractors": [
      "3",
      "5",
      "6"
    ],
    "context": "A DFA needs states to track progress toward finding '101': initial state, after reading '1', after reading '10', and accepting state after reading '101'. The fourth state is needed because we must remember partial matches and handle overlapping patterns correctly.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "subtopic": "Context-Free Grammars",
    "topic": "Theory of Computation",
    "question": "Which of the following is a characteristic property of Context-Free Languages?",
    "correct_answer": "Can be generated by Context-Free Grammars",
    "distractors": [
      "Can be recognized by Finite Automata",
      "Closed under intersection operation",
      "Can be recognized by Linear Bounded Automata only"
    ],
    "context": "Context-Free Languages are exactly those languages that can be generated by Context-Free Grammars and recognized by Pushdown Automata. They are not closed under intersection (unlike regular languages), and while they can be recognized by LBA, this is not their defining characteristic.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Theory of Computation",
    "subtopic": "Pushdown Automata",
    "question": "What additional component does a Pushdown Automaton have compared to a Finite Automaton?",
    "correct_answer": "Stack (LIFO memory)",
    "distractors": [
      "Queue (FIFO memory)",
      "Random access memory",
      "Multiple input tapes"
    ],
    "context": "A Pushdown Automaton extends a Finite Automaton by adding a stack, which provides Last-In-First-Out (LIFO) memory. This stack allows PDA to recognize context-free languages by storing and matching nested structures that finite automata cannot handle.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Theory of Computation",
    "subtopic": "Context-Free Grammar Parsing",
    "question": "What is the time complexity of the CYK (Cocke-Younger-Kasami) algorithm for parsing context-free grammars?",
    "correct_answer": "O(n³)",
    "distractors": [
      "O(n)",
      "O(n²)",
      "O(n log n)"
    ],
    "context": "The CYK algorithm uses dynamic programming with a triangular table of size O(n²) where each cell requires O(n) time to compute by checking all possible ways to split a substring. This results in O(n³) time complexity for parsing strings of length n.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Theory of Computation",
    "subtopic": "Turing Machines",
    "question": "Which of the following problems is undecidable for Turing Machines?",
    "correct_answer": "Halting Problem",
    "distractors": [
      "Membership problem for regular languages",
      "Equivalence of two DFAs",
      "Emptiness problem for context-free languages"
    ],
    "context": "The Halting Problem asks whether a given Turing Machine halts on a given input. This problem is undecidable, proven by contradiction using diagonalization. The other problems are decidable: regular language membership is decidable by DFA simulation, DFA equivalence by state minimization, and CFG emptiness by reachability analysis.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Theory of Computation",
    "subtopic": "Turing Machine Variants",
    "question": "Which statement about Turing Machine variants is correct?",
    "correct_answer": "Multi-tape Turing Machines have the same computational power as single-tape Turing Machines",
    "distractors": [
      "Non-deterministic Turing Machines are more powerful than deterministic ones",
      "Two-way infinite tape Turing Machines are more powerful than one-way infinite tape",
      "Multi-head Turing Machines can solve undecidable problems"
    ],
    "context": "All reasonable variants of Turing Machines (multi-tape, multi-head, two-way infinite tape, non-deterministic) have equivalent computational power. They can simulate each other with at most polynomial time overhead, defining the same class of decidable languages and maintaining the Church-Turing thesis.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Theory of Computation",
    "subtopic": "Finite Automata",
    "question": "Which class of languages can be recognized by a finite automaton?",
    "correct_answer": "Regular Languages",
    "distractors": ["Context-Free Languages", "Recursive Languages", "Context-Sensitive Languages"],
    "context": "Finite automata are theoretical machines that recognize regular languages, which can be described using regular expressions.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Theory of Computation",
    "subtopic": "Finite Automata",
    "question": "Which of the following operations is closed under regular languages?",
    "correct_answer": "Union",
    "distractors": ["Intersection with Context-Free Language", "Palindrome", "Subset Construction"],
    "context": "Regular languages are closed under operations like union, concatenation, and Kleene star.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Theory of Computation",
    "subtopic": "Pushdown Automata",
    "question": "Which class of languages is recognized by Pushdown Automata?",
    "correct_answer": "Context-Free Languages",
    "distractors": ["Regular Languages", "Context-Sensitive Languages", "Recursive Languages"],
    "context": "Pushdown automata use a stack to recognize context-free languages which cannot be accepted by finite automata.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Theory of Computation",
    "subtopic": "Context-Free Grammars",
    "question": "Which type of grammar generates languages that can be recognized by Pushdown Automata?",
    "correct_answer": "Context-Free Grammar",
    "distractors": ["Regular Grammar", "Unrestricted Grammar", "Context-Sensitive Grammar"],
    "context": "Context-Free Grammars (CFGs) are used to generate context-free languages that are accepted by pushdown automata.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Theory of Computation",
    "subtopic": "Turing Machines",
    "question": "Which model of computation is capable of simulating any algorithm?",
    "correct_answer": "Turing Machine",
    "distractors": ["Finite Automaton", "Pushdown Automaton", "Stack Machine"],
    "context": "Turing Machines are the most powerful models of computation and can simulate any algorithmic process.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Theory of Computation",
    "subtopic": "Turing Machines",
    "question": "What type of language is accepted by a Turing Machine that always halts?",
    "correct_answer": "Recursive Language",
    "distractors": ["Regular Language", "Recursively Enumerable Language", "Context-Free Language"],
    "context": "Turing Machines that always halt accept recursive languages, which are decidable.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Theory of Computation",
    "subtopic": "Turing Machines",
    "question": "Which class of languages can be recognized by a Turing Machine but not necessarily decided?",
    "correct_answer": "Recursively Enumerable Languages",
    "distractors": ["Regular Languages", "Recursive Languages", "Context-Free Languages"],
    "context": "Recursively enumerable languages are accepted by Turing Machines, but the machine may not halt for some inputs.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Theory of Computation",
    "subtopic": "Decidability",
    "question": "Which of the following problems is **decidable**?",
    "correct_answer": "Whether a DFA accepts a given string",
    "distractors": ["Whether a Turing machine halts on all inputs", "Whether a TM accepts all strings", "Whether a CFG generates all strings"],
    "context": "The problem of checking if a DFA accepts a string is decidable because it can be determined by simulating the DFA.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Theory of Computation",
    "subtopic": "Decidability",
    "question": "Which problem is an example of an undecidable problem?",
    "correct_answer": "Halting Problem for Turing Machines",
    "distractors": ["Equivalence of two DFAs", "Membership in a regular language", "Grammar ambiguity checking for regular grammar"],
    "context": "The halting problem is a classic example of an undecidable problem where it is not possible to determine if a TM halts on all inputs.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Theory of Computation",
    "subtopic": "Undecidability",
    "question": "Which of the following is **undecidable** even when given a context-free grammar?",
    "correct_answer": "Ambiguity of a context-free grammar",
    "distractors": ["Whether a string is generated by the grammar", "Whether the language is empty", "Whether the grammar generates finite language"],
    "context": "Determining ambiguity in a context-free grammar is undecidable due to the infinite ways a string might be parsed.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Theory of Computation",
    "subtopic": "P vs NP",
    "question": "Which of the following best describes problems in class P?",
    "correct_answer": "Problems solvable in polynomial time by a deterministic machine",
    "distractors": ["Problems solvable in exponential time", "Problems verifiable in linear time", "Problems solvable using Turing reductions"],
    "context": "Class P consists of decision problems solvable by deterministic Turing machines in polynomial time.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Theory of Computation",
    "subtopic": "NP-Completeness",
    "question": "What does it mean if a problem is NP-complete?",
    "correct_answer": "It is in NP and every problem in NP can be reduced to it in polynomial time",
    "distractors": ["It can be solved in constant time", "It is harder than all problems in P", "It is undecidable"],
    "context": "NP-complete problems are the hardest problems in NP, meaning if one is solved in P, all NP problems are solvable in P.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Theory of Computation",
    "subtopic": "P vs NP",
    "question": "Which of the following statements is currently true about the P vs NP problem?",
    "correct_answer": "It is unknown whether P = NP or not",
    "distractors": ["P is a subset of NP-complete", "NP problems are always harder than P", "NP-complete problems can be solved in linear time"],
    "context": "The question of whether every problem whose solution can be quickly verified can also be quickly solved remains unanswered.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Theory of Computation",
    "subtopic": "Decidability",
    "question": "Which of the following problems is decidable for context-free languages?",
    "correct_answer": "Emptiness problem",
    "distractors": [
      "Equivalence problem",
      "Intersection problem",
      "Universality problem"
    ],
    "context": "The emptiness problem for context-free languages asks whether a CFG generates any string. This is decidable by checking if the start symbol can derive any terminal string using reachability analysis. However, equivalence, intersection, and universality problems are undecidable for CFLs.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Theory of Computation",
    "subtopic": "Undecidability",
    "question": "Which technique is commonly used to prove that a problem is undecidable?",
    "correct_answer": "Reduction from a known undecidable problem",
    "distractors": [
      "Proof by contradiction only",
      "Mathematical induction",
      "Direct construction of algorithm"
    ],
    "context": "To prove undecidability, we typically use reduction: if problem A is known to be undecidable and we can reduce A to problem B, then B must also be undecidable. This technique shows that solving B would imply solving A, which is impossible since A is undecidable.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Theory of Computation",
    "subtopic": "Rice's Theorem",
    "question": "According to Rice's Theorem, which type of properties of Turing Machine languages are undecidable?",
    "correct_answer": "All non-trivial semantic properties",
    "distractors": [
      "All syntactic properties",
      "Only properties about machine structure",
      "Properties that depend on input alphabet size"
    ],
    "context": "Rice's Theorem states that every non-trivial semantic property of the language recognized by Turing machines is undecidable. A property is non-trivial if some TM languages have it and some don't. Semantic properties depend on the language itself, not the machine's structure.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Complexity Theory",
    "subtopic": "P vs NP",
    "question": "Which statement correctly describes the complexity class P?",
    "correct_answer": "Languages decidable by deterministic TM in polynomial time",
    "distractors": [
      "Languages decidable by non-deterministic TM in polynomial time",
      "Languages verifiable in polynomial time",
      "Languages decidable in exponential time"
    ],
    "context": "The complexity class P consists of decision problems that can be solved by a deterministic Turing machine in polynomial time. This includes problems where there exists an algorithm with time complexity O(n^k) for some constant k, representing efficiently solvable problems.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Complexity Theory",
    "subtopic": "NP-Complete Problems",
    "question": "Which property must a problem satisfy to be classified as NP-complete?",
    "correct_answer": "Must be in NP and every NP problem reduces to it",
    "distractors": [
      "Must be in P and solvable in polynomial time",
      "Must be harder than all problems in NP",
      "Must be undecidable"
    ],
    "context": "A problem is NP-complete if it belongs to NP (verifiable in polynomial time) and is NP-hard (every problem in NP can be reduced to it in polynomial time). This means it's among the hardest problems in NP, and solving any NP-complete problem efficiently would solve all NP problems efficiently.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Complexity Theory",
    "subtopic": "NP-Complete Examples",
    "question": "Which of the following is a well-known NP-complete problem?",
    "correct_answer": "3-SAT (3-Satisfiability)",
    "distractors": [
      "2-SAT (2-Satisfiability)",
      "Linear Programming",
      "Shortest Path Problem"
    ],
    "context": "3-SAT is NP-complete where each clause has exactly 3 literals. It was one of the first problems proven NP-complete using Cook's theorem. In contrast, 2-SAT is in P (solvable in polynomial time), Linear Programming is in P using interior point methods, and Shortest Path is in P using Dijkstra's algorithm.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Theory of Computation",
    "subtopic": "Decidability",
    "question": "Which problem for a Turing Machine is decidable?",
    "correct_answer": "Membership Problem for Regular Languages",
    "distractors": ["Halting Problem", "Emptiness Problem for Context-Free Languages", "Equivalence Problem for Context-Sensitive Languages"],
    "context": "The Membership Problem for Regular Languages is decidable because a Turing Machine can simulate a finite automaton to determine if a string belongs to the language in finite time.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Theory of Computation",
    "subtopic": "P and NP",
    "question": "Which complexity class contains problems that can be solved by a deterministic Turing Machine in polynomial time?",
    "correct_answer": "P",
    "distractors": ["NP", "NP-complete", "EXP"],
    "context": "Class P includes problems solvable in polynomial time by a deterministic Turing Machine, such as sorting or matrix multiplication, with time complexity bounded by a polynomial in input size.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Theory of Computation",
    "subtopic": "Undecidability",
    "question": "Which problem is known to be undecidable for general Turing Machines?",
    "correct_answer": "Halting Problem",
    "distractors": ["Membership Problem for Finite Automata", "Reachability in Graphs", "Sorting an Array"],
    "context": "The Halting Problem, determining whether a Turing Machine halts on a given input, is undecidable as no general algorithm can solve it for all inputs in finite time.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Theory of Computation",
    "subtopic": "NP-completeness",
    "question": "Which problem is a well-known example of an NP-complete problem involving finding a satisfying assignment for a Boolean formula?",
    "correct_answer": "SAT Problem",
    "distractors": ["Shortest Path Problem", "Minimum Spanning Tree", "Matrix Chain Multiplication"],
    "context": "The Satisfiability (SAT) Problem, determining if a Boolean formula has a satisfying assignment, is NP-complete, serving as a foundation for proving other problems are NP-complete.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Theory of Computation",
    "subtopic": "P and NP",
    "question": "Which statement is true about the relationship between P, NP, and NP-complete problems?",
    "correct_answer": "P ⊆ NP",
    "distractors": ["NP ⊆ P", "All NP problems are NP-complete", "P = NP-complete"],
    "context": "P is a subset of NP because any problem solvable in polynomial time by a deterministic Turing Machine can also be verified in polynomial time, but the reverse is not necessarily true.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Theory of Computation",
    "subtopic": "NP-completeness",
    "question": "Which property must a problem satisfy to be classified as NP-complete?",
    "correct_answer": "It is in NP and NP-hard",
    "distractors": ["It is in P and NP-hard", "It is in NP and decidable", "It is in P and undecidable"],
    "context": "An NP-complete problem must be in NP (verifiable in polynomial time) and NP-hard (at least as hard as the hardest problems in NP), making it a candidate for polynomial-time reductions.",
    "difficulty": "advanced",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Theory of Computation",
    "subtopic": "Decidability and Undecidability",
    "question": "A software company is developing a static analysis tool to find all possible runtime errors (e.g., division by zero, null pointer dereferences) in any given arbitrary C++ program. Based on the theory of computation, what fundamental limitation does this task face?",
    "correct_answer": "It is an undecidable problem, meaning no algorithm can reliably determine all runtime errors for all programs.",
    "distractors": [
      "It is a decidable problem, solvable with an efficient algorithm.",
      "It is an NP-complete problem, requiring exponential time to find a solution.",
      "It is a P-class problem, solvable in polynomial time."
    ],
    "context": "The problem of determining whether an arbitrary program will exhibit a specific runtime error (like the Halting Problem, but for other properties) is generally undecidable. This means no single algorithm can always correctly predict all such errors for all possible programs, a limitation inherent to the nature of computation as modeled by Turing Machines.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Theory of Computation",
    "subtopic": "Decidability and Undecidability",
    "question": "In the context of formal languages, which of the following properties of regular languages is known to be decidable?",
    "correct_answer": "The emptiness problem (Is the language empty?).",
    "distractors": [
      "The equivalence problem for context-free grammars.",
      "The ambiguity problem for context-free grammars.",
      "The Post Correspondence Problem."
    ],
    "context": "For regular languages, many problems are decidable. For instance, determining if a regular language is empty can be done by checking if any accepting state is reachable from the start state in its corresponding Finite Automaton. In contrast, the equivalence and ambiguity problems for Context-Free Grammars, and the Post Correspondence Problem, are known to be undecidable.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Theory of Computation",
    "subtopic": "P, NP, NP-completeness",
    "question": "A research team is attempting to find a polynomial-time algorithm for the Boolean Satisfiability Problem (SAT). If they succeed, what widely accepted implication would this have for the relationship between complexity classes P and NP?",
    "correct_answer": "P = NP, meaning all NP problems would have polynomial-time solutions.",
    "distractors": [
      "P ≠ NP, reinforcing the current belief.",
      "NP-complete problems would become undecidable.",
      "Only NP-hard problems would remain intractable."
    ],
    "context": "SAT is a foundational NP-complete problem. If a polynomial-time algorithm is found for any NP-complete problem (like SAT), it would imply that every problem in NP can be solved in polynomial time, thus proving that P = NP. This is one of the most significant unsolved problems in computer science.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Theory of Computation",
    "subtopic": "P, NP, NP-completeness",
    "question": "Which of the following problems is a classic example of an NP-complete problem, meaning it is in NP and is also NP-hard?",
    "correct_answer": "The Traveling Salesperson Problem (TSP)",
    "distractors": [
      "Sorting an array of numbers.",
      "Searching for an element in a sorted list.",
      "Finding the shortest path in an unweighted graph (e.g., using BFS)."
    ],
    "context": "NP-complete problems are a set of problems that are both in NP (solutions can be verified in polynomial time) and are NP-hard (any problem in NP can be reduced to them in polynomial time). The Traveling Salesperson Problem, Vertex Cover, 3-SAT, and Subset Sum are well-known examples of NP-complete problems.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Theory of Computation",
    "subtopic": "Decidability and Undecidability",
    "question": "What is the crucial difference between a decidable problem and an undecidable problem in the context of computation?",
    "correct_answer": "A decidable problem has an algorithm that always halts and provides a correct 'yes' or 'no' answer, while an undecidable problem does not.",
    "distractors": [
      "Decidable problems can be solved in polynomial time, while undecidable problems cannot.",
      "Decidable problems are only solved by Turing machines, while undecidable problems are not.",
      "Decidable problems have practical applications, while undecidable problems are purely theoretical."
    ],
    "context": "The fundamental definition of decidability in theoretical computer science is whether an algorithm (a Turing machine) exists that can determine, for any given input, whether that input belongs to the language (or if the problem has a 'yes' or 'no' answer) and always halts. Undecidable problems lack such a universal algorithm.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Theory of Computation",
    "subtopic": "P, NP, NP-completeness",
    "question": "For a software engineer working on optimization problems, understanding the class P is vital. What defines a problem as belonging to the complexity class P?",
    "correct_answer": "It can be solved by a deterministic Turing machine in polynomial time.",
    "distractors": [
      "Its solution can be verified in polynomial time by a non-deterministic Turing machine.",
      "It can only be solved by a non-deterministic Turing machine in polynomial time.",
      "It requires exponential time to find an optimal solution."
    ],
    "context": "The complexity class P consists of decision problems that can be solved by a deterministic Turing machine in polynomial time with respect to the input size. These are problems considered 'tractable' or 'efficiently solvable' in practice.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Compiler Design",
    "subtopic": "Lexical Analysis",
    "question": "Which phase of a compiler is responsible for removing white spaces and comments from the source code?",
    "correct_answer": "Lexical Analyzer",
    "distractors": ["Syntax Analyzer", "Semantic Analyzer", "Code Generator"],
    "context": "Lexical analysis is the first phase of a compiler where white spaces and comments are removed and tokens are generated.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Compiler Design",
    "subtopic": "Lexical Analysis",
    "question": "What is the output of the lexical analysis phase in a compiler?",
    "correct_answer": "Sequence of tokens",
    "distractors": ["Parse tree", "Intermediate code", "Symbol table"],
    "context": "Lexical analysis converts the input source code into a stream of tokens which are then fed into the parser.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Compiler Design",
    "subtopic": "Parsing",
    "question": "Which of the following parsers uses a **bottom-up** approach?",
    "correct_answer": "LR Parser",
    "distractors": ["LL Parser", "Recursive Descent Parser", "Predictive Parser"],
    "context": "LR parsers are bottom-up parsers which construct the parse tree from leaves to the root.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Compiler Design",
    "subtopic": "Parsing",
    "question": "Which parser uses **leftmost derivation in reverse**?",
    "correct_answer": "LR Parser",
    "distractors": ["LL Parser", "Top-Down Parser", "SLR Parser"],
    "context": "An LR parser performs a bottom-up parse which corresponds to a leftmost derivation in reverse.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Compiler Design",
    "subtopic": "Parsing",
    "question": "Which parser is **predictive** and does not require backtracking?",
    "correct_answer": "LL(1) Parser",
    "distractors": ["LR(0) Parser", "LALR Parser", "SLR Parser"],
    "context": "LL(1) parsers are top-down parsers that can predict the parsing action with one lookahead symbol and no backtracking.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Compiler Design",
    "subtopic": "Syntax-Directed Translation",
    "question": "In syntax-directed translation, what is associated with grammar symbols to store intermediate information?",
    "correct_answer": "Attributes",
    "distractors": ["Tokens", "Derivations", "Symbols"],
    "context": "Attributes are associated with grammar symbols to evaluate semantic rules in syntax-directed translation.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Compiler Design",
    "subtopic": "Syntax-Directed Translation",
    "question": "What defines how the values of attributes are computed in syntax-directed definitions?",
    "correct_answer": "Semantic Rules",
    "distractors": ["Productions", "Parse Tables", "Lookahead Sets"],
    "context": "Semantic rules define how attribute values are computed based on the attributes of related grammar symbols.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Compiler Design",
    "subtopic": "Lexical Analysis",
    "question": "What is the primary function of a lexical analyzer in a compiler?",
    "correct_answer": "Convert source code into tokens",
    "distractors": [
      "Check syntax correctness of the program",
      "Generate intermediate code",
      "Perform semantic analysis"
    ],
    "context": "The lexical analyzer (scanner) is the first phase of compilation that reads the source program character by character and groups them into meaningful sequences called tokens (like keywords, identifiers, operators, literals). It removes whitespace and comments, preparing input for the syntax analyzer.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Compiler Design",
    "subtopic": "Regular Expressions",
    "question": "Which tool is commonly used to automatically generate lexical analyzers from regular expressions?",
    "correct_answer": "LEX/FLEX",
    "distractors": [
      "YACC/BISON",
      "ANTLR",
      "LALR(1)"
    ],
    "context": "LEX (and its GNU version FLEX) is a lexical analyzer generator that takes regular expressions as input and produces C code for a lexical analyzer. It automates the process of converting regular expression patterns into finite automata for token recognition.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Compiler Design",
    "subtopic": "LL Parsing",
    "question": "What condition must a grammar satisfy to be parsed by an LL(1) parser?",
    "correct_answer": "No left recursion and no left factoring",
    "distractors": [
      "Must be right recursive only",
      "Must have shift-reduce conflicts",
      "Must be ambiguous"
    ],
    "context": "LL(1) parsers require grammars without left recursion (which causes infinite loops in top-down parsing) and without left factoring (which creates ambiguity in choosing production rules). The grammar must also satisfy the LL(1) condition where FIRST and FOLLOW sets don't overlap inappropriately.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Compiler Design",
    "subtopic": "LR Parsing",
    "question": "Which type of LR parser can handle the largest class of context-free grammars?",
    "correct_answer": "Canonical LR (CLR)",
    "distractors": [
      "Simple LR (SLR)",
      "Look-Ahead LR (LALR)",
      "LL(1)"
    ],
    "context": "Among LR parsers, CLR (Canonical LR) can handle the largest class of grammars, followed by LALR, then SLR. CLR uses the most precise lookahead information by maintaining separate lookahead sets for each item in different states, avoiding conflicts that might occur in LALR and SLR parsers.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Compiler Design",
    "subtopic": "Shift-Reduce Parsing",
    "question": "In LR parsing, what does a 'reduce' action represent?",
    "correct_answer": "Replace handle on stack top with non-terminal",
    "distractors": [
      "Shift input symbol onto stack",
      "Accept the input string",
      "Report syntax error"
    ],
    "context": "In shift-reduce parsing, a reduce action occurs when the top of the stack contains a handle (right-hand side of a production). The parser reduces by popping the handle from the stack and pushing the corresponding left-hand side non-terminal, effectively applying a production rule in reverse.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Compiler Design",
    "subtopic": "Syntax-Directed Translation",
    "question": "In syntax-directed translation, when are semantic actions executed in an S-attributed grammar?",
    "correct_answer": "During bottom-up parsing after reduction",
    "distractors": [
      "During top-down parsing before expansion",
      "Before parsing begins",
      "After complete parse tree construction"
    ],
    "context": "S-attributed grammars have semantic attributes that depend only on attributes of children nodes. In bottom-up parsing, semantic actions are executed when a reduction occurs, as all child attributes are already computed, allowing parent attributes to be calculated immediately.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Compiler Design",
    "subtopic": "Attribute Grammars",
    "question": "What is the main difference between synthesized and inherited attributes in attribute grammars?",
    "correct_answer": "Synthesized flow from children to parent, inherited flow from parent to children",
    "distractors": [
      "Synthesized are computed first, inherited are computed last",
      "Synthesized handle errors, inherited handle semantics",
      "Synthesized are for terminals, inherited are for non-terminals"
    ],
    "context": "In attribute grammars, synthesized attributes have values computed from attributes of child nodes and flow upward in the parse tree, while inherited attributes receive values from parent or sibling nodes and flow downward. This distinction determines the evaluation order and parsing strategy compatibility.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Compiler Design",
    "subtopic": "Lexical Analysis",
    "question": "Which component of a compiler is responsible for breaking the source code into tokens?",
    "correct_answer": "Lexical Analyzer",
    "distractors": ["Parser", "Code Generator", "Semantic Analyzer"],
    "context": "The Lexical Analyzer, or scanner, processes the source code character by character to produce a sequence of tokens, such as keywords, identifiers, and operators, for the parser to use.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Compiler Design",
    "subtopic": "Lexical Analysis",
    "question": "Which tool is commonly used to generate a lexical analyzer from a set of regular expressions?",
    "correct_answer": "Lex",
    "distractors": ["Yacc", "Bison", "ANTLR"],
    "context": "Lex is a tool that generates a lexical analyzer by converting regular expressions into a finite automaton, producing C code that tokenizes input for a compiler.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Compiler Design",
    "subtopic": "Parsing",
    "question": "Which parsing technique constructs a parse tree top-down and requires a left-factored, unambiguous grammar?",
    "correct_answer": "LL Parsing",
    "distractors": ["LR Parsing", "SLR Parsing", "LALR Parsing"],
    "context": "LL Parsing builds the parse tree top-down, using a left-to-right scan and leftmost derivation, requiring the grammar to be left-factored and unambiguous to avoid conflicts.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Compiler Design",
    "subtopic": "Parsing",
    "question": "Which parsing technique is more powerful and can handle a larger class of grammars by constructing the parse tree bottom-up?",
    "correct_answer": "LR Parsing",
    "distractors": ["LL Parsing", "Recursive Descent Parsing", "Operator Precedence Parsing"],
    "context": "LR Parsing constructs the parse tree bottom-up using a left-to-right scan and rightmost derivation, handling a broader class of grammars, including some ambiguous ones, with the help of a parsing table.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Compiler Design",
    "subtopic": "Syntax-Directed Translation",
    "question": "Which attribute in Syntax-Directed Translation is computed using information from a node's children in the parse tree?",
    "correct_answer": "Synthesized Attribute",
    "distractors": ["Inherited Attribute", "Terminal Attribute", "Semantic Attribute"],
    "context": "Synthesized Attributes are computed bottom-up in a parse tree, using values from a node's children, such as calculating the value of an expression from its sub-expressions.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Compiler Design",
    "subtopic": "Parsing",
    "question": "Which type of LR parser uses a lookahead of one symbol and a simplified parsing table to handle a subset of LR(0) grammars?",
    "correct_answer": "SLR Parser",
    "distractors": ["LALR Parser", "CLR Parser", "LL(1) Parser"],
    "context": "An SLR (Simple LR) Parser uses a single lookahead symbol and constructs a simplified parsing table based on follow sets, handling a subset of LR(0) grammars efficiently but with less power than CLR or LALR parsers.",
    "difficulty": "advanced",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Compiler Design",
    "subtopic": "Syntax-Directed Translation",
    "question": "Which type of Syntax-Directed Translation evaluates attributes during a single depth-first traversal of the parse tree?",
    "correct_answer": "S-attributed Definition",
    "distractors": ["L-attributed Definition", "E-attributed Definition", "T-attributed Definition"],
    "context": "An S-attributed Definition uses only synthesized attributes, allowing evaluation in a single bottom-up, depth-first traversal of the parse tree, simplifying attribute computation in compilers.",
    "difficulty": "advanced",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Compiler Design",
    "subtopic": "Lexical Analysis",
    "question": "During the compilation process, what is the primary role of the lexical analyzer, and which theoretical concept is typically used to define the patterns it recognizes?",
    "correct_answer": "To read source code characters and group them into tokens; Regular Expressions.",
    "distractors": [
      "To check the grammatical structure of the program; Context-Free Grammars.",
      "To generate intermediate code; Syntax Trees.",
      "To optimize the machine code; Control Flow Graphs."
    ],
    "context": "Lexical analysis, also known as scanning or tokenization, is the first phase of a compiler. Its main job is to read the stream of characters in the source code and group them into meaningful units called tokens (e.g., keywords, identifiers, operators, literals). These token patterns are typically defined using regular expressions, and finite automata are used to recognize them.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Compiler Design",
    "subtopic": "Lexical Analysis",
    "question": "A compiler's lexical analyzer encounters a string like 'if_else_statement'. How would it typically process this sequence of characters if 'if' and 'else' are keywords, but 'if_else_statement' is intended as a single identifier?",
    "correct_answer": "It would recognize 'if_else_statement' as a single identifier token.",
    "distractors": [
      "It would recognize 'if' as a keyword, then 'else' as a keyword, and then 'statement' as an identifier.",
      "It would report a lexical error due to ambiguity.",
      "It would require backtracking to correctly identify the tokens."
    ],
    "context": "Lexical analyzers typically follow the 'maximal munch' rule, meaning they try to form the longest possible valid token from the input stream. In this case, if 'if_else_statement' matches the pattern for an identifier, it will be taken as a single token, rather than breaking it down into smaller keywords, assuming identifier rules allow underscores.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Compiler Design",
    "subtopic": "Parsing (LL, LR parsers)",
    "question": "In the context of parsing, which type of parser builds a parse tree from the top (start symbol) down to the input string by applying grammar rules, and typically handles left recursion by transforming the grammar?",
    "correct_answer": "LL Parser (Top-Down Parser)",
    "distractors": [
      "LR Parser (Bottom-Up Parser)",
      "Operator Precedence Parser",
      "Shift-Reduce Parser"
    ],
    "context": "LL parsers are a type of top-down parser that try to derive the input string from the start symbol by applying grammar rules. They read the input from left to right and produce a leftmost derivation. A key characteristic is their inability to handle left recursion directly, requiring grammar transformation to remove it.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Compiler Design",
    "subtopic": "Parsing (LL, LR parsers)",
    "question": "A new programming language needs a parser that can handle a wide range of grammars, including ambiguous ones (though typically resolved by rules), and is known for its power and ability to detect errors early. Which family of parsers is generally preferred for this purpose in practical compilers?",
    "correct_answer": "LR Parsers (e.g., SLR, LALR, Canonical LR)",
    "distractors": [
      "LL Parsers",
      "Recursive Descent Parsers",
      "Precedence Parsers"
    ],
    "context": "LR parsers are a powerful class of bottom-up parsers that are widely used in practical compilers. They are capable of parsing a large class of grammars, including most programming language grammars, and are known for their efficiency and early error detection. Different variants like SLR, LALR, and Canonical LR offer different levels of power and complexity.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Compiler Design",
    "subtopic": "Syntax-Directed Translation",
    "question": "After parsing, a compiler needs to perform semantic analysis and generate intermediate code. Which technique integrates semantic actions with the parsing process to produce output based on the grammar's syntax, and often involves attribute grammars?",
    "correct_answer": "Syntax-Directed Translation (SDT)",
    "distractors": [
      "Lexical Analysis",
      "Code Optimization",
      "Runtime Environment Setup"
    ],
    "context": "Syntax-Directed Translation (SDT) is a method of generating intermediate code or performing semantic analysis by associating semantic rules (actions) with grammar productions. When a production is recognized by the parser, its associated semantic actions are executed. Attribute grammars are a formal way to describe SDTs, using synthesized and inherited attributes to pass information through the parse tree.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Compiler Design",
    "subtopic": "Syntax-Directed Translation",
    "question": "Consider a Syntax-Directed Definition (SDD) for evaluating arithmetic expressions. When computing the value of an expression like '3 + 5', where would the semantic action to perform the addition typically be placed in the grammar production to ensure correct evaluation during a bottom-up parse?",
    "correct_answer": "After recognizing both operands and the '+' operator, at the end of the production rule for addition.",
    "distractors": [
      "Before recognizing any part of the expression.",
      "Immediately after recognizing the first operand.",
      "At the very beginning of the entire parsing process."
    ],
    "context": "In Syntax-Directed Translation, especially with bottom-up parsing (like LR parsers), semantic actions are usually placed at the end of the right-hand side of a grammar production. This ensures that all necessary attributes (like the values of operands) have been computed by their respective sub-productions before the action requiring them (e.g., addition) is executed.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Compiler Design",
    "subtopic": "Parsing (LL, LR parsers)",
    "question": "What is the primary function of the 'lookahead' symbol in both LL and LR parsing techniques?",
    "correct_answer": "To decide which grammar production to use for expansion or reduction.",
    "distractors": [
      "To store previously processed tokens.",
      "To perform semantic analysis.",
      "To generate machine code directly."
    ],
    "context": "The lookahead symbol (or lookahead tokens) is a crucial concept in predictive parsing (LL) and shift-reduce parsing (LR). It refers to the next input symbol(s) that the parser examines without consuming, to make decisions about which grammar production to apply (in LL) or whether to shift or reduce (in LR), thus guiding the parsing process.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Compiler Design",
    "subtopic": "Intermediate Code Generation",
    "question": "Which of the following is commonly used as intermediate code in compilers?",
    "correct_answer": "Three Address Code",
    "distractors": ["Assembly Code", "Machine Code", "Source Code"],
    "context": "Three Address Code (TAC) is widely used in intermediate code generation to simplify analysis and optimization.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Compiler Design",
    "subtopic": "Intermediate Code Generation",
    "question": "What is the primary purpose of generating intermediate code in a compiler?",
    "correct_answer": "To make optimization and translation easier across platforms",
    "distractors": ["To directly produce object code", "To execute source code", "To compress the code size"],
    "context": "Intermediate code acts as an abstraction layer to enhance portability and enable easier optimization before final code generation.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Compiler Design",
    "subtopic": "Code Optimization",
    "question": "Which optimization technique eliminates code that does not affect the program's output?",
    "correct_answer": "Dead Code Elimination",
    "distractors": ["Constant Folding", "Loop Unrolling", "Strength Reduction"],
    "context": "Dead code elimination removes parts of code that never influence program results, enhancing performance.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Compiler Design",
    "subtopic": "Code Optimization",
    "question": "What kind of optimization is 'loop unrolling' categorized as?",
    "correct_answer": "Loop Optimization",
    "distractors": ["Peephole Optimization", "Constant Propagation", "Common Subexpression Elimination"],
    "context": "Loop unrolling improves performance by reducing loop overhead and increasing parallelism within loops.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Compiler Design",
    "subtopic": "Code Optimization",
    "question": "Which optimization replaces expensive operations with cheaper ones?",
    "correct_answer": "Strength Reduction",
    "distractors": ["Dead Code Elimination", "Inline Expansion", "Loop Fusion"],
    "context": "Strength reduction replaces costly operations (like multiplication) with more efficient ones (like addition or shifts).",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Compiler Design",
    "subtopic": "Runtime Environment",
    "question": "What data structure is commonly used to manage function calls and returns in the runtime environment?",
    "correct_answer": "Call Stack",
    "distractors": ["Symbol Table", "Activation Record", "Heap"],
    "context": "The call stack keeps track of active subroutines and their local variables during program execution.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Compiler Design",
    "subtopic": "Runtime Environment",
    "question": "In a typical runtime environment, what does an activation record store?",
    "correct_answer": "Local variables, return address, and parameters",
    "distractors": ["Only return address", "Only function name", "Only global variables"],
    "context": "An activation record contains necessary information for a function call, including parameters, local variables, and return address.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Intermediate Code Generation",
    "subtopic": "Three Address Code",
    "question": "Which intermediate representation uses at most three addresses per instruction?",
    "correct_answer": "Three Address Code",
    "distractors": [
      "Quadruples",
      "Parse Tree",
      "Abstract Syntax Tree"
    ],
    "context": "Three Address Code is an intermediate representation where each instruction has at most one operator and three addresses (two operands and one result).",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Intermediate Code Generation",
    "subtopic": "Syntax Directed Translation",
    "question": "In syntax directed translation, what are semantic actions attached to?",
    "correct_answer": "Grammar production rules",
    "distractors": [
      "Lexical tokens only",
      "Symbol table entries",
      "Machine instructions"
    ],
    "context": "Syntax directed translation attaches semantic actions to grammar production rules to generate intermediate code during parsing.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Code Optimization",
    "subtopic": "Loop Optimization",
    "question": "Which optimization technique moves loop-invariant code outside the loop?",
    "correct_answer": "Code Motion",
    "distractors": [
      "Loop Unrolling",
      "Strength Reduction",
      "Dead Code Elimination"
    ],
    "context": "Code Motion optimization identifies computations that produce the same result on every iteration and moves them outside the loop to reduce redundant calculations.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "subtopic": "Peephole Optimization",
    "question": "What is the primary characteristic of peephole optimization?",
    "correct_answer": "Examines small window of instructions",
    "distractors": [
      "Analyzes entire program flow",
      "Optimizes memory allocation",
      "Reorganizes data structures"
    ],
    "context": "Peephole optimization examines a small window (peephole) of instructions and replaces instruction sequences with faster or shorter sequences.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Code Optimization",
    "subtopic": "Data Flow Analysis",
    "question": "Which data flow analysis technique is used to eliminate dead code?",
    "correct_answer": "Live Variable Analysis",
    "distractors": [
      "Reaching Definitions",
      "Available Expressions",
      "Dominance Analysis"
    ],
    "context": "Live Variable Analysis determines which variables are live (may be used before being redefined) at each program point, helping identify and eliminate dead code.",
    "difficulty": "advanced",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Runtime Environment",
    "subtopic": "Activation Records",
    "question": "What is stored in the activation record of a function call?",
    "correct_answer": "Local variables and return address",
    "distractors": [
      "Global variables only",
      "Machine code instructions",
      "Compiler directives"
    ],
    "context": "Activation records store information needed for function execution including local variables, parameters, return address, and control links.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Runtime Environment",
    "subtopic": "Memory Management",
    "question": "Which memory allocation strategy is used for dynamic memory allocation at runtime?",
    "correct_answer": "Heap allocation",
    "distractors": [
      "Stack allocation",
      "Static allocation",
      "Register allocation"
    ],
    "context": "Heap allocation manages dynamic memory allocation at runtime, allowing programs to allocate and deallocate memory blocks of varying sizes during execution.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Compiler Design",
    "subtopic": "Intermediate Code Generation",
    "question": "Which form of intermediate code represents a program as a sequence of three-address instructions?",
    "correct_answer": "Three-Address Code",
    "distractors": ["Abstract Syntax Tree", "Postfix Notation", "Control Flow Graph"],
    "context": "Three-Address Code is an intermediate representation where each instruction has at most three operands, used to simplify code generation and optimization in compilers.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Compiler Design",
    "subtopic": "Intermediate Code Generation",
    "question": "Which intermediate representation is commonly used to capture the hierarchical structure of a program during compilation?",
    "correct_answer": "Abstract Syntax Tree",
    "distractors": ["Three-Address Code", "Static Single Assignment", "Quadruples"],
    "context": "An Abstract Syntax Tree (AST) represents the syntactic structure of source code in a tree form, capturing the hierarchy of operations and facilitating semantic analysis and code generation.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Compiler Design",
    "subtopic": "Code Optimization",
    "question": "Which code optimization technique eliminates redundant computations by storing and reusing previously computed values?",
    "correct_answer": "Common Subexpression Elimination",
    "distractors": ["Loop Unrolling", "Constant Folding", "Dead Code Elimination"],
    "context": "Common Subexpression Elimination identifies and removes redundant computations in a program by reusing values already computed, reducing execution time without changing program behavior.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Compiler Design",
    "subtopic": "Code Optimization",
    "question": "Which optimization technique evaluates constant expressions at compile time to reduce runtime computation?",
    "correct_answer": "Constant Folding",
    "distractors": ["Loop Invariant Code Motion", "Strength Reduction", "Inline Expansion"],
    "context": "Constant Folding evaluates expressions with constant values during compilation, replacing them with their results to reduce runtime overhead, such as replacing 2 + 3 with 5.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Compiler Design",
    "subtopic": "Runtime Environment",
    "question": "Which data structure is used in the runtime environment to manage function calls and their local variables?",
    "correct_answer": "Activation Record",
    "distractors": ["Symbol Table", "Heap", "Parse Tree"],
    "context": "An Activation Record, stored on the runtime stack, contains information like local variables, parameters, and return addresses for each function call, enabling proper function execution and return.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Compiler Design",
    "subtopic": "Code Optimization",
    "question": "Which optimization replaces expensive operations, such as multiplication, with equivalent cheaper operations, like addition, in loops?",
    "correct_answer": "Strength Reduction",
    "distractors": ["Loop Fusion", "Constant Propagation", "Dead Code Elimination"],
    "context": "Strength Reduction optimizes loops by replacing costly operations (e.g., multiplication) with less expensive ones (e.g., addition), such as replacing i * 2 with i + i, improving performance.",
    "difficulty": "advanced",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Compiler Design",
    "subtopic": "Runtime Environment",
    "question": "Which memory allocation strategy in the runtime environment allows dynamic allocation of objects whose size is determined at runtime?",
    "correct_answer": "Heap Allocation",
    "distractors": ["Stack Allocation", "Static Allocation", "Register Allocation"],
    "context": "Heap Allocation manages dynamic memory for objects like arrays or structures whose size is determined at runtime, allowing flexible memory use but requiring explicit deallocation to avoid leaks.",
    "difficulty": "advanced",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Compiler Design",
    "subtopic": "Intermediate Code Generation",
    "question": "After the parsing phase, a compiler typically generates an intermediate representation of the source code. Which form of intermediate code is a common choice that closely resembles machine code and is suitable for subsequent optimization passes, often using 'three-address instructions'?",
    "correct_answer": "Three-Address Code",
    "distractors": [
      "Abstract Syntax Tree (AST)",
      "Directed Acyclic Graph (DAG)",
      "Reverse Polish Notation (RPN)"
    ],
    "context": "Three-address code is a popular form of intermediate code where each instruction involves at most three operands (e.g., `x = y op z`). It's a linear, low-level representation that simplifies subsequent code optimization and code generation phases, making it easier to transform into machine-specific instructions.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Compiler Design",
    "subtopic": "Intermediate Code Generation",
    "question": "During the intermediate code generation phase of a compiler, for an expression like `(a + b) * (c - d)`, which representation explicitly shows the hierarchical structure and common subexpressions, making it suitable for certain optimizations before linear code generation?",
    "correct_answer": "Directed Acyclic Graph (DAG)",
    "distractors": [
      "Three-Address Code",
      "Postfix Notation",
      "Control Flow Graph (CFG)"
    ],
    "context": "A Directed Acyclic Graph (DAG) is a graphical representation of expressions that clearly shows the common subexpressions and the dependencies between operations. It can be constructed from an Abstract Syntax Tree (AST) and is useful for optimizations like common subexpression elimination before generating linear intermediate code like three-address code.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Compiler Design",
    "subtopic": "Code Optimization",
    "question": "A software team is trying to improve the runtime performance of a critical loop in their application. A simple optimization involves replacing `x = x + 0` or `y = y * 1` with just `x` or `y`. What type of code optimization does this fall under?",
    "correct_answer": "Constant Folding/Propagation or Algebraic Simplification",
    "distractors": [
      "Loop Invariant Code Motion",
      "Strength Reduction",
      "Dead Code Elimination"
    ],
    "context": "Optimizations like `x = x + 0` becoming `x` and `y = y * 1` becoming `y` are forms of algebraic simplification or constant folding/propagation. These are local optimizations that simplify expressions based on mathematical identities, leading to more efficient code.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Compiler Design",
    "subtopic": "Code Optimization",
    "question": "In a loop, an expression `result = A[i] + B[j]` is computed, where `A` and `B` are arrays, and `i` and `j` are loop-invariant (do not change within the loop). What type of loop optimization aims to move such computations outside the loop to reduce redundant calculations?",
    "correct_answer": "Loop Invariant Code Motion",
    "distractors": [
      "Peephole Optimization",
      "Dead Code Elimination",
      "Register Allocation"
    ],
    "context": "Loop invariant code motion is an optimization technique that identifies computations whose results do not change within a loop (loop invariants) and moves them outside the loop. This reduces the number of times these computations are performed, thereby improving the overall execution speed of the program.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Compiler Design",
    "subtopic": "Runtime Environment",
    "question": "When a function is called in a high-level programming language, what data structure is primarily used by the runtime system to manage local variables, parameters, and return addresses for recursive function calls?",
    "correct_answer": "Activation Record (or Stack Frame) on the runtime stack",
    "distractors": [
      "Heap",
      "Static Data Area",
      "Code Segment"
    ],
    "context": "The runtime stack is a crucial component of a program's runtime environment, particularly for managing function calls. Each time a function is called, an 'activation record' (also known as a stack frame) is pushed onto the stack. This record contains information pertinent to that function's execution, including local variables, parameters, and the return address, enabling proper function execution and recursion.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Compiler Design",
    "subtopic": "Runtime Environment",
    "question": "What is the primary purpose of the 'heap' memory area in a typical program's runtime environment?",
    "correct_answer": "To allocate memory for data structures whose size is not known at compile time or whose lifetime extends beyond a single function call.",
    "distractors": [
      "To store executable machine code instructions.",
      "To manage local variables and function call information.",
      "To store global and static variables with a fixed lifetime."
    ],
    "context": "The heap is a dynamic memory allocation area used for data whose size is not known at compile time or whose lifetime is not tied to the scope of a function (e.g., dynamically allocated objects, linked lists, trees). Memory on the heap is explicitly requested by the program (e.g., using `malloc` or `new`) and must be explicitly deallocated to prevent memory leaks.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Compiler Design",
    "subtopic": "Code Optimization",
    "question": "In a performance-critical application, a compiler might replace a multiplication operation (e.g., `x * 8`) with a series of left bit shifts (e.g., `x << 3`). What optimization technique is this an example of?",
    "correct_answer": "Strength Reduction",
    "distractors": [
      "Common Subexpression Elimination",
      "Dead Code Elimination",
      "Loop Unrolling"
    ],
    "context": "Strength reduction is a code optimization technique that replaces computationally 'expensive' operations with equivalent but 'cheaper' operations. For example, replacing multiplication by a power of two with bit shifts or replacing multiplication within a loop with additions, which can be significantly faster on many architectures.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Operating Systems",
    "subtopic": "Processes and Threads",
    "question": "Which of the following best differentiates a process from a thread?",
    "correct_answer": "A process has its own memory space, whereas threads share memory within the process",
    "distractors": ["Threads have their own memory, processes share memory", "Processes execute faster than threads", "Threads can run without processes"],
    "context": "A process is an independent unit with its own memory, while threads within a process share the same memory space.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Operating Systems",
    "subtopic": "Processes and Threads",
    "question": "Why are threads considered more efficient than processes?",
    "correct_answer": "Threads share memory and resources, reducing overhead",
    "distractors": ["Threads run on different processors", "Threads execute only kernel code", "Threads do not require a CPU"],
    "context": "Threads are lightweight because they share memory and resources of the parent process, making context switching faster and less expensive.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Operating Systems",
    "subtopic": "CPU Scheduling",
    "question": "Which CPU scheduling algorithm may lead to starvation?",
    "correct_answer": "Shortest Job First (SJF)",
    "distractors": ["Round Robin", "First Come First Serve", "Multilevel Queue"],
    "context": "SJF can cause starvation for longer processes if shorter ones keep arriving.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Operating Systems",
    "subtopic": "CPU Scheduling",
    "question": "In Round Robin scheduling, what determines the responsiveness of a process?",
    "correct_answer": "Time Quantum",
    "distractors": ["Priority", "Process ID", "CPU Burst Time"],
    "context": "In Round Robin, a small time quantum improves responsiveness but increases context switching overhead.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Operating Systems",
    "subtopic": "Synchronization & Deadlocks",
    "question": "Which condition is necessary for a deadlock to occur?",
    "correct_answer": "Mutual Exclusion",
    "distractors": ["Interrupts", "Context Switching", "Scheduling"],
    "context": "Deadlock occurs when mutual exclusion, hold and wait, no preemption, and circular wait conditions are present.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Operating Systems",
    "subtopic": "Synchronization & Deadlocks",
    "question": "What is the purpose of a semaphore in process synchronization?",
    "correct_answer": "To control access to shared resources",
    "distractors": ["To manage memory paging", "To schedule threads", "To allocate CPU time"],
    "context": "Semaphores are synchronization tools used to prevent race conditions by controlling access to shared resources.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Operating Systems",
    "subtopic": "Synchronization & Deadlocks",
    "question": "Which of the following is a deadlock avoidance algorithm?",
    "correct_answer": "Banker's Algorithm",
    "distractors": ["Shortest Remaining Time First", "FCFS Scheduling", "Priority Scheduling"],
    "context": "Banker’s algorithm avoids deadlock by simulating resource allocation and checking for safe states.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Operating Systems",
    "subtopic": "Processes and Threads",
    "question": "Which entity in an operating system represents an independent unit of execution with its own memory space?",
    "correct_answer": "Process",
    "distractors": ["Thread", "Kernel", "Interrupt"],
    "context": "A process is an independent unit of execution in an operating system, with its own memory space, program counter, and system resources, unlike threads which share memory within a process.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Operating Systems",
    "subtopic": "Processes and Threads",
    "question": "Which component of a process shares the same address space but has its own stack and registers?",
    "correct_answer": "Thread",
    "distractors": ["Process", "Semaphore", "Monitor"],
    "context": "Threads within a process share the same address space and resources but maintain their own stack and registers, enabling lightweight concurrent execution within a single process.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Operating Systems",
    "subtopic": "CPU Scheduling",
    "question": "Which CPU scheduling algorithm selects the process with the shortest next CPU burst time to execute next?",
    "correct_answer": "Shortest Job Next",
    "distractors": ["First-Come-First-Serve", "Round Robin", "Priority Scheduling"],
    "context": "Shortest Job Next (SJN), also known as Shortest Job First, selects the process with the shortest predicted CPU burst time, minimizing average waiting time in non-preemptive scheduling.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Operating Systems",
    "subtopic": "CPU Scheduling",
    "question": "Which scheduling algorithm uses a fixed time quantum to preempt processes and cycle through them in a queue?",
    "correct_answer": "Round Robin",
    "distractors": ["Shortest Remaining Time First", "Multilevel Queue", "Earliest Deadline First"],
    "context": "Round Robin (RR) scheduling allocates a fixed time quantum to each process in a cyclic queue, ensuring fair CPU allocation and responsiveness in time-sharing systems.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Operating Systems",
    "subtopic": "Synchronization",
    "question": "Which synchronization mechanism ensures mutual exclusion by allowing only one process to access a critical section at a time?",
    "correct_answer": "Mutex",
    "distractors": ["Semaphore", "Monitor", "Barrier"],
    "context": "A Mutex (Mutual Exclusion) lock ensures that only one process or thread can enter a critical section at a time, preventing race conditions in concurrent programming.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Operating Systems",
    "subtopic": "Deadlocks",
    "question": "Which condition must be eliminated to prevent deadlocks in a system with multiple processes competing for resources?",
    "correct_answer": "Circular Wait",
    "distractors": ["Mutual Exclusion", "Hold and Wait", "No Preemption"],
    "context": "The Circular Wait condition, where processes form a cycle waiting for resources held by others, is one of the four necessary conditions for a deadlock; breaking it prevents deadlocks.",
    "difficulty": "advanced",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Operating Systems",
    "subtopic": "Synchronization",
    "question": "Which synchronization technique uses a high-level construct that combines mutual exclusion with condition variables to manage concurrent access to shared resources?",
    "correct_answer": "Monitor",
    "distractors": ["Semaphore", "Mutex", "Spinlock"],
    "context": "A Monitor is a high-level synchronization construct that encapsulates shared resources, ensuring mutual exclusion and providing condition variables for processes to wait or signal, simplifying concurrent programming.",
    "difficulty": "advanced",
    "type": "mcq"
  },
   {
    "goal": "GATE CSE",
    "topic": "Operating Systems",
    "subtopic": "Processes and Threads",
    "question": "A web server application needs to handle multiple client requests concurrently to improve responsiveness. Which operating system concept allows for multiple execution flows within the same program, sharing the same memory space, and reducing context switching overhead compared to separate processes?",
    "correct_answer": "Threads",
    "distractors": [
      "Processes",
      "Inter-process Communication (IPC)",
      "Virtual Memory"
    ],
    "context": "Threads are lightweight units of execution within a process. Unlike processes, threads within the same process share the same address space, heap, and open files. This shared memory reduces the overhead associated with context switching and inter-thread communication compared to processes, making them ideal for concurrent tasks within a single application like a web server.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Operating Systems",
    "subtopic": "Processes and Threads",
    "question": "What is the primary difference between a 'process' and a 'thread' in a multi-tasking operating system environment, particularly concerning their resource ownership?",
    "correct_answer": "A process owns its own separate memory space and resources, while threads within a process share the same memory space and resources.",
    "distractors": [
      "A process executes sequentially, while threads execute concurrently.",
      "Threads are managed by the hardware, while processes are managed by the operating system.",
      "Processes can communicate directly, while threads require inter-process communication mechanisms."
    ],
    "context": "A process is an independent execution unit with its own virtual address space, code, data, and system resources (like open files, signal handlers). Threads, on the other hand, are execution units within a process; they share the process's memory space, open files, and other resources, but each has its own program counter, stack, and register set.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Operating Systems",
    "subtopic": "CPU Scheduling",
    "question": "In a batch processing system where turnaround time is the most critical performance metric, and all jobs are known in advance, which CPU scheduling algorithm is theoretically optimal for minimizing average turnaround time?",
    "correct_answer": "Shortest-Job-First (SJF)",
    "distractors": [
      "First-Come, First-Served (FCFS)",
      "Round Robin",
      "Priority Scheduling"
    ],
    "context": "Shortest-Job-First (SJF) scheduling is provably optimal for minimizing the average waiting time and average turnaround time for a given set of processes, assuming their burst times are known in advance (non-preemptive SJF) or can be accurately predicted (preemptive SJF). This is because it prioritizes shorter jobs, clearing them faster and reducing the overall waiting time for subsequent jobs.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Operating Systems",
    "subtopic": "CPU Scheduling",
    "question": "For a real-time operating system managing critical industrial processes, where predictable response times are paramount and tasks have strict deadlines, which CPU scheduling algorithm is most appropriate for guaranteeing that deadlines are met, assuming tasks are periodic and independent?",
    "correct_answer": "Rate Monotonic Scheduling (RMS)",
    "distractors": [
      "Shortest-Remaining-Time-First (SRTF)",
      "Least Slack Time First (LSTF)",
      "First-Come, First-Served (FCFS)"
    ],
    "context": "Rate Monotonic Scheduling (RMS) is a static-priority scheduling algorithm commonly used in real-time operating systems. It assigns higher priorities to tasks with shorter periods (higher rates). RMS is an optimal static-priority algorithm for uniprocessor systems, meaning if a set of tasks can be scheduled by any static-priority algorithm, it can be scheduled by RMS.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Operating Systems",
    "subtopic": "Synchronization & Deadlocks",
    "question": "Two processes, P1 and P2, need to access a shared resource. To prevent race conditions and ensure data consistency, they use a mutex lock. What is the fundamental principle a mutex enforces to achieve mutual exclusion?",
    "correct_answer": "Only one process can hold the lock and access the critical section at any given time.",
    "distractors": [
      "It allows multiple processes to read the shared resource simultaneously.",
      "It ensures processes execute in a strict alternating sequence.",
      "It allows a process to interrupt another process currently in the critical section."
    ],
    "context": "A mutex (mutual exclusion) lock is a synchronization primitive used to protect critical sections of code, ensuring that only one thread or process can access the shared resource at a time. This prevents race conditions and maintains data integrity in concurrent environments.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Operating Systems",
    "subtopic": "Synchronization & Deadlocks",
    "question": "Consider a system with multiple processes and resources where each process needs exclusive access to several resources to complete its task. Which condition, when *not* present, helps prevent deadlocks, and is often addressed by resource ordering or preemption?",
    "correct_answer": "Circular Wait",
    "distractors": [
      "Mutual Exclusion",
      "Hold and Wait",
      "No Preemption"
    ],
    "context": "Deadlocks occur when four necessary conditions are met simultaneously: Mutual Exclusion, Hold and Wait, No Preemption, and Circular Wait. Breaking any one of these conditions can prevent deadlocks. Circular Wait, where a cycle of processes exists, each holding a resource requested by the next, is often targeted by strategies like resource ordering or breaking the cycle through preemption.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Operating Systems",
    "subtopic": "Synchronization & Deadlocks",
    "question": "A classic synchronization problem involves a fixed-size buffer shared between a 'producer' process adding items and a 'consumer' process removing items. What two types of semaphores are typically used to correctly synchronize access to this buffer, ensuring both mutual exclusion and proper counting?",
    "correct_answer": "Binary Semaphore (for mutual exclusion) and Counting Semaphores (for empty/full slots)",
    "distractors": [
      "Only binary semaphores are sufficient.",
      "Only counting semaphores are sufficient.",
      "Mutexes and conditional variables, but not semaphores."
    ],
    "context": "The Producer-Consumer problem requires two types of synchronization. A binary semaphore (or mutex) is used to ensure mutual exclusion, allowing only one process to access the shared buffer at a time. Additionally, two counting semaphores are used: one to count the number of empty slots (initialized to buffer size) and another to count the number of full slots (initialized to 0), ensuring producers wait for empty slots and consumers wait for full slots.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Processes and Threads",
    "subtopic": "Process Control Block",
    "question": "Which component of Process Control Block (PCB) stores the current execution state of a process?",
    "correct_answer": "Program Counter",
    "distractors": [
      "Process ID",
      "Memory Management Information",
      "Process Priority"
    ],
    "context": "The Program Counter in PCB maintains the address of the next instruction to be executed, representing the current execution state of the process.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Processes and Threads",
    "subtopic": "Thread Types",
    "question": "What is the primary advantage of kernel-level threads over user-level threads?",
    "correct_answer": "True parallelism on multiprocessor systems",
    "distractors": [
      "Faster context switching",
      "Lower memory overhead",
      "No system call overhead"
    ],
    "context": "Kernel-level threads are managed by the OS kernel and can achieve true parallelism on multiprocessor systems since the kernel can schedule different threads on different processors simultaneously.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "CPU Scheduling",
    "subtopic": "Scheduling Algorithms",
    "question": "In Round Robin scheduling with time quantum 4ms, if processes P1(burst=8ms), P2(burst=3ms), P3(burst=6ms) arrive at t=0, what is the average waiting time?",
    "correct_answer": "7.33ms",
    "distractors": [
      "5.67ms",
      "8.33ms",
      "6.00ms"
    ],
    "context": "Round Robin scheduling allocates fixed time quantum to each process in circular order. Average waiting time is calculated by summing individual waiting times and dividing by number of processes.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "CPU Scheduling",
    "subtopic": "Priority Scheduling",
    "question": "What problem is commonly associated with non-preemptive priority scheduling?",
    "correct_answer": "Starvation of low-priority processes",
    "distractors": [
      "High context switching overhead",
      "Poor response time for interactive processes",
      "Inefficient CPU utilization"
    ],
    "context": "In priority scheduling, high-priority processes can continuously arrive and execute, causing low-priority processes to wait indefinitely, leading to starvation.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Synchronization & Deadlocks",
    "subtopic": "Peterson's Algorithm",
    "question": "Which two conditions does Peterson's algorithm ensure for critical section problem?",
    "correct_answer": "Mutual exclusion and progress",
    "distractors": [
      "Bounded waiting and atomicity",
      "Mutual exclusion and atomicity",
      "Progress and consistency"
    ],
    "context": "Peterson's algorithm is a software-based solution that guarantees mutual exclusion (only one process in critical section) and progress (processes won't wait indefinitely if critical section is free).",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Synchronization & Deadlocks",
    "subtopic": "Banker's Algorithm",
    "question": "In Banker's algorithm, what does the 'Need' matrix represent?",
    "correct_answer": "Maximum resource requirement minus current allocation",
    "distractors": [
      "Total available resources in the system",
      "Current resource allocation to processes",
      "Maximum resource requirement of processes"
    ],
    "context": "The Need matrix in Banker's algorithm represents the remaining resource requirement for each process, calculated as Max - Allocation, indicating how many more resources each process needs to complete.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Synchronization & Deadlocks",
    "subtopic": "Deadlock Conditions",
    "question": "Which technique prevents deadlock by ensuring that processes request resources in a predetermined order?",
    "correct_answer": "Resource ordering",
    "distractors": [
      "Wait-die scheme",
      "Wound-wait scheme",
      "Timeout mechanism"
    ],
    "context": "Resource ordering prevents circular wait condition by imposing a total ordering on resource types and requiring processes to request resources in increasing order of enumeration.",
    "difficulty": "advanced",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Operating Systems",
    "subtopic": "Memory Management",
    "question": "What is a key difference between paging and segmentation in memory management?",
    "correct_answer": "Paging divides memory into fixed-size blocks, segmentation uses variable-size segments",
    "distractors": [
      "Paging uses variable-size blocks, segmentation uses fixed-size blocks",
      "Both use fixed-size memory divisions",
      "Segmentation and paging are identical methods"
    ],
    "context": "Paging splits memory into equal-sized pages while segmentation uses variable-sized segments based on logical divisions.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Operating Systems",
    "subtopic": "Memory Management",
    "question": "Why does paging eliminate external fragmentation?",
    "correct_answer": "Because physical memory is allocated in fixed-size blocks",
    "distractors": [
      "Because logical memory is divided into segments",
      "Because memory is allocated to only one process at a time",
      "Because memory is dynamically compressed during execution"
    ],
    "context": "Paging eliminates external fragmentation by allocating fixed-size pages in memory.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Operating Systems",
    "subtopic": "File Systems",
    "question": "Which of the following allocation methods can cause external fragmentation in file systems?",
    "correct_answer": "Contiguous allocation",
    "distractors": [
      "Linked allocation",
      "Indexed allocation",
      "Hashed allocation"
    ],
    "context": "Contiguous allocation places a file in a single stretch of memory, which may lead to external fragmentation as files are deleted and created.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Operating Systems",
    "subtopic": "File Systems",
    "question": "Which file allocation method allows fast direct access and easy block retrieval?",
    "correct_answer": "Indexed allocation",
    "distractors": [
      "Contiguous allocation",
      "Linked allocation",
      "Dynamic partitioning"
    ],
    "context": "Indexed allocation maintains an index block for each file, enabling fast access to any block without traversing.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Operating Systems",
    "subtopic": "I/O and Disk Scheduling",
    "question": "Which disk scheduling algorithm provides the best average response time but may lead to starvation?",
    "correct_answer": "Shortest Seek Time First (SSTF)",
    "distractors": [
      "FCFS (First Come First Serve)",
      "SCAN",
      "C-SCAN"
    ],
    "context": "SSTF selects the request with the least seek time, improving performance but may indefinitely postpone distant requests.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Operating Systems",
    "subtopic": "I/O and Disk Scheduling",
    "question": "What is the primary advantage of the SCAN disk scheduling algorithm?",
    "correct_answer": "It provides better response time than FCFS and avoids starvation",
    "distractors": [
      "It always chooses the farthest cylinder",
      "It is faster than SSTF in all cases",
      "It skips alternating tracks for efficiency"
    ],
    "context": "SCAN moves the disk arm across the disk, servicing requests in one direction to reduce wait times without starvation.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Operating Systems",
    "subtopic": "Memory Management",
    "question": "Which of the following is true about page replacement algorithms in virtual memory systems?",
    "correct_answer": "The Least Recently Used (LRU) algorithm replaces the page not used for the longest time",
    "distractors": [
      "FIFO replaces the page with the highest priority",
      "Optimal replaces the page that was most recently accessed",
      "LRU always replaces the largest page in memory"
    ],
    "context": "Page replacement algorithms decide which page to remove when memory is full; LRU is based on past usage patterns.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Memory Management",
    "subtopic": "Paging",
    "question": "In a paging system with page size 4KB and virtual address space 32 bits, how many bits are required for the page offset?",
    "correct_answer": "12 bits",
    "distractors": [
      "10 bits",
      "8 bits",
      "16 bits"
    ],
    "context": "Page offset bits are determined by page size. With 4KB (4096 bytes) page size, we need log₂(4096) = 12 bits to address all bytes within a page.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Memory Management",
    "subtopic": "Segmentation",
    "question": "What is the primary advantage of segmentation over paging in terms of memory organization?",
    "correct_answer": "Logical grouping of related data and code",
    "distractors": [
      "Elimination of external fragmentation",
      "Faster address translation",
      "Reduced memory overhead"
    ],
    "context": "Segmentation allows logical grouping of program components like code, data, and stack segments, making it easier to share and protect related memory regions compared to fixed-size pages.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Memory Management",
    "subtopic": "Page Replacement",
    "question": "In LRU page replacement algorithm, if page reference string is 1,2,3,4,1,2,5,1,2,3,4,5 with 3 frames, how many page faults occur?",
    "correct_answer": "9",
    "distractors": [
      "7",
      "8",
      "10"
    ],
    "context": "LRU (Least Recently Used) replaces the page that has not been referenced for the longest time. Each new page reference that's not in memory causes a page fault.",
    "difficulty": "advanced",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "File Systems",
    "subtopic": "File Allocation Methods",
    "question": "Which file allocation method provides the best sequential access performance?",
    "correct_answer": "Contiguous allocation",
    "distractors": [
      "Linked allocation",
      "Indexed allocation",
      "Multi-level indexed allocation"
    ],
    "context": "Contiguous allocation stores file blocks in consecutive disk locations, allowing the disk head to read sequential blocks without seeking, providing optimal sequential access performance.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "File Systems",
    "subtopic": "Directory Structure",
    "question": "What is the main disadvantage of single-level directory structure?",
    "correct_answer": "Name collision between different users",
    "distractors": [
      "Inefficient file search operations",
      "High memory overhead for directory table",
      "Complex file path resolution"
    ],
    "context": "Single-level directory structure maintains all files in one directory, causing naming conflicts when multiple users try to create files with the same name.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "I/O and Disk Scheduling",
    "subtopic": "SCAN Algorithm",
    "question": "In SCAN disk scheduling, if current head position is 53 and requests are [98, 183, 37, 122, 14, 124, 65, 67], what is the total head movement assuming head moves towards higher cylinder numbers?",
    "correct_answer": "236",
    "distractors": [
      "208",
      "256",
      "198"
    ],
    "context": "SCAN algorithm moves the disk head in one direction servicing requests until reaching the end, then reverses direction. Total movement is calculated by summing all head movements between consecutive positions.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "I/O and Disk Scheduling",
    "subtopic": "DMA vs Programmed I/O",
    "question": "What is the primary advantage of DMA (Direct Memory Access) over programmed I/O?",
    "correct_answer": "CPU is free to perform other tasks during data transfer",
    "distractors": [
      "Higher data transfer rate",
      "Better error detection capabilities",
      "Lower hardware complexity"
    ],
    "context": "DMA allows I/O devices to transfer data directly to/from memory without CPU intervention, freeing the CPU to execute other processes while data transfer occurs in parallel.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Operating Systems",
    "subtopic": "Memory Management",
    "question": "Which memory management technique divides physical memory into fixed-size blocks called pages?",
    "correct_answer": "Paging",
    "distractors": ["Segmentation", "Virtual Memory", "Thrashing"],
    "context": "Paging divides physical memory into fixed-size pages and maps them to logical pages, allowing efficient memory allocation and avoiding external fragmentation in operating systems.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Operating Systems",
    "subtopic": "Memory Management",
    "question": "Which memory management technique allows variable-sized memory partitions based on program segments like code or data?",
    "correct_answer": "Segmentation",
    "distractors": ["Paging", "Swapping", "Demand Paging"],
    "context": "Segmentation divides a program into variable-sized segments (e.g., code, data, stack), each mapped to memory, supporting logical partitioning but potentially causing external fragmentation.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Operating Systems",
    "subtopic": "File Systems",
    "question": "Which file system component stores metadata about files, such as their names, sizes, and locations?",
    "correct_answer": "Inode",
    "distractors": ["Superblock", "Boot Block", "Directory"],
    "context": "An inode in a file system stores metadata about a file, including its size, permissions, and pointers to data blocks, enabling efficient file access and management.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Operating Systems",
    "subtopic": "File Systems",
    "question": "Which file allocation method uses a linked list to track the blocks of a file on disk?",
    "correct_answer": "Linked Allocation",
    "distractors": ["Contiguous Allocation", "Indexed Allocation", "Extent-based Allocation"],
    "context": "Linked Allocation stores a file as a linked list of disk blocks, where each block contains a pointer to the next, allowing flexibility but potentially slower sequential access.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Operating Systems",
    "subtopic": "I/O and Disk Scheduling",
    "question": "Which disk scheduling algorithm selects the request with the shortest seek time from the current head position?",
    "correct_answer": "Shortest Seek Time First",
    "distractors": ["First-Come-First-Serve", "SCAN", "C-SCAN"],
    "context": "Shortest Seek Time First (SSTF) selects the disk I/O request closest to the current head position, minimizing seek time but potentially causing starvation for distant requests.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Operating Systems",
    "subtopic": "Memory Management",
    "question": "Which page replacement algorithm replaces the page that will not be needed for the longest time in the future?",
    "correct_answer": "Optimal Page Replacement",
    "distractors": ["Least Recently Used", "First-In-First-Out", "Most Recently Used"],
    "context": "Optimal Page Replacement selects the page that will not be referenced for the longest time, minimizing page faults, but it requires future knowledge and is impractical in real systems.",
    "difficulty": "advanced",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Operating Systems",
    "subtopic": "I/O and Disk Scheduling",
    "question": "Which disk scheduling algorithm moves the disk head in one direction, servicing requests until it reaches the end, then reverses direction?",
    "correct_answer": "SCAN",
    "distractors": ["LOOK", "C-SCAN", "Shortest Seek Time First"],
    "context": "The SCAN algorithm, also known as the elevator algorithm, services disk requests in one direction until the end of the disk, then reverses, ensuring fairness but potentially higher seek times than LOOK.",
    "difficulty": "advanced",
    "type": "mcq"
  },
   {
    "goal": "GATE CSE",
    "topic": "Operating Systems",
    "subtopic": "Memory Management (Paging, Segmentation)",
    "question": "A modern operating system needs to manage processes with varying memory requirements, allowing them to run even if their entire logical address space cannot fit contiguously in physical memory. Which memory management technique achieves this by dividing both logical and physical memory into fixed-size blocks?",
    "correct_answer": "Paging",
    "distractors": [
      "Segmentation",
      "Swapping",
      "Contiguous Memory Allocation"
    ],
    "context": "Paging is a memory management scheme that divides logical memory into fixed-size blocks called pages and physical memory into fixed-size blocks called frames. This allows a process's non-contiguous logical pages to be stored in non-contiguous physical frames, solving the external fragmentation problem and enabling virtual memory.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Operating Systems",
    "subtopic": "Memory Management (Paging, Segmentation)",
    "question": "In a system using a two-level paging scheme, what is the primary benefit over a single-level paging scheme, especially for processes with sparse address spaces?",
    "correct_answer": "Reduced memory usage for page tables by not requiring a full page table for every process.",
    "distractors": [
      "Elimination of internal fragmentation.",
      "Faster page table lookups.",
      "Support for sharing code segments between processes."
    ],
    "context": "Multi-level paging (like two-level paging) addresses the issue of large page tables consuming too much memory, especially for processes that use only a small portion of their large logical address space (sparse address space). It achieves this by only allocating inner page tables for those parts of the logical address space that are actually in use, thus saving significant memory.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Operating Systems",
    "subtopic": "Memory Management (Paging, Segmentation)",
    "question": "A legacy operating system uses segmentation for memory management. What is a key advantage of segmentation over pure paging from a programmer's perspective, related to program structure?",
    "correct_answer": "It reflects the logical organization of a program (e.g., code, data, stack) into variable-sized segments.",
    "distractors": [
      "It completely eliminates internal fragmentation.",
      "It provides faster physical address translation than paging.",
      "It always uses less total physical memory than paging."
    ],
    "context": "Segmentation is a memory management scheme where memory is divided into segments of varying sizes, each corresponding to a logical unit of a program (e.g., code segment, data segment, stack segment). This aligns well with how programmers typically organize their programs, offering better protection and sharing at a logical level compared to fixed-size pages.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Operating Systems",
    "subtopic": "File Systems",
    "question": "A user deletes a large file from a disk. In a typical file system, what is the immediate action taken by the operating system, and how does this relate to the actual data on the disk?",
    "correct_answer": "The file's entry in the directory is marked as free, and its disk blocks are marked as available, but the data itself remains until overwritten.",
    "distractors": [
      "The entire file's data is immediately overwritten with zeros for security.",
      "The file is moved to a special 'recycle bin' area on the disk.",
      "The disk controller automatically erases the magnetic patterns of the data blocks."
    ],
    "context": "When a file is deleted in most modern file systems, the operating system doesn't immediately erase the data blocks containing the file's content. Instead, it marks the directory entry as invalid and updates the file system's free space map (e.g., bitmap or free list) to indicate that the blocks previously occupied by the file are now available for reuse. The actual data remains on the disk until new data overwrites those blocks.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Operating Systems",
    "subtopic": "File Systems",
    "question": "In a distributed file system, which common challenge arises when multiple clients try to modify the same file concurrently, and how is it typically addressed?",
    "correct_answer": "Consistency, often handled through locking mechanisms or versioning.",
    "distractors": [
      "Security, by encrypting all file transfers.",
      "Performance, by increasing network bandwidth.",
      "Storage capacity, by adding more disk space."
    ],
    "context": "Consistency is a major challenge in distributed file systems. When multiple clients can access and modify the same file concurrently, ensuring that all clients see a consistent (up-to-date) view of the file becomes complex. This is typically addressed using various consistency models, often implemented through locking mechanisms (e.g., pessimistic locking) or optimistic concurrency control with versioning.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Operating Systems",
    "subtopic": "I/O and Disk Scheduling",
    "question": "A hard disk drive is receiving multiple I/O requests for data blocks located at various cylinder numbers. Which disk scheduling algorithm aims to minimize the total head movement by always moving the disk arm in one direction until it reaches an end, then reverses direction?",
    "correct_answer": "SCAN (Elevator Algorithm)",
    "distractors": [
      "FCFS (First-Come, First-Served)",
      "SSTF (Shortest-Seek-Time-First)",
      "C-SCAN (Circular SCAN)"
    ],
    "context": "The SCAN disk scheduling algorithm, also known as the elevator algorithm, operates by moving the disk arm in one direction, servicing all requests along the way, until it reaches the end of the disk or the last request in that direction. It then reverses direction and repeats the process. This helps minimize total head movement and provides a more fair service compared to SSTF, which can starve requests at the ends.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Operating Systems",
    "subtopic": "I/O and Disk Scheduling",
    "question": "Why is the use of a disk cache (buffer cache) crucial for improving the performance of file system operations in an operating system?",
    "correct_answer": "It reduces the number of slow physical disk I/O operations by serving frequently accessed data from faster memory.",
    "distractors": [
      "It encrypts data before writing to the disk for enhanced security.",
      "It organizes files into a hierarchical structure on the disk.",
      "It automatically defragments the disk in real-time."
    ],
    "context": "A disk cache (or buffer cache) is a portion of main memory (RAM) used by the operating system to store frequently accessed disk blocks. The primary benefit is to reduce the need for slow physical disk I/O operations. When data is requested, the system first checks the cache; if found (a cache hit), it's served much faster than reading from the disk, significantly improving performance.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Databases",
    "subtopic": "ER Model and Relational Model",
    "question": "In the ER model, what does a weak entity set lack that requires it to be associated with a strong entity?",
    "correct_answer": "A primary key",
    "distractors": [
      "A foreign key",
      "A relation name",
      "An attribute"
    ],
    "context": "A weak entity set cannot be uniquely identified by its own attributes and needs a foreign key from a strong entity to create a primary key.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Databases",
    "subtopic": "Relational Algebra and SQL",
    "question": "Which relational algebra operation is used to combine tuples from two relations based on a common attribute?",
    "correct_answer": "Join",
    "distractors": [
      "Union",
      "Projection",
      "Selection"
    ],
    "context": "The join operation combines tuples from two relations based on matching attribute values.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Databases",
    "subtopic": "Relational Algebra and SQL",
    "question": "What is the main purpose of the 'GROUP BY' clause in SQL?",
    "correct_answer": "To aggregate data based on one or more columns",
    "distractors": [
      "To filter rows before aggregation",
      "To join two tables",
      "To sort the result set"
    ],
    "context": "The 'GROUP BY' clause is used to arrange identical data into groups to perform aggregate functions like COUNT, AVG, SUM, etc.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Databases",
    "subtopic": "Relational Algebra and SQL",
    "question": "Which of the following SQL operations eliminates duplicate rows in the result set?",
    "correct_answer": "SELECT DISTINCT",
    "distractors": [
      "SELECT ALL",
      "GROUP BY",
      "ORDER BY"
    ],
    "context": "SELECT DISTINCT is used to return only distinct (different) values, removing duplicate rows from the result set.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Databases",
    "subtopic": "Functional Dependencies and Normalization",
    "question": "Which normal form ensures there are no partial dependencies in a relation?",
    "correct_answer": "Second Normal Form (2NF)",
    "distractors": [
      "First Normal Form (1NF)",
      "Third Normal Form (3NF)",
      "Boyce-Codd Normal Form (BCNF)"
    ],
    "context": "2NF eliminates partial dependency, where a non-prime attribute is functionally dependent on part of a candidate key.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Databases",
    "subtopic": "Functional Dependencies and Normalization",
    "question": "What is a functional dependency in relational databases?",
    "correct_answer": "A relationship where one attribute uniquely determines another attribute",
    "distractors": [
      "A mapping of keys to relations",
      "A recursive relationship between two attributes",
      "A join between two foreign keys"
    ],
    "context": "A functional dependency X → Y means that if two tuples have the same value for attribute X, they must have the same value for attribute Y.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Databases",
    "subtopic": "Functional Dependencies and Normalization",
    "question": "Why is Boyce-Codd Normal Form (BCNF) considered stronger than 3NF?",
    "correct_answer": "Because it removes all anomalies caused by functional dependencies, even if candidate keys are involved",
    "distractors": [
      "Because it ensures data is stored in one table",
      "Because it merges all relations into a single one",
      "Because it ignores all transitive dependencies"
    ],
    "context": "BCNF is stricter than 3NF as it requires every functional dependency to have a super key on the left-hand side.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "ER Model and Relational Model",
    "subtopic": "Entity-Relationship Mapping",
    "question": "In ER-to-relational mapping, how is a many-to-many relationship between entities A and B typically represented?",
    "correct_answer": "Create a separate relation with foreign keys from both A and B",
    "distractors": [
      "Add foreign key of A in relation B",
      "Add foreign key of B in relation A",
      "Merge both entities into a single relation"
    ],
    "context": "Many-to-many relationships cannot be directly represented in relational model and require a separate junction table containing foreign keys from both participating entities to establish the relationship.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "subtopic": "Weak Entity Sets",
    "topic": "ER Model and Relational Model",
    "question": "What additional component is required when converting a weak entity set to a relational schema?",
    "correct_answer": "Primary key of the owner entity as foreign key",
    "distractors": [
      "Composite primary key from all attributes",
      "Surrogate key generation",
      "Partial key duplication"
    ],
    "context": "Weak entities depend on owner entities for identification and require the owner entity's primary key as a foreign key, combined with the weak entity's partial key to form the complete primary key.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Relational Algebra and SQL",
    "subtopic": "Relational Algebra Operations",
    "question": "Which relational algebra operation is equivalent to the SQL WHERE clause?",
    "correct_answer": "Selection (σ)",
    "distractors": [
      "Projection (π)",
      "Join (⋈)",
      "Union (∪)"
    ],
    "context": "Selection operation (σ) in relational algebra filters tuples based on specified conditions, which directly corresponds to the WHERE clause functionality in SQL queries.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Relational Algebra and SQL",
    "subtopic": "SQL Joins",
    "question": "What is the result when performing a LEFT OUTER JOIN between tables A(5 tuples) and B(3 tuples) where only 2 tuples from A have matching values in B?",
    "correct_answer": "5 tuples with NULLs for unmatched A tuples",
    "distractors": [
      "2 tuples with only matched records",
      "8 tuples from cartesian product",
      "3 tuples with NULLs for unmatched B tuples"
    ],
    "context": "LEFT OUTER JOIN returns all tuples from the left table and matched tuples from the right table, with NULL values for unmatched left table tuples, ensuring all left table records are preserved.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Functional Dependencies and Normalization",
    "subtopic": "Functional Dependencies",
    "question": "Given relation R(A,B,C,D) with FDs: A→B, B→C, C→D, A→D. Which functional dependency is redundant?",
    "correct_answer": "A→D",
    "distractors": [
      "A→B",
      "B→C",
      "C→D"
    ],
    "context": "A functional dependency is redundant if it can be derived from other dependencies through transitivity. Since A→B, B→C, C→D exists, A→D can be derived transitively, making it redundant.",
    "difficulty": "advanced",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Functional Dependencies and Normalization",
    "subtopic": "Second Normal Form",
    "question": "What condition must be satisfied for a relation to be in Second Normal Form (2NF)?",
    "correct_answer": "No partial dependency of non-prime attributes on candidate key",
    "distractors": [
      "No transitive dependency exists",
      "All attributes are atomic",
      "No multi-valued dependencies exist"
    ],
    "context": "Second Normal Form requires that the relation is in 1NF and every non-prime attribute is fully functionally dependent on every candidate key, eliminating partial dependencies.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Functional Dependencies and Normalization",
    "subtopic": "BCNF Decomposition",
    "question": "A relation R(A,B,C,D) with FDs: AB→C, C→D, D→A is decomposed into R1(A,B,C) and R2(C,D,A). What property does this decomposition satisfy?",
    "correct_answer": "Lossless join decomposition",
    "distractors": [
      "Dependency preserving decomposition",
      "Both lossless and dependency preserving",
      "Neither lossless nor dependency preserving"
    ],
    "context": "The decomposition is lossless because the common attribute C is a key in one of the decomposed relations R2, ensuring that the original relation can be reconstructed by joining R1 and R2.",
    "difficulty": "advanced",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Database Management Systems",
    "subtopic": "ER Model",
    "question": "Which component of an ER Model represents a real-world object with attributes?",
    "correct_answer": "Entity",
    "distractors": ["Relationship", "Attribute", "Schema"],
    "context": "In the ER Model, an entity represents a real-world object (e.g., a student or car) with attributes describing its properties, forming the basis for tables in a relational database.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Database Management Systems",
    "subtopic": "Relational Model",
    "question": "Which property of a relational database ensures that each attribute in a tuple contains exactly one value?",
    "correct_answer": "Atomicity",
    "distractors": ["Consistency", "Integrity", "Durability"],
    "context": "Atomicity in the relational model ensures that each attribute in a tuple holds a single, indivisible value, adhering to the principles of the relational database model.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Database Management Systems",
    "subtopic": "Relational Algebra",
    "question": "Which relational algebra operation selects tuples from a relation that satisfy a given condition?",
    "correct_answer": "Selection",
    "distractors": ["Projection", "Join", "Union"],
    "context": "The Selection operation in relational algebra filters tuples from a relation based on a specified condition, producing a subset of tuples that satisfy the predicate.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Database Management Systems",
    "subtopic": "SQL",
    "question": "Which SQL clause is used to group rows with identical values in specified columns into summary rows?",
    "correct_answer": "GROUP BY",
    "distractors": ["ORDER BY", "HAVING", "WHERE"],
    "context": "The GROUP BY clause in SQL groups rows with the same values in specified columns, often used with aggregate functions like COUNT or SUM to produce summary results.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Database Management Systems",
    "subtopic": "Functional Dependencies",
    "question": "Which type of functional dependency holds for all instances of a relation if one attribute uniquely determines another?",
    "correct_answer": "Full Functional Dependency",
    "distractors": ["Partial Dependency", "Transitive Dependency", "Multivalued Dependency"],
    "context": "A Full Functional Dependency exists when an attribute X uniquely determines another attribute Y, and no proper subset of X can determine Y, ensuring minimal dependency.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Database Management Systems",
    "subtopic": "Normalization",
    "question": "Which normal form eliminates transitive dependencies to ensure that non-key attributes depend only on the primary key?",
    "correct_answer": "Third Normal Form",
    "distractors": ["First Normal Form", "Second Normal Form", "BCNF"],
    "context": "Third Normal Form (3NF) ensures that all non-key attributes are non-transitively dependent on the primary key, eliminating transitive dependencies to reduce redundancy.",
    "difficulty": "advanced",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Database Management Systems",
    "subtopic": "Normalization",
    "question": "Which normal form is stricter than 3NF and requires that every determinant of a functional dependency be a candidate key?",
    "correct_answer": "Boyce-Codd Normal Form",
    "distractors": ["Second Normal Form", "Fourth Normal Form", "Fifth Normal Form"],
    "context": "Boyce-Codd Normal Form (BCNF) is a stricter version of 3NF, requiring that for every functional dependency X → Y, X must be a candidate key, eliminating certain anomalies in updates.",
    "difficulty": "advanced",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Database Management Systems",
    "subtopic": "ER Model and Relational Model",
    "question": "A software development team is designing a new database for a university. They have identified 'Student' and 'Course' as entities, and a 'RegistersFor' relationship where a student can register for multiple courses, and a course can have multiple students. In an ER diagram, how would this relationship be typically represented, and what cardinalities would apply?",
    "correct_answer": "Many-to-Many (M:N) relationship with a connecting diamond.",
    "distractors": [
      "One-to-Many (1:N) relationship from Student to Course.",
      "One-to-One (1:1) relationship between Student and Course.",
      "A weak entity set dependent on both Student and Course."
    ],
    "context": "A Many-to-Many (M:N) relationship exists when one entity instance can be associated with multiple instances of another entity, and vice versa. In the university example, one student can register for many courses, and one course can have many students. This is typically represented by a diamond connecting the two entity rectangles, with 'M' and 'N' (or '*' for many) cardinalities indicated on the connecting lines.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Database Management Systems",
    "subtopic": "ER Model and Relational Model",
    "question": "When converting an ER model with a multi-valued attribute (e.g., 'Phone Numbers' for a 'Customer' entity) into a relational schema, what is the standard approach to represent this attribute?",
    "correct_answer": "Create a new separate relation (table) for the multi-valued attribute, with a foreign key back to the original entity's primary key.",
    "distractors": [
      "Create multiple columns in the original relation, one for each possible phone number.",
      "Store all phone numbers as a comma-separated string in a single column of the original relation.",
      "Simply ignore the multi-valued attribute during conversion as it cannot be directly mapped."
    ],
    "context": "Multi-valued attributes in an ER model cannot be directly represented as a single column in a relational table without violating First Normal Form (1NF). The standard conversion approach is to create a new, separate relation. This new relation will have two columns: one for the primary key of the original entity (acting as a foreign key) and one for the multi-valued attribute itself. The combination of these two columns forms the primary key of the new relation.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Database Management Systems",
    "subtopic": "Relational Algebra and SQL",
    "question": "Given two relations, `EMPLOYEE(EmpID, Name, DeptID)` and `DEPARTMENT(DeptID, DeptName, Location)`. Which Relational Algebra operation would be used to find the names of all employees who work in the 'Sales' department?",
    "correct_answer": "Selection (σ) on DEPARTMENT, followed by Join (⋈) with EMPLOYEE, then Projection (π) for Name.",
    "distractors": [
      "Union (∪) of EMPLOYEE and DEPARTMENT.",
      "Cartesian Product (×) of EMPLOYEE and DEPARTMENT, followed by Selection.",
      "Division (÷) of EMPLOYEE by DEPARTMENT."
    ],
    "context": "To find employees in a specific department, you first need to filter the `DEPARTMENT` relation to find the 'Sales' department's `DeptID` (Selection). Then, you join this result with the `EMPLOYEE` relation on `DeptID` to link employees to departments (Join). Finally, you project the `Name` attribute from the result (Projection).",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Database Management Systems",
    "subtopic": "Relational Algebra and SQL",
    "question": "You need to retrieve the `EmpID` and `Name` of all employees from the `EMPLOYEE` table where `DeptID` is 'D001' AND `Salary` is greater than 50000. Write the equivalent SQL query.",
    "correct_answer": "SELECT EmpID, Name FROM EMPLOYEE WHERE DeptID = 'D001' AND Salary > 50000;",
    "distractors": [
      "SELECT EmpID, Name FROM EMPLOYEE WHERE DeptID = 'D001' OR Salary > 50000;",
      "SELECT * FROM EMPLOYEE WHERE DeptID = 'D001' AND Salary > 50000;",
      "SELECT EmpID, Name FROM EMPLOYEE GROUP BY DeptID HAVING DeptID = 'D001';"
    ],
    "context": "The `SELECT` clause specifies the columns to retrieve. The `FROM` clause indicates the table. The `WHERE` clause filters rows based on conditions. The `AND` operator combines multiple conditions, requiring both to be true for a row to be selected.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Database Management Systems",
    "subtopic": "Functional Dependencies and Normalization",
    "question": "A relation `R(A, B, C, D)` has the following functional dependencies: `A → B`, `B → C`, `C → D`. What is the highest normal form that `R` satisfies, and why?",
    "correct_answer": "1NF (First Normal Form), because it might contain transitive dependencies if A is a candidate key.",
    "distractors": [
      "2NF (Second Normal Form), because B is fully dependent on A.",
      "3NF (Third Normal Form), because there are no partial dependencies.",
      "BCNF (Boyce-Codd Normal Form), because all determinants are candidate keys."
    ],
    "context": "Given `A → B`, `B → C`, and `C → D`, if `A` is a candidate key, then `A → C` (via `A → B` and `B → C`) and `A → D` (via `A → C` and `C → D`) are transitive dependencies. A relation is in 3NF if it's in 2NF and there are no transitive dependencies of non-prime attributes on a candidate key. Since we have transitive dependencies (e.g., `A → C` and `A → D`), the relation is not in 3NF. It is in 1NF as long as all attributes are atomic.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Database Management Systems",
    "subtopic": "Functional Dependencies and Normalization",
    "question": "What is the primary objective of normalizing a relational database schema to higher normal forms (e.g., 3NF or BCNF)?",
    "correct_answer": "To reduce data redundancy and eliminate update, insertion, and deletion anomalies.",
    "distractors": [
      "To improve query execution speed for all types of queries.",
      "To simplify the ER diagram design process.",
      "To increase the complexity of joining multiple tables."
    ],
    "context": "Normalization is a systematic process of reorganizing a database to minimize data redundancy and improve data integrity. Its main goals are to eliminate update anomalies (where changing one piece of data requires changing multiple records), insertion anomalies (where data cannot be added without other data), and deletion anomalies (where deleting data inadvertently removes other data).",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Database Management Systems",
    "subtopic": "Functional Dependencies and Normalization",
    "question": "Consider a relation `R(A, B, C, D)` with functional dependencies `AB → C` and `C → D`. Is this relation in Boyce-Codd Normal Form (BCNF)? If not, why?",
    "correct_answer": "No, because C is a determinant (C → D) but not a candidate key.",
    "distractors": [
      "Yes, because all functional dependencies are fully dependent on a candidate key.",
      "No, because there is a partial dependency of D on AB.",
      "Yes, because it is already in 3NF."
    ],
    "context": "A relation is in BCNF if and only if for every non-trivial functional dependency `X → Y`, `X` is a superkey (or candidate key). In the given example, `C → D` is a non-trivial functional dependency, but `C` is not a candidate key (the candidate key is `AB`). Therefore, the relation is not in BCNF.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Databases",
    "subtopic": "Transactions and Concurrency Control",
    "question": "Which property ensures that a transaction's changes are permanently recorded in the database even in the case of a system crash?",
    "correct_answer": "Durability",
    "distractors": [
      "Atomicity",
      "Isolation",
      "Consistency"
    ],
    "context": "Durability in database transactions ensures that once a transaction has been committed, its changes are permanent even after a crash.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Databases",
    "subtopic": "Transactions and Concurrency Control",
    "question": "Which concurrency control protocol ensures serializability using timestamps?",
    "correct_answer": "Timestamp ordering protocol",
    "distractors": [
      "Two-phase locking protocol",
      "Wait-die scheme",
      "Validation-based protocol"
    ],
    "context": "The timestamp ordering protocol uses timestamps to ensure that the schedule of concurrent transactions is serializable.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Databases",
    "subtopic": "Transactions and Concurrency Control",
    "question": "What is the main goal of concurrency control in a DBMS?",
    "correct_answer": "To ensure isolation and consistency of transactions",
    "distractors": [
      "To enhance disk performance",
      "To increase replication",
      "To perform indexing efficiently"
    ],
    "context": "Concurrency control ensures correct execution of concurrent transactions while maintaining database consistency and isolation.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Databases",
    "subtopic": "Indexing and File Organization",
    "question": "Which data structure is commonly used to implement database indexing for efficient range queries?",
    "correct_answer": "B+ Tree",
    "distractors": [
      "Hash Table",
      "Red-Black Tree",
      "Binary Search Tree"
    ],
    "context": "B+ Trees are widely used in databases for indexing because they support efficient range queries and dynamic insertion/deletion.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Databases",
    "subtopic": "Indexing and File Organization",
    "question": "Which of the following is a primary advantage of clustered indexing?",
    "correct_answer": "It stores related rows physically close on disk, improving I/O",
    "distractors": [
      "It duplicates rows across tables",
      "It enforces referential integrity",
      "It disables secondary indexing"
    ],
    "context": "Clustered indexing improves performance by storing related rows together, reducing disk I/O during access.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Databases",
    "subtopic": "Indexing and File Organization",
    "question": "Which type of file organization allows fast sequential access and also supports indexed access?",
    "correct_answer": "Indexed Sequential Access Method (ISAM)",
    "distractors": [
      "Heap File Organization",
      "Hashed File Organization",
      "Clustered File Organization"
    ],
    "context": "ISAM combines both sequential and indexed access, providing efficient retrieval and update operations in databases.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Transactions, Concurrency Control",
    "subtopic": "ACID Properties",
    "question": "Which ACID property ensures that either all operations of a transaction are completed or none are performed?",
    "correct_answer": "Atomicity",
    "distractors": [
      "Consistency",
      "Isolation",
      "Durability"
    ],
    "context": "Atomicity property ensures that a transaction is treated as a single unit of work where either all operations are executed successfully or none are executed, maintaining an all-or-nothing approach.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Transactions, Concurrency Control",
    "subtopic": "Two-Phase Locking",
    "question": "In Two-Phase Locking protocol, what happens during the shrinking phase?",
    "correct_answer": "Locks can only be released, no new locks can be acquired",
    "distractors": [
      "Locks can only be acquired, no locks can be released",
      "Both lock acquisition and release are allowed",
      "All locks are automatically released"
    ],
    "context": "Two-Phase Locking has a growing phase where locks are acquired and a shrinking phase where locks are released. Once a transaction enters the shrinking phase, it cannot acquire any new locks.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Transactions, Concurrency Control",
    "subtopic": "Serializability",
    "question": "What type of schedule is guaranteed to be conflict-serializable?",
    "correct_answer": "Any schedule that follows Two-Phase Locking protocol",
    "distractors": [
      "Any schedule with timestamp ordering",
      "Any schedule without deadlocks",
      "Any schedule with optimistic concurrency control"
    ],
    "context": "Two-Phase Locking protocol guarantees conflict-serializability by ensuring that all transactions follow the growing and shrinking phases, preventing conflicting operations from executing concurrently.",
    "difficulty": "advanced",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Indexing and File Organization",
    "subtopic": "B+ Tree Structure",
    "question": "What is the maximum number of keys that can be stored in a B+ tree node with order 4?",
    "correct_answer": "3",
    "distractors": [
      "4",
      "5",
      "2"
    ],
    "context": "In a B+ tree of order n, each internal node can contain at most (n-1) keys and n pointers. For order 4, maximum keys per node is 4-1 = 3 keys.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Indexing and File Organization",
    "subtopic": "Hashing vs B+ Tree",
    "question": "Which indexing method provides better performance for range queries?",
    "correct_answer": "B+ Tree",
    "distractors": [
      "Static Hashing",
      "Dynamic Hashing",
      "Extensible Hashing"
    ],
    "context": "B+ Tree maintains sorted order of keys and supports sequential access through leaf node links, making it efficient for range queries, while hashing provides direct access but poor range query performance.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Indexing and File Organization",
    "subtopic": "Clustered vs Non-clustered Index",
    "question": "What is the primary characteristic of a clustered index?",
    "correct_answer": "Data records are physically ordered according to the index key",
    "distractors": [
      "Index entries point to data record locations",
      "Multiple clustered indexes can exist per table",
      "Index is stored separately from data pages"
    ],
    "context": "A clustered index physically orders the data records in the table according to the index key values, meaning the data pages are stored in the same order as the index key sequence.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Database Management Systems",
    "subtopic": "Transactions",
    "question": "Which property of a transaction ensures that all operations are completed successfully or none are applied?",
    "correct_answer": "Atomicity",
    "distractors": ["Consistency", "Isolation", "Durability"],
    "context": "Atomicity ensures that a transaction is treated as an indivisible unit, either fully completing or rolling back entirely, maintaining database integrity.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Database Management Systems",
    "subtopic": "Concurrency Control",
    "question": "Which concurrency control mechanism uses locks to prevent multiple transactions from accessing the same data simultaneously?",
    "correct_answer": "Locking",
    "distractors": ["Timestamp Ordering", "Multiversion Concurrency Control", "Optimistic Concurrency Control"],
    "context": "Locking ensures concurrency control by granting exclusive or shared locks to transactions, preventing conflicts during simultaneous data access in a database.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Database Management Systems",
    "subtopic": "Indexing",
    "question": "Which type of index stores pointers to data records in a balanced tree structure to speed up search operations?",
    "correct_answer": "B+ Tree Index",
    "distractors": ["Hash Index", "Bitmap Index", "Inverted Index"],
    "context": "A B+ Tree Index organizes data in a balanced tree structure, with leaf nodes containing pointers to records, enabling efficient range queries and searches in databases.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Database Management Systems",
    "subtopic": "File Organization",
    "question": "Which file organization method stores records in the order they are inserted, suitable for sequential access?",
    "correct_answer": "Heap File Organization",
    "distractors": ["Sequential File Organization", "Clustered File Organization", "Indexed File Organization"],
    "context": "Heap File Organization stores records in the order of insertion without any specific sorting, making it efficient for sequential access but slower for searches without an index.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Database Management Systems",
    "subtopic": "Concurrency Control",
    "question": "Which concurrency control protocol ensures serializability by assigning timestamps to transactions and ordering their operations?",
    "correct_answer": "Timestamp Ordering Protocol",
    "distractors": ["Two-Phase Locking", "Multiversion Concurrency Control", "Optimistic Concurrency Control"],
    "context": "The Timestamp Ordering Protocol assigns unique timestamps to transactions and ensures that operations are executed in timestamp order, guaranteeing serializability without locks.",
    "difficulty": "advanced",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Database Management Systems",
    "subtopic": "Indexing",
    "question": "Which indexing technique is most efficient for equality queries but inefficient for range queries due to its non-sequential structure?",
    "correct_answer": "Hash Index",
    "distractors": ["B+ Tree Index", "Bitmap Index", "Dense Index"],
    "context": "A Hash Index uses a hash function to map keys to disk locations, providing O(1) average-case time for equality queries but performing poorly for range queries due to its non-sequential nature.",
    "difficulty": "advanced",
    "type": "mcq"
  },
   {
    "goal": "GATE CSE",
    "topic": "Database Management Systems",
    "subtopic": "Transactions, Concurrency Control",
    "question": "In a highly concurrent database system handling online transactions, what is the primary purpose of a 'transaction' and the ACID properties it aims to guarantee?",
    "correct_answer": "A logical unit of work that ensures Atomicity, Consistency, Isolation, and Durability (ACID) for data integrity.",
    "distractors": [
      "A sequence of SQL queries executed by a single user.",
      "A mechanism to backup and restore the entire database.",
      "A way to improve the speed of individual queries through indexing."
    ],
    "context": "A transaction is a single logical unit of work performed on a database. It's designed to ensure data integrity even in the face of concurrent access and system failures. The ACID properties (Atomicity, Consistency, Isolation, Durability) are a set of guarantees that a transaction processing system must meet to ensure data validity.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Database Management Systems",
    "subtopic": "Transactions, Concurrency Control",
    "question": "Consider two concurrent transactions, T1 and T2, where T1 reads a value, T2 updates it, and then T1 reads the value again, seeing a different value. What type of concurrency anomaly is this scenario an example of, and what isolation level aims to prevent it?",
    "correct_answer": "Non-repeatable Read; Read Committed or higher (e.g., Repeatable Read).",
    "distractors": [
      "Dirty Read; Read Uncommitted.",
      "Phantom Read; Serializable.",
      "Lost Update; Read Committed."
    ],
    "context": "A non-repeatable read occurs when a transaction reads the same row twice but gets different values each time because another committed transaction modified that row between the two reads. The 'Read Committed' isolation level prevents dirty reads, but not non-repeatable reads. 'Repeatable Read' isolation level specifically aims to prevent non-repeatable reads by ensuring that a transaction sees the same data if it re-reads it.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Database Management Systems",
    "subtopic": "Transactions, Concurrency Control",
    "question": "Two-Phase Locking (2PL) is a common concurrency control protocol. What is the primary property that 2PL ensures for concurrent transactions, and what is a potential drawback?",
    "correct_answer": "Serializability; potential for deadlocks.",
    "distractors": [
      "High concurrency; guaranteed freedom from deadlocks.",
      "Reduced transaction rollback; increased throughput.",
      "Strict isolation; minimal overhead."
    ],
    "context": "Two-Phase Locking (2PL) is a widely used concurrency control protocol that ensures serializability, meaning that concurrent transactions produce the same result as some serial execution of those transactions. It operates in two phases: a growing phase (acquiring locks) and a shrinking phase (releasing locks). A significant drawback of 2PL is its susceptibility to deadlocks, as transactions may hold locks and wait for others that are held by other waiting transactions.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Database Management Systems",
    "subtopic": "Indexing and File Organization",
    "question": "A database administrator needs to significantly speed up queries that involve searching for records based on a non-key attribute (e.g., finding all students whose 'major' is 'Computer Science'). Which type of index would be most appropriate for this scenario?",
    "correct_answer": "Secondary Index",
    "distractors": [
      "Primary Index",
      "Clustered Index",
      "Hash Index"
    ],
    "context": "A secondary index is created on non-key attributes of a relation. It provides a way to access records quickly based on values in these attributes without requiring the table to be sorted. Unlike a primary or clustered index, a secondary index does not determine the physical order of data records, and there can be multiple secondary indexes on a single table.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Database Management Systems",
    "subtopic": "Indexing and File Organization",
    "question": "What is the primary advantage of a 'clustered index' over a 'non-clustered index' in a relational database?",
    "correct_answer": "The data rows themselves are stored in the same physical order as the index, leading to faster retrieval for range queries.",
    "distractors": [
      "It allows for multiple clustered indexes on the same table.",
      "It requires less disk space than a non-clustered index.",
      "It is always faster for exact key lookups."
    ],
    "context": "A clustered index defines the physical order of the data rows in the table. This means that when data is retrieved using the clustered index, the disk I/O operations are minimized, especially for range queries, as the data is already sorted and stored contiguously. A table can have only one clustered index.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Database Management Systems",
    "subtopic": "Indexing and File Organization",
    "question": "A database needs to store customer records and frequently retrieve them based on their unique 'CustomerID'. Which file organization method directly supports fast retrieval of records based on the value of a key that is used to order the records physically?",
    "correct_answer": "Sequential File Organization (with primary index)",
    "distractors": [
      "Heap File Organization",
      "Hash File Organization",
      "B+ Tree File Organization (if not primary key ordered)"
    ],
    "context": "Sequential file organization stores records in sequential order based on a search key (often the primary key). While it requires sorting, it allows for efficient retrieval of records based on that key, especially for range queries. A primary index is often built on top of a sequential file to quickly locate the starting block of records for a given key, providing faster direct access.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Computer Networks",
    "subtopic": "OSI and TCP/IP Models",
    "question": "Which layer of the OSI model is responsible for reliable end-to-end communication?",
    "correct_answer": "Transport Layer",
    "distractors": ["Network Layer", "Data Link Layer", "Session Layer"],
    "context": "The Transport Layer ensures reliable end-to-end communication, flow control, and error handling in the OSI model.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Computer Networks",
    "subtopic": "OSI and TCP/IP Models",
    "question": "Which protocol operates at the Network Layer of the TCP/IP model to route packets between devices?",
    "correct_answer": "IP",
    "distractors": ["TCP", "HTTP", "ARP"],
    "context": "IP (Internet Protocol) is a core protocol at the Network Layer in the TCP/IP model used for logical addressing and routing.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Computer Networks",
    "subtopic": "Routing Algorithms",
    "question": "Which routing algorithm updates the routing table based on the distance to the destination?",
    "correct_answer": "Distance Vector Routing",
    "distractors": ["Link State Routing", "Flooding", "Static Routing"],
    "context": "Distance Vector Routing calculates the best path by considering the number of hops to the destination and shares this information periodically.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Computer Networks",
    "subtopic": "Routing Algorithms",
    "question": "Which algorithm uses the shortest path first method based on the entire network topology?",
    "correct_answer": "Link State Routing",
    "distractors": ["Distance Vector Routing", "Bellman-Ford Algorithm", "Path Vector Routing"],
    "context": "Link State Routing algorithms have complete knowledge of the network topology and use Dijkstra’s algorithm to compute the shortest paths.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Computer Networks",
    "subtopic": "Congestion Control",
    "question": "Which congestion control mechanism in TCP increases the window size exponentially during the start of transmission?",
    "correct_answer": "Slow Start",
    "distractors": ["Congestion Avoidance", "Fast Retransmit", "Additive Increase"],
    "context": "TCP uses Slow Start to gradually increase the congestion window size to avoid sudden network congestion.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Computer Networks",
    "subtopic": "Congestion Control",
    "question": "What happens to the congestion window in TCP when a packet loss is detected?",
    "correct_answer": "The window size is reduced and slow start is reinitiated",
    "distractors": ["The window size is increased linearly", "The connection is terminated", "The window size is doubled"],
    "context": "TCP interprets packet loss as a sign of congestion and reduces the congestion window, often restarting with the slow start phase.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Computer Networks",
    "subtopic": "Congestion Control",
    "question": "Which technique is used in congestion control to notify the sender about congestion without dropping packets?",
    "correct_answer": "Explicit Congestion Notification (ECN)",
    "distractors": ["Slow Start", "Fast Recovery", "AIMD"],
    "context": "ECN is a network congestion avoidance mechanism that signals the sender to reduce transmission rate without dropping packets.",
    "difficulty": "advance",
    "type": "mcq"
  },
   {
    "goal": "GATE CSE",
    "topic": "OSI and TCP/IP Models",
    "subtopic": "Layer Functions",
    "question": "Which layer of the OSI model is responsible for end-to-end delivery of data segments?",
    "correct_answer": "Transport Layer",
    "distractors": [
      "Network Layer",
      "Session Layer",
      "Data Link Layer"
    ],
    "context": "The Transport Layer (Layer 4) in OSI model provides end-to-end communication services, including reliable data delivery, error recovery, and flow control between applications on different hosts.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "OSI and TCP/IP Models",
    "subtopic": "Protocol Mapping",
    "question": "Which TCP/IP layer corresponds to both Session and Presentation layers of OSI model?",
    "correct_answer": "Application Layer",
    "distractors": [
      "Transport Layer",
      "Internet Layer",
      "Network Interface Layer"
    ],
    "context": "TCP/IP model has fewer layers than OSI. The Application Layer in TCP/IP combines the functionality of Session, Presentation, and Application layers from the OSI model into a single layer.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Routing Algorithms",
    "subtopic": "Distance Vector Routing",
    "question": "What is the main problem associated with Distance Vector routing protocol?",
    "correct_answer": "Count-to-infinity problem",
    "distractors": [
      "High memory overhead",
      "Complex computation requirements",
      "Frequent topology broadcasts"
    ],
    "context": "Distance Vector routing suffers from the count-to-infinity problem where bad news (link failures) propagates slowly through the network, causing routing loops and convergence delays.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Routing Algorithms",
    "subtopic": "Link State Routing",
    "question": "Which algorithm is used by Link State routing protocols to calculate shortest paths?",
    "correct_answer": "Dijkstra's algorithm",
    "distractors": [
      "Bellman-Ford algorithm",
      "Floyd-Warshall algorithm",
      "Prim's algorithm"
    ],
    "context": "Link State routing protocols like OSPF use Dijkstra's algorithm to compute shortest path tree from each node to all other nodes in the network topology database.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Routing Algorithms",
    "subtopic": "BGP Protocol",
    "question": "What type of routing protocol is BGP (Border Gateway Protocol)?",
    "correct_answer": "Path Vector protocol",
    "distractors": [
      "Distance Vector protocol",
      "Link State protocol",
      "Hybrid protocol"
    ],
    "context": "BGP is a Path Vector protocol that maintains the path information (sequence of ASes) to reach each destination, preventing routing loops and enabling policy-based routing decisions.",
    "difficulty": "advanced",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Congestion Control",
    "subtopic": "TCP Congestion Control",
    "question": "In TCP's congestion control, what happens to the congestion window when a timeout occurs?",
    "correct_answer": "Reset to 1 MSS and slow start begins",
    "distractors": [
      "Reduced to half of current size",
      "Increased by 1 MSS",
      "Remains unchanged"
    ],
    "context": "When a timeout occurs in TCP, it indicates severe congestion. The congestion window is reset to 1 Maximum Segment Size (MSS) and the slow start phase begins to probe network capacity conservatively.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Congestion Control",
    "subtopic": "Active Queue Management",
    "question": "What is the primary advantage of Random Early Detection (RED) over traditional drop-tail queuing?",
    "correct_answer": "Prevents global synchronization of TCP flows",
    "distractors": [
      "Increases overall network throughput",
      "Reduces packet processing overhead",
      "Eliminates all packet drops"
    ],
    "context": "RED randomly drops packets before the queue becomes full, preventing global synchronization where multiple TCP connections simultaneously reduce their sending rates, leading to better network utilization.",
    "difficulty": "advanced",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Computer Networks",
    "subtopic": "OSI Model",
    "question": "Which layer of the OSI model is responsible for establishing, maintaining, and terminating connections between devices?",
    "correct_answer": "Session Layer",
    "distractors": ["Transport Layer", "Network Layer", "Application Layer"],
    "context": "The Session Layer (Layer 5) in the OSI model manages communication sessions, handling the setup, coordination, and termination of connections between applications.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Computer Networks",
    "subtopic": "TCP/IP Model",
    "question": "Which layer in the TCP/IP model corresponds to both the Network and Data Link layers of the OSI model?",
    "correct_answer": "Internet Layer",
    "distractors": ["Transport Layer", "Application Layer", "Link Layer"],
    "context": "The Internet Layer in the TCP/IP model handles packet routing and addressing, corresponding to the OSI model’s Network Layer (routing) and part of the Data Link Layer (logical addressing).",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Computer Networks",
    "subtopic": "Routing Algorithms",
    "question": "Which routing algorithm calculates the shortest path to all destinations from a single source using a greedy approach?",
    "correct_answer": "Dijkstra’s Algorithm",
    "distractors": ["Bellman-Ford Algorithm", "Flooding", "Distance Vector Routing"],
    "context": "Dijkstra’s Algorithm computes the shortest paths from a source to all other nodes in a weighted graph using a greedy approach, selecting the node with the smallest tentative distance.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Computer Networks",
    "subtopic": "Routing Algorithms",
    "question": "Which routing algorithm exchanges routing tables between neighboring routers to determine the best paths?",
    "correct_answer": "Distance Vector Routing",
    "distractors": ["Link State Routing", "Path Vector Protocol", "Flooding"],
    "context": "Distance Vector Routing involves routers sharing their routing tables with neighbors, using algorithms like Bellman-Ford to compute the least-cost paths based on hop distances.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Computer Networks",
    "subtopic": "Congestion Control",
    "question": "Which congestion control mechanism in TCP adjusts the sending rate based on the detection of packet loss?",
    "correct_answer": "Additive Increase Multiplicative Decrease",
    "distractors": ["Leaky Bucket", "Token Bucket", "Random Early Detection"],
    "context": "Additive Increase Multiplicative Decrease (AIMD) in TCP gradually increases the congestion window on successful delivery and reduces it multiplicatively upon packet loss to manage network congestion.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Computer Networks",
    "subtopic": "Congestion Control",
    "question": "Which congestion control algorithm proactively drops packets before the queue is full to signal congestion to senders?",
    "correct_answer": "Random Early Detection",
    "distractors": ["Stop-and-Wait", "Sliding Window", "Go-Back-N"],
    "context": "Random Early Detection (RED) drops packets probabilistically as the queue approaches capacity, signaling senders to reduce their transmission rate, thus preventing severe congestion.",
    "difficulty": "advanced",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Computer Networks",
    "subtopic": "Routing Algorithms",
    "question": "Which routing protocol uses a shortest path first approach and floods link-state information to all routers in the network?",
    "correct_answer": "OSPF",
    "distractors": ["RIP", "BGP", "EIGRP"],
    "context": "Open Shortest Path First (OSPF) is a link-state routing protocol that uses Dijkstra’s algorithm to compute shortest paths and floods link-state updates to maintain a consistent network topology.",
    "difficulty": "advanced",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Computer Networks",
    "subtopic": "OSI and TCP/IP Models",
    "question": "A network engineer is troubleshooting an issue where a client cannot establish a secure connection (HTTPS) to a web server. At which layer of the OSI model would the Secure Sockets Layer (SSL)/Transport Layer Security (TLS) protocol operate to provide encryption and authentication for this communication?",
    "correct_answer": "Presentation Layer (or Session/Application depending on strict interpretation)",
    "distractors": [
      "Network Layer",
      "Data Link Layer",
      "Transport Layer"
    ],
    "context": "While TLS/SSL operates conceptually between the Application and Transport layers, within the strict seven-layer OSI model, its functions (encryption, compression, formatting) are often associated with the Presentation Layer. Some interpretations also place it as part of the Session Layer for connection establishment or even directly within the Application Layer. However, Presentation Layer is the most commonly accepted answer for its core role in data representation and security for the application.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Computer Networks",
    "subtopic": "OSI and TCP/IP Models",
    "question": "Which layer in the TCP/IP model is responsible for logical addressing (IP addresses) and routing packets across different networks (inter-networking)?",
    "correct_answer": "Internet Layer",
    "distractors": [
      "Network Access Layer",
      "Transport Layer",
      "Application Layer"
    ],
    "context": "The Internet Layer (also known as the Network Layer in the OSI model) in the TCP/IP suite is responsible for the logical addressing of devices using IP addresses and for routing packets from the source host to the destination host across potentially multiple networks. This layer ensures end-to-end packet delivery.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Computer Networks",
    "subtopic": "Routing Algorithms",
    "question": "In a large, complex network, a dynamic routing protocol is needed that can quickly adapt to changes in network topology and link costs, and compute the shortest path to all other nodes. Which type of routing algorithm, exemplified by OSPF, fits this description?",
    "correct_answer": "Link-State Routing Algorithm",
    "distractors": [
      "Distance-Vector Routing Algorithm",
      "Static Routing",
      "Flooding"
    ],
    "context": "Link-State routing algorithms (like OSPF and IS-IS) require each router to have a complete map of the network topology. Routers exchange information about their directly connected links (link states). Each router then independently computes the shortest path to all other destinations using an algorithm like Dijkstra's. This provides fast convergence and robust adaptation to network changes.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Computer Networks",
    "subtopic": "Routing Algorithms",
    "question": "Which of the following routing algorithms uses Bellman-Ford's algorithm and relies on neighbors to exchange routing table information, potentially suffering from the 'count-to-infinity' problem?",
    "correct_answer": "Distance-Vector Routing Algorithm (e.g., RIP)",
    "distractors": [
      "Link-State Routing Algorithm (e.g., OSPF)",
      "Border Gateway Protocol (BGP)",
      "Source Routing"
    ],
    "context": "Distance-Vector routing algorithms (like RIP - Routing Information Protocol) work by having each router maintain a routing table that contains the distance (cost) to all known destinations. Routers periodically exchange their entire routing tables with their directly connected neighbors. These algorithms use the Bellman-Ford equation. A significant drawback is their susceptibility to the 'count-to-infinity' problem in certain network topologies, which can lead to routing loops.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Computer Networks",
    "subtopic": "Congestion Control",
    "question": "In the TCP protocol, when network congestion is detected (e.g., by packet loss), what is the primary mechanism TCP uses to reduce the amount of data injected into the network to alleviate the congestion?",
    "correct_answer": "Reducing the Congestion Window (cwnd)",
    "distractors": [
      "Increasing the Receiver Window (rwnd).",
      "Sending more packets with higher priority.",
      "Switching to a different routing path."
    ],
    "context": "TCP employs various congestion control mechanisms to prevent and react to network congestion. A key mechanism is the adjustment of the 'congestion window' (cwnd). When congestion is detected (typically through packet loss, inferred by timeouts or duplicate ACKs), TCP reduces the cwnd, thereby limiting the amount of data it sends into the network, thus easing the congestion.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Computer Networks",
    "subtopic": "Congestion Control",
    "question": "TCP's congestion control mechanism involves both 'slow start' and 'congestion avoidance' phases. What is the main characteristic of the 'slow start' phase?",
    "correct_answer": "Exponentially increasing the congestion window by one segment for every acknowledgment received.",
    "distractors": [
      "Linearly increasing the congestion window by one segment per Round Trip Time (RTT).",
      "Maintaining a fixed congestion window size.",
      "Immediately sending data at the maximum possible rate."
    ],
    "context": "During the slow start phase, TCP starts with a small congestion window and increases it exponentially. For every Acknowledgment (ACK) received, the congestion window is increased by one Maximum Segment Size (MSS). This rapid growth continues until the congestion window reaches a 'slow start threshold' (ssthresh), at which point it transitions to the congestion avoidance phase.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Computer Networks",
    "subtopic": "OSI and TCP/IP Models",
    "question": "A user is Browse a website, and their browser sends an HTTP request. Which layer in the TCP/IP model is directly responsible for handling this HTTP request and response, including the formatting of the application-specific data?",
    "correct_answer": "Application Layer",
    "distractors": [
      "Transport Layer",
      "Internet Layer",
      "Network Access Layer"
    ],
    "context": "The Application Layer in the TCP/IP model is the topmost layer and interacts directly with user applications. Protocols like HTTP, FTP, SMTP, and DNS reside at this layer. Its responsibilities include data formatting, presentation, and all application-specific services that allow users to interact with the network.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Computer Networks",
    "subtopic": "IPv4/IPv6",
    "question": "Which of the following features is supported in IPv6 but not in IPv4?",
    "correct_answer": "Larger address space",
    "distractors": ["Header checksum", "Broadcast communication", "ARP resolution"],
    "context": "IPv6 supports a 128-bit address space, which is significantly larger than the 32-bit space in IPv4.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Computer Networks",
    "subtopic": "DNS",
    "question": "Which service translates domain names to IP addresses in a computer network?",
    "correct_answer": "DNS",
    "distractors": ["DHCP", "ARP", "NAT"],
    "context": "The Domain Name System (DNS) is responsible for resolving human-readable domain names into IP addresses.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Computer Networks",
    "subtopic": "DHCP",
    "question": "Which protocol is used to dynamically assign IP addresses to devices on a network?",
    "correct_answer": "DHCP",
    "distractors": ["DNS", "SMTP", "ICMP"],
    "context": "DHCP (Dynamic Host Configuration Protocol) is used to automatically assign IP addresses and other network settings to devices.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Computer Networks",
    "subtopic": "TCP vs UDP",
    "question": "Which protocol provides reliable, connection-oriented data delivery?",
    "correct_answer": "TCP",
    "distractors": ["UDP", "HTTP", "FTP"],
    "context": "TCP ensures reliable data transfer with error checking, acknowledgments, and retransmissions.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Computer Networks",
    "subtopic": "Application Layer Protocols",
    "question": "Which protocol is primarily used for sending emails?",
    "correct_answer": "SMTP",
    "distractors": ["HTTP", "FTP", "POP3"],
    "context": "SMTP (Simple Mail Transfer Protocol) is used to send email messages between servers.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Computer Networks",
    "subtopic": "Application Layer Protocols",
    "question": "Which protocol is designed to transfer files between a client and server over a network?",
    "correct_answer": "FTP",
    "distractors": ["SMTP", "UDP", "DNS"],
    "context": "FTP (File Transfer Protocol) enables the transfer of files between computers on a TCP/IP network.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
   {
    "goal": "GATE CSE",
    "topic": "IPv4/IPv6, DNS, DHCP",
    "subtopic": "IPv6 Addressing",
    "question": "What is the length of an IPv6 address in bits?",
    "correct_answer": "128 bits",
    "distractors": [
      "32 bits",
      "64 bits",
      "256 bits"
    ],
    "context": "IPv6 addresses are 128 bits long, providing a much larger address space compared to IPv4's 32-bit addresses, allowing for approximately 3.4 × 10^38 unique addresses.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "IPv4/IPv6, DNS, DHCP",
    "subtopic": "DNS Record Types",
    "question": "Which DNS record type is used to map a domain name to an IPv6 address?",
    "correct_answer": "AAAA record",
    "distractors": [
      "A record",
      "CNAME record",
      "MX record"
    ],
    "context": "AAAA records in DNS are used to map domain names to IPv6 addresses, similar to how A records map domain names to IPv4 addresses, supporting the transition to IPv6.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "IPv4/IPv6, DNS, DHCP",
    "subtopic": "DHCP Process",
    "question": "What is the correct sequence of messages in the DHCP lease process?",
    "correct_answer": "DISCOVER, OFFER, REQUEST, ACK",
    "distractors": [
      "REQUEST, OFFER, DISCOVER, ACK",
      "OFFER, DISCOVER, ACK, REQUEST",
      "DISCOVER, REQUEST, OFFER, ACK"
    ],
    "context": "DHCP follows a four-step process: client sends DISCOVER to find servers, server responds with OFFER, client sends REQUEST to accept, and server confirms with ACK message.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "TCP, UDP, HTTP, FTP, SMTP",
    "subtopic": "TCP vs UDP",
    "question": "Which characteristic distinguishes TCP from UDP?",
    "correct_answer": "Connection-oriented with reliability guarantees",
    "distractors": [
      "Lower header overhead",
      "Faster data transmission",
      "Broadcast and multicast support"
    ],
    "context": "TCP is connection-oriented and provides reliability through acknowledgments, retransmissions, and flow control, while UDP is connectionless and offers no delivery guarantees but with lower overhead.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "TCP, UDP, HTTP, FTP, SMTP",
    "subtopic": "HTTP Status Codes",
    "question": "What does HTTP status code 404 indicate?",
    "correct_answer": "Requested resource not found on server",
    "distractors": [
      "Server internal error",
      "Unauthorized access attempt",
      "Request timeout occurred"
    ],
    "context": "HTTP 404 status code indicates that the server cannot find the requested resource, meaning the URL is invalid or the resource has been moved or deleted from the server.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "TCP, UDP, HTTP, FTP, SMTP",
    "subtopic": "SMTP Protocol",
    "question": "Which port number is typically used by SMTP for sending emails?",
    "correct_answer": "25",
    "distractors": [
      "21",
      "80",
      "110"
    ],
    "context": "SMTP (Simple Mail Transfer Protocol) typically uses port 25 for sending emails between mail servers, while port 587 is used for email submission from clients to servers with authentication.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Computer Networks",
    "subtopic": "IPv4/IPv6",
    "question": "Which protocol version uses a 128-bit address space to overcome the address exhaustion problem of its predecessor?",
    "correct_answer": "IPv6",
    "distractors": ["IPv4", "ICMP", "ARP"],
    "context": "IPv6 uses a 128-bit address space, providing a vastly larger number of addresses compared to IPv4’s 32-bit addresses, addressing the issue of address exhaustion in modern networks.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Computer Networks",
    "subtopic": "DNS",
    "question": "Which protocol is used to translate domain names into IP addresses in a network?",
    "correct_answer": "DNS",
    "distractors": ["DHCP", "SNMP", "NTP"],
    "context": "The Domain Name System (DNS) resolves human-readable domain names (e.g., www.example.com) into IP addresses, enabling communication between devices on the internet.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Computer Networks",
    "subtopic": "DHCP",
    "question": "Which protocol dynamically assigns IP addresses to devices in a network?",
    "correct_answer": "DHCP",
    "distractors": ["DNS", "RARP", "BOOTP"],
    "context": "The Dynamic Host Configuration Protocol (DHCP) automatically assigns IP addresses and network configuration parameters to devices, simplifying network management.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Computer Networks",
    "subtopic": "TCP",
    "question": "Which transport layer protocol provides reliable, connection-oriented data transmission with flow control?",
    "correct_answer": "TCP",
    "distractors": ["UDP", "ICMP", "SCTP"],
    "context": "Transmission Control Protocol (TCP) ensures reliable data delivery through connection establishment, error checking, and flow control, suitable for applications requiring guaranteed delivery.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Computer Networks",
    "subtopic": "UDP",
    "question": "Which protocol is best suited for real-time applications like video streaming due to its low overhead and lack of retransmission?",
    "correct_answer": "UDP",
    "distractors": ["TCP", "HTTP", "RTP"],
    "context": "User Datagram Protocol (UDP) is a connectionless protocol with minimal overhead, ideal for real-time applications like video streaming where speed is prioritized over reliability.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Computer Networks",
    "subtopic": "HTTP",
    "question": "Which application layer protocol uses a stateless, request-response model to retrieve web resources?",
    "correct_answer": "HTTP",
    "distractors": ["FTP", "SMTP", "Telnet"],
    "context": "Hypertext Transfer Protocol (HTTP) operates at the application layer, using a stateless request-response model to retrieve web resources like HTML pages, commonly used in web browsers.",
    "difficulty": "advanced",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Computer Networks",
    "subtopic": "IPv4/IPv6, DNS, DHCP",
    "question": "A large organization is deploying a new network and faces the challenge of IP address depletion with IPv4. Which version of the Internet Protocol offers a significantly larger address space to accommodate the growing number of connected devices globally?",
    "correct_answer": "IPv6",
    "distractors": [
      "IPv4 with NAT",
      "ARP (Address Resolution Protocol)",
      "ICMP (Internet Control Message Protocol)"
    ],
    "context": "IPv4 uses 32-bit addresses, allowing for approximately 4.3 billion unique addresses, which are rapidly depleting. IPv6, on the other hand, uses 128-bit addresses, providing an astronomically larger address space (2^128 unique addresses), designed to overcome the limitations of IPv4 and support the vast expansion of the internet and IoT devices.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Computer Networks",
    "subtopic": "IPv4/IPv6, DNS, DHCP",
    "question": "When a new device connects to a network and needs to automatically obtain an IP address, subnet mask, default gateway, and DNS server addresses, which protocol is typically used for this dynamic configuration?",
    "correct_answer": "DHCP (Dynamic Host Configuration Protocol)",
    "distractors": [
      "DNS (Domain Name System)",
      "ARP (Address Resolution Protocol)",
      "ICMP (Internet Control Message Protocol)"
    ],
    "context": "DHCP (Dynamic Host Configuration Protocol) is a network management protocol used on Internet Protocol (IP) networks for dynamically distributing network configuration parameters, such as IP addresses, to devices connected to the network. This automation simplifies network administration and allows devices to seamlessly join and leave the network.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Computer Networks",
    "subtopic": "TCP, UDP, HTTP, FTP, SMTP",
    "question": "For a video streaming application where real-time delivery and minimal delay are more critical than guaranteeing every single packet arrives, which transport layer protocol would be more suitable?",
    "correct_answer": "UDP (User Datagram Protocol)",
    "distractors": [
      "TCP (Transmission Control Protocol)",
      "SCTP (Stream Control Transmission Protocol)",
      "HTTP (Hypertext Transfer Protocol)"
    ],
    "context": "UDP is a connectionless and unreliable transport layer protocol. It provides minimal services compared to TCP, such as no guaranteed delivery, no flow control, and no congestion control. However, its simplicity and lower overhead make it ideal for applications where speed and low latency are prioritized over absolute reliability, such as real-time video streaming, online gaming, and DNS lookups.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Computer Networks",
    "subtopic": "TCP, UDP, HTTP, FTP, SMTP",
    "question": "A web browser sends a request to a web server to retrieve a webpage. Which application layer protocol is used for this communication, and what transport layer protocol does it typically rely on for reliable data transfer?",
    "correct_answer": "HTTP, relying on TCP",
    "distractors": [
      "FTP, relying on UDP",
      "SMTP, relying on TCP",
      "DNS, relying on UDP"
    ],
    "context": "HTTP (Hypertext Transfer Protocol) is the foundation of data communication for the World Wide Web, used for fetching resources like HTML documents. HTTP is an application layer protocol that relies on TCP (Transmission Control Protocol) at the transport layer to provide reliable, ordered, and error-checked delivery of data streams between the client and server.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Computer Networks",
    "subtopic": "IPv4/IPv6, DNS, DHCP",
    "question": "Before a web browser can connect to 'www.example.com', it needs to translate the human-readable domain name into an IP address. Which hierarchical and distributed network service is responsible for this translation?",
    "correct_answer": "DNS (Domain Name System)",
    "distractors": [
      "ARP (Address Resolution Protocol)",
      "NAT (Network Address Translation)",
      "DHCP (Dynamic Host Configuration Protocol)"
    ],
    "context": "DNS (Domain Name System) is a distributed naming system for computers, services, or any resource connected to the Internet or a private network. It translates easily memorized domain names (like 'www.example.com') into numerical IP addresses, which are necessary for locating and identifying computer services and devices with the underlying network protocols.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Computer Networks",
    "subtopic": "TCP, UDP, HTTP, FTP, SMTP",
    "question": "A software developer is implementing a file transfer utility that requires guaranteed delivery of data, flow control, and congestion control to ensure reliable and efficient transmission of large files over a network. Which transport layer protocol should be chosen for this application?",
    "correct_answer": "TCP (Transmission Control Protocol)",
    "distractors": [
      "UDP (User Datagram Protocol)",
      "ICMP (Internet Control Message Protocol)",
      "RTP (Real-time Transport Protocol)"
    ],
    "context": "TCP (Transmission Control Protocol) is a connection-oriented, reliable transport layer protocol. It provides features like guaranteed delivery of data, in-order packet delivery, flow control (preventing a fast sender from overwhelming a slow receiver), and congestion control (adapting to network conditions). These features are crucial for applications where data integrity and reliability are paramount, such as file transfers (FTP, HTTP) and email (SMTP).",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Computer Organization",
    "subtopic": "Number Systems",
    "question": "Which number system uses only the digits 0 and 1 and is fundamental to digital electronics?",
    "correct_answer": "Binary",
    "distractors": ["Decimal", "Octal", "Hexadecimal"],
    "context": "Binary number system, using only 0s and 1s, is the foundation of all digital systems.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Computer Organization",
    "subtopic": "ALU Design",
    "question": "What is the primary function of an Arithmetic Logic Unit (ALU)?",
    "correct_answer": "To perform arithmetic and logical operations",
    "distractors": ["To store data", "To manage memory", "To decode instructions"],
    "context": "The ALU performs all arithmetic and logic operations in a CPU.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Computer Organization",
    "subtopic": "Instruction Formats",
    "question": "In which instruction format are both operands specified directly in the instruction?",
    "correct_answer": "Register addressing",
    "distractors": ["Immediate addressing", "Indirect addressing", "Indexed addressing"],
    "context": "Register addressing format specifies both operands within registers directly in the instruction.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Computer Organization",
    "subtopic": "Pipelining",
    "question": "What is a major advantage of pipelining in a processor?",
    "correct_answer": "Increased instruction throughput",
    "distractors": ["Reduced memory size", "Simplified control unit", "Elimination of cache"],
    "context": "Pipelining increases instruction throughput by overlapping execution phases of multiple instructions.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Computer Organization",
    "subtopic": "Instruction Formats",
    "question": "Which field in an instruction format typically holds the operation to be performed?",
    "correct_answer": "Opcode field",
    "distractors": ["Operand field", "Address field", "Status field"],
    "context": "The opcode field in an instruction specifies the operation to be performed.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Computer Organization",
    "subtopic": "Pipelining",
    "question": "Which type of pipeline hazard occurs when an instruction depends on the result of a previous instruction?",
    "correct_answer": "Data hazard",
    "distractors": ["Control hazard", "Structural hazard", "Fetch hazard"],
    "context": "Data hazards occur in pipelining when instructions that exhibit data dependency are executed concurrently.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Computer Organization",
    "subtopic": "ALU Design",
    "question": "Which component is used in ALUs to determine the sign of the result in arithmetic operations?",
    "correct_answer": "Sign bit",
    "distractors": ["Carry flag", "Instruction register", "Overflow flag"],
    "context": "The sign bit in the result determines whether the output is positive or negative.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Number Systems, ALU Design",
    "subtopic": "Two's Complement",
    "question": "What is the range of numbers that can be represented using 8-bit two's complement notation?",
    "correct_answer": "-128 to +127",
    "distractors": [
      "-127 to +128",
      "0 to 255",
      "-255 to +255"
    ],
    "context": "In n-bit two's complement representation, the range is from -2^(n-1) to 2^(n-1)-1. For 8 bits, this gives -2^7 to 2^7-1, which is -128 to +127.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Number Systems, ALU Design",
    "subtopic": "ALU Operations",
    "question": "Which ALU operation is typically used to implement multiplication of two numbers by repeated addition?",
    "correct_answer": "Shift and Add",
    "distractors": [
      "Booth's Algorithm",
      "Wallace Tree",
      "Carry Save Addition"
    ],
    "context": "Shift and Add method implements multiplication by examining each bit of the multiplier and performing addition and left shifts, effectively performing repeated addition with positional scaling.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Number Systems, ALU Design",
    "subtopic": "Floating Point Representation",
    "question": "In IEEE 754 single precision format, how many bits are allocated for the exponent field?",
    "correct_answer": "8 bits",
    "distractors": [
      "11 bits",
      "23 bits",
      "1 bit"
    ],
    "context": "IEEE 754 single precision (32-bit) format allocates 1 bit for sign, 8 bits for exponent, and 23 bits for mantissa, allowing representation of a wide range of floating-point numbers.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Instruction Formats",
    "subtopic": "Addressing Modes",
    "question": "In which addressing mode is the operand's address calculated by adding a constant to a register's content?",
    "correct_answer": "Indexed addressing",
    "distractors": [
      "Direct addressing",
      "Immediate addressing",
      "Register indirect addressing"
    ],
    "context": "Indexed addressing mode calculates the effective address by adding a displacement or index value to the contents of a base register, commonly used for array access and data structure traversal.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Instruction Formats",
    "subtopic": "RISC vs CISC",
    "question": "What is a characteristic feature of RISC (Reduced Instruction Set Computer) architecture?",
    "correct_answer": "Fixed-length instruction format",
    "distractors": [
      "Variable-length instruction format",
      "Complex addressing modes",
      "Microcode-based instruction execution"
    ],
    "context": "RISC architecture uses fixed-length instruction formats to simplify instruction decoding and enable efficient pipelining, contrasting with CISC's variable-length instructions.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Pipelining",
    "subtopic": "Pipeline Hazards",
    "question": "What type of hazard occurs when an instruction depends on the result of a previous instruction that hasn't completed execution?",
    "correct_answer": "Data hazard (RAW dependency)",
    "distractors": [
      "Structural hazard",
      "Control hazard",
      "Cache miss hazard"
    ],
    "context": "Data hazards, specifically Read-After-Write (RAW) dependencies, occur when an instruction needs data from a previous instruction that hasn't finished writing its result, requiring pipeline stalling or forwarding.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Pipelining",
    "subtopic": "Pipeline Performance",
    "question": "In a 5-stage pipeline with 10 instructions and no hazards, what is the total number of clock cycles required?",
    "correct_answer": "14 cycles",
    "distractors": [
      "10 cycles",
      "15 cycles",
      "50 cycles"
    ],
    "context": "Pipeline execution time = (Number of stages - 1) + Number of instructions. For 5 stages and 10 instructions: (5-1) + 10 = 14 cycles, assuming no stalls or hazards.",
    "difficulty": "advanced",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Computer Organization",
    "subtopic": "Number Systems",
    "question": "Which number system uses 16 distinct symbols to represent values, commonly used in memory addresses?",
    "correct_answer": "Hexadecimal",
    "distractors": ["Binary", "Octal", "Decimal"],
    "context": "The hexadecimal number system uses 16 symbols (0-9 and A-F) to represent values, widely used in computing for compact representation of memory addresses and binary data.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Computer Organization",
    "subtopic": "Number Systems",
    "question": "Which representation is used to store negative integers using a fixed number of bits, with the most significant bit indicating the sign?",
    "correct_answer": "Sign-Magnitude",
    "distractors": ["One’s Complement", "Two’s Complement", "Gray Code"],
    "context": "Sign-Magnitude representation uses the most significant bit to indicate the sign (0 for positive, 1 for negative) and the remaining bits for the magnitude, commonly used in early computer systems.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Computer Organization",
    "subtopic": "ALU Design",
    "question": "Which component of the ALU performs logical operations like AND, OR, and NOT on binary inputs?",
    "correct_answer": "Logic Unit",
    "distractors": ["Arithmetic Unit", "Control Unit", "Shift Unit"],
    "context": "The Logic Unit in the Arithmetic Logic Unit (ALU) handles logical operations such as AND, OR, and NOT, enabling bitwise computations essential for processing in CPUs.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Computer Organization",
    "subtopic": "Instruction Formats",
    "question": "Which instruction format uses a fixed number of bits for the opcode and allocates remaining bits for operands and addressing modes?",
    "correct_answer": "Fixed-Length Instruction Format",
    "distractors": ["Variable-Length Instruction Format", "RISC Instruction Format", "CISC Instruction Format"],
    "context": "Fixed-Length Instruction Format uses a consistent number of bits for each instruction, simplifying decoding in pipelined architectures but potentially wasting space for simple operations.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Computer Organization",
    "subtopic": "Pipelining",
    "question": "Which pipelining hazard occurs when an instruction depends on the result of a previous instruction that is still in the pipeline?",
    "correct_answer": "Data Hazard",
    "distractors": ["Control Hazard", "Structural Hazard", "Instruction Hazard"],
    "context": "A Data Hazard occurs in pipelining when an instruction requires data that a previous instruction, still in the pipeline, has not yet produced, potentially causing incorrect execution.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Computer Organization",
    "subtopic": "ALU Design",
    "question": "Which ALU operation requires a carry-in bit to handle multi-bit addition correctly?",
    "correct_answer": "Full Adder",
    "distractors": ["Half Adder", "Multiplexer", "Comparator"],
    "context": "A Full Adder in the ALU performs binary addition on two bits and a carry-in bit, producing a sum and carry-out, essential for multi-bit arithmetic operations in processors.",
    "difficulty": "advanced",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Computer Organization",
    "subtopic": "Pipelining",
    "question": "Which technique resolves control hazards in pipelining by predicting the outcome of a branch instruction?",
    "correct_answer": "Branch Prediction",
    "distractors": ["Data Forwarding", "Out-of-Order Execution", "Cache Coherence"],
    "context": "Branch Prediction anticipates the outcome of branch instructions to keep the pipeline full, reducing stalls caused by control hazards, with techniques like static or dynamic prediction.",
    "difficulty": "advanced",
    "type": "mcq"
  },
   {
    "goal": "GATE CSE",
    "topic": "Computer Architecture",
    "subtopic": "Number Systems, ALU Design",
    "question": "A digital circuit needs to perform binary subtraction using 2's complement arithmetic. If a number is represented by 'n' bits, what is the range of signed integers that can be represented using this method?",
    "correct_answer": "$-2^{n-1}$ to $2^{n-1} - 1$",
    "distractors": [
      "$0$ to $2^n - 1$",
      "$-2^{n-1} + 1$ to $2^{n-1}$",
      "$-2^n$ to $2^n$"
    ],
    "context": "Two's complement is the most common method of representing signed integers in computer systems. For an n-bit representation, one bit is used for the sign (most significant bit), and the remaining n-1 bits represent the magnitude. This allows for an asymmetric range from $-2^{n-1}$ to $2^{n-1} - 1$, with one more negative number than positive numbers.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Computer Architecture",
    "subtopic": "Number Systems, ALU Design",
    "question": "In the design of an Arithmetic Logic Unit (ALU), what is the primary advantage of using a 'Carry-Lookahead Adder' compared to a 'Ripple-Carry Adder' for performing binary addition?",
    "correct_answer": "Significantly faster addition by computing carries in parallel, reducing propagation delay.",
    "distractors": [
      "Requires less hardware (fewer logic gates).",
      "Simpler design and implementation.",
      "Handles floating-point numbers more efficiently."
    ],
    "context": "A Ripple-Carry Adder suffers from a long propagation delay because the carry-out of each full adder stage must ripple through to the next stage sequentially. A Carry-Lookahead Adder solves this by generating carry signals in parallel, based on the input bits and initial carry, thereby dramatically speeding up addition for larger word lengths. This is crucial for high-performance processors.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Computer Architecture",
    "subtopic": "Instruction Formats",
    "question": "A computer architecture uses a 'three-address instruction' format. What is the typical structure and benefit of this format compared to single-address or two-address formats?",
    "correct_answer": "Each instruction specifies two source operands and one destination operand, reducing the number of instructions per operation.",
    "distractors": [
      "Each instruction specifies only one operand, relying heavily on an accumulator.",
      "Each instruction specifies one source and one destination, requiring an extra register for temporary results.",
      "Instructions are always fixed-length, simplifying decoding but limiting operand flexibility."
    ],
    "context": "In a three-address instruction format, an instruction typically has the form `OPCODE Destination, Source1, Source2`. This means operations can often be performed with a single instruction, directly using two source values and storing the result in a designated destination. This reduces the total number of instructions needed for complex expressions, potentially simplifying compiler design and improving code density compared to formats that use fewer explicit operands.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Computer Architecture",
    "subtopic": "Instruction Formats",
    "question": "An embedded system's processor design prioritizes code density and minimal instruction decoding hardware. Which instruction format would be most suitable, typically seen in stack-based architectures, minimizing explicit operand addresses?",
    "correct_answer": "Zero-address instruction format (Stack-based)",
    "distractors": [
      "Three-address instruction format",
      "Two-address instruction format",
      "One-address (Accumulator-based) instruction format"
    ],
    "context": "In a zero-address (or stack-based) instruction format, operations implicitly take their operands from the top of a stack and push the result back onto the stack. This eliminates the need for explicit operand addresses in the instruction itself, leading to very compact code and simpler instruction decoding logic. While it requires a stack for operations, it's effective for code density in certain architectures.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Computer Architecture",
    "subtopic": "Pipelining",
    "question": "A CPU uses a 5-stage instruction pipeline (Fetch, Decode, Execute, Memory Access, Write Back). If two consecutive instructions are `ADD R1, R2, R3` and `SUB R4, R1, R5`, what type of hazard is most likely to occur, and how is it typically resolved?",
    "correct_answer": "Data Hazard (RAW dependence); using forwarding/bypassing or stalls.",
    "distractors": [
      "Control Hazard; using branch prediction.",
      "Structural Hazard; by providing more hardware resources.",
      "Instruction Hazard; by pre-fetching instructions."
    ],
    "context": "A data hazard (specifically, a Read-After-Write, or RAW, dependence) occurs when an instruction tries to read a register before a preceding instruction has written to it. In the given example, `SUB` needs the value of `R1` which is written by `ADD`. This is typically resolved by 'forwarding' (or 'bypassing'), where the result of the `ADD` instruction is forwarded directly from the execution stage to the execution stage of the `SUB` instruction, avoiding a stall, or by inserting stall cycles if forwarding isn't possible.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Computer Architecture",
    "subtopic": "Pipelining",
    "question": "What is the primary goal of implementing a pipeline in a CPU architecture?",
    "correct_answer": "To increase the throughput of instructions by overlapping their execution phases.",
    "distractors": [
      "To reduce the latency of individual instructions.",
      "To decrease the total power consumption of the CPU.",
      "To simplify the instruction set architecture (ISA)."
    ],
    "context": "Pipelining is a technique that divides the execution of an instruction into multiple stages (e.g., fetch, decode, execute). By allowing different stages of different instructions to execute concurrently, pipelining increases the 'throughput' (number of instructions completed per unit of time) of the CPU, even though the 'latency' (time for a single instruction to complete) might not decrease.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Computer Architecture",
    "subtopic": "Pipelining",
    "question": "A CPU pipeline is designed to have multiple stages. What is the maximum theoretical speedup achievable by an N-stage ideal pipeline compared to a non-pipelined processor for a long sequence of instructions?",
    "correct_answer": "N times",
    "distractors": [
      "2N times",
      "Log(N) times",
      "N/2 times"
    ],
    "context": "In an ideal N-stage pipeline, after the initial N-1 cycles to fill the pipeline, one instruction completes every clock cycle. A non-pipelined processor completes one instruction every N clock cycles. Therefore, for a sufficiently long sequence of instructions, the theoretical speedup is N times. In reality, hazards and imbalances between stages reduce this ideal speedup.",
    "difficulty": "advance",
    "type": "mcq"
  },
   {
    "goal": "GATE CSE",
    "topic": "Computer Organization",
    "subtopic": "Memory Hierarchy",
    "question": "Which level of memory in a computer system is the fastest but smallest in size?",
    "correct_answer": "Cache memory",
    "distractors": ["Main memory", "Virtual memory", "Secondary memory"],
    "context": "Cache memory is the fastest memory in the hierarchy, used to store frequently accessed data.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Computer Organization",
    "subtopic": "Memory Hierarchy",
    "question": "What is the primary purpose of virtual memory?",
    "correct_answer": "To give an illusion of a large main memory",
    "distractors": ["To store cache data", "To backup RAM", "To increase CPU speed"],
    "context": "Virtual memory allows programs to use more memory than physically available by using disk space.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Computer Organization",
    "subtopic": "I/O Organization",
    "question": "Which technique is used to transfer data directly between an I/O device and memory?",
    "correct_answer": "Direct Memory Access (DMA)",
    "distractors": ["Programmed I/O", "Memory-mapped I/O", "Interrupt-driven I/O"],
    "context": "DMA allows devices to bypass the CPU and directly transfer data to/from memory, improving efficiency.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Computer Organization",
    "subtopic": "RISC vs CISC",
    "question": "Which architecture uses a small set of simple instructions and aims for faster execution per instruction?",
    "correct_answer": "RISC",
    "distractors": ["CISC", "MIPS", "x86"],
    "context": "RISC (Reduced Instruction Set Computer) focuses on simple instructions for faster performance.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Computer Organization",
    "subtopic": "RISC vs CISC",
    "question": "Which of the following is a feature of CISC architecture?",
    "correct_answer": "Instructions can perform multiple operations",
    "distractors": ["All instructions take the same time", "Each instruction is one clock cycle", "No microcode usage"],
    "context": "CISC architecture supports complex instructions that perform multiple tasks, reducing code size.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Computer Organization",
    "subtopic": "I/O Organization",
    "question": "In interrupt-driven I/O, what happens when an I/O operation completes?",
    "correct_answer": "CPU is interrupted to handle the I/O completion",
    "distractors": ["CPU polls the device", "DMA starts automatically", "Instruction cache is flushed"],
    "context": "Interrupt-driven I/O allows the CPU to be interrupted upon I/O completion, improving efficiency over polling.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Computer Organization",
    "subtopic": "Memory Hierarchy",
    "question": "Which memory level is used when data is not found in the cache?",
    "correct_answer": "Main memory",
    "distractors": ["Register", "Hard disk", "ROM"],
    "context": "If data is not found in the cache, the system fetches it from the slower main memory.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Memory Hierarchy",
    "subtopic": "Cache Memory",
    "question": "What is the primary advantage of direct-mapped cache over fully associative cache?",
    "correct_answer": "Faster access time due to simpler hardware",
    "distractors": [
      "Lower miss rate",
      "Better cache utilization",
      "Reduced cache coherence overhead"
    ],
    "context": "Direct-mapped cache uses simple hardware with only one possible location for each memory block, enabling faster access time compared to fully associative cache which requires complex comparison logic for all cache lines.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Memory Hierarchy",
    "subtopic": "Virtual Memory",
    "question": "What happens when a page fault occurs in virtual memory system?",
    "correct_answer": "Operating system loads the required page from secondary storage",
    "distractors": [
      "Cache memory is flushed automatically",
      "Program execution terminates with error",
      "Virtual address is converted to physical address"
    ],
    "context": "A page fault occurs when a program references a page not currently in main memory, triggering the operating system to load the required page from secondary storage into main memory.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Memory Hierarchy",
    "subtopic": "Cache Performance",
    "question": "If a cache has a hit rate of 90% with access time 2ns, and main memory access time is 100ns, what is the average memory access time?",
    "correct_answer": "12ns",
    "distractors": [
      "10ns",
      "20ns",
      "102ns"
    ],
    "context": "Average Memory Access Time = Hit Rate × Cache Access Time + Miss Rate × (Cache Access Time + Main Memory Access Time). AMAT = 0.9×2 + 0.1×(2+100) = 1.8 + 10.2 = 12ns.",
    "difficulty": "advanced",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "I/O Organization",
    "subtopic": "DMA Transfer",
    "question": "What is the main benefit of DMA (Direct Memory Access) over programmed I/O?",
    "correct_answer": "CPU is freed from data transfer operations",
    "distractors": [
      "Higher data transfer speed",
      "Better error detection capability",
      "Lower power consumption"
    ],
    "context": "DMA allows I/O devices to transfer data directly to/from memory without CPU intervention, freeing the CPU to perform other tasks while data transfer occurs in parallel.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "I/O Organization",
    "subtopic": "Interrupt Handling",
    "question": "In interrupt-driven I/O, what determines the order in which multiple simultaneous interrupts are serviced?",
    "correct_answer": "Interrupt priority levels",
    "distractors": [
      "First-come-first-served basis",
      "Device access speed",
      "Program execution order"
    ],
    "context": "Interrupt priority levels determine the order of interrupt servicing when multiple interrupts occur simultaneously, with higher priority interrupts preempting lower priority ones.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "RISC vs CISC",
    "subtopic": "Instruction Characteristics",
    "question": "Which characteristic is typical of CISC (Complex Instruction Set Computer) architecture?",
    "correct_answer": "Variable-length instruction encoding",
    "distractors": [
      "Large number of general-purpose registers",
      "Single-cycle instruction execution",
      "Load-store architecture"
    ],
    "context": "CISC architectures use variable-length instruction encoding to accommodate complex instructions with different operand types and addressing modes, contrasting with RISC's fixed-length instructions.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "RISC vs CISC",
    "subtopic": "Performance Comparison",
    "question": "Why do RISC processors typically achieve better performance in pipelined execution compared to CISC processors?",
    "correct_answer": "Uniform instruction execution time enables efficient pipelining",
    "distractors": [
      "Higher clock frequency capabilities",
      "Larger cache memory sizes",
      "Better branch prediction accuracy"
    ],
    "context": "RISC processors have uniform, simple instructions that execute in predictable time, making pipeline design more efficient compared to CISC's variable execution time instructions that complicate pipeline timing.",
    "difficulty": "advanced",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Computer Organization",
    "subtopic": "Memory Hierarchy",
    "question": "Which level of the memory hierarchy provides the fastest access time but has the smallest storage capacity?",
    "correct_answer": "Cache Memory",
    "distractors": ["Main Memory", "Virtual Memory", "Secondary Memory"],
    "context": "Cache Memory is a small, fast memory located close to the CPU, used to store frequently accessed data, providing the fastest access time but limited by its high cost and small capacity.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Computer Organization",
    "subtopic": "Memory Hierarchy",
    "question": "Which memory management technique uses a page table to map logical addresses to physical addresses?",
    "correct_answer": "Virtual Memory",
    "distractors": ["Cache Memory", "Main Memory", "Register Memory"],
    "context": "Virtual Memory uses a page table to map logical addresses to physical addresses, allowing processes to use more memory than physically available by swapping data to disk.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Computer Organization",
    "subtopic": "I/O Organization",
    "question": "Which I/O technique allows the CPU to continue processing while the I/O device operates independently?",
    "correct_answer": "Direct Memory Access",
    "distractors": ["Programmed I/O", "Interrupt-Driven I/O", "Polling"],
    "context": "Direct Memory Access (DMA) enables I/O devices to transfer data directly to or from memory without CPU intervention, improving efficiency for large data transfers.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Computer Organization",
    "subtopic": "I/O Organization",
    "question": "Which mechanism is used to signal the CPU when an I/O device needs attention?",
    "correct_answer": "Interrupt",
    "distractors": ["Cache Coherence", "Bus Arbitration", "Memory Mapping"],
    "context": "An Interrupt is a signal sent by an I/O device to the CPU to indicate that it requires attention, allowing the CPU to handle I/O events asynchronously.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Computer Organization",
    "subtopic": "Memory Hierarchy",
    "question": "Which cache mapping technique stores a block in any cache line, requiring a tag to identify the memory address?",
    "correct_answer": "Fully Associative Mapping",
    "distractors": ["Direct Mapping", "Set-Associative Mapping", "Write-Through Mapping"],
    "context": "Fully Associative Mapping allows a memory block to be placed in any cache line, using a tag to identify the block’s address, maximizing flexibility but increasing search time.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Computer Organization",
    "subtopic": "RISC vs CISC",
    "question": "Which processor architecture uses a small set of simple, fixed-length instructions to improve execution speed?",
    "correct_answer": "RISC",
    "distractors": ["CISC", "VLIW", "EPIC"],
    "context": "Reduced Instruction Set Computing (RISC) uses a small, uniform set of fixed-length instructions, enabling faster execution through simplified decoding and pipelining.",
    "difficulty": "advanced",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Computer Organization",
    "subtopic": "RISC vs CISC",
    "question": "Which processor architecture supports complex instructions that may take multiple cycles to execute, reducing the number of instructions needed?",
    "correct_answer": "CISC",
    "distractors": ["RISC", "MIPS", "ARM"],
    "context": "Complex Instruction Set Computing (CISC) supports complex, variable-length instructions that can perform multiple operations, reducing the number of instructions but complicating pipelining.",
    "difficulty": "advanced",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Computer Architecture",
    "subtopic": "Memory Hierarchy (Cache, Main, Virtual)",
    "question": "A modern CPU uses a multi-level cache hierarchy. What is the primary purpose of introducing multiple levels of cache (e.g., L1, L2, L3) between the CPU and main memory?",
    "correct_answer": "To reduce the average memory access time by exploiting spatial and temporal locality.",
    "distractors": [
      "To increase the total physical memory capacity of the system.",
      "To eliminate the need for virtual memory.",
      "To directly connect all I/O devices to the CPU."
    ],
    "context": "The memory hierarchy (cache, main memory, secondary storage) is designed to bridge the speed gap between the fast CPU and slow main memory. Multiple levels of cache (L1 being fastest and smallest, L3 being slowest and largest) exploit the principles of locality (temporal and spatial) to ensure that frequently and recently accessed data is closer to the CPU, thereby significantly reducing the average memory access time.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Computer Architecture",
    "subtopic": "Memory Hierarchy (Cache, Main, Virtual)",
    "question": "In a paged virtual memory system, a 'page fault' occurs. What does this event signify, and what action does the operating system typically take in response?",
    "correct_answer": "The requested page is not in physical memory; the OS loads the page from secondary storage into a free frame.",
    "distractors": [
      "The CPU has detected an illegal memory access, causing a program termination.",
      "The cache has experienced a miss, and the data is fetched from main memory.",
      "The program has run out of available virtual address space."
    ],
    "context": "A page fault is an exception raised by the hardware when a program tries to access a memory page that is currently not loaded into physical memory (RAM). In response, the operating system's virtual memory manager traps the fault, locates the requested page on secondary storage (like a hard disk), loads it into an available physical memory frame, updates the page table, and then resumes the interrupted program.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Computer Architecture",
    "subtopic": "Memory Hierarchy (Cache, Main, Virtual)",
    "question": "Which cache mapping technique allows a memory block to be placed in *any* line of the cache, offering the greatest flexibility but requiring the most complex hardware for tag comparison?",
    "correct_answer": "Fully Associative Mapping",
    "distractors": [
      "Direct Mapping",
      "Set-Associative Mapping",
      "Indexed Mapping"
    ],
    "context": "In fully associative cache mapping, any block from main memory can be placed in any cache line. This provides the highest flexibility and potentially the lowest conflict misses. However, it requires a comparator for each cache line to check if the requested block is present, leading to complex and expensive hardware for larger caches.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Computer Architecture",
    "subtopic": "I/O Organization",
    "question": "A high-performance storage system needs to transfer large blocks of data between a disk controller and main memory without continuous CPU intervention. What I/O technique is specifically designed for this purpose, offloading data transfer responsibilities from the CPU?",
    "correct_answer": "Direct Memory Access (DMA)",
    "distractors": [
      "Programmed I/O (PIO)",
      "Interrupt-driven I/O",
      "Polling"
    ],
    "context": "Direct Memory Access (DMA) is a feature of computer systems that allows certain hardware subsystems (like disk drive controllers or network interface cards) to access main system memory (RAM) independently of the central processing unit (CPU). This significantly speeds up large data transfers by freeing the CPU to perform other tasks while the data transfer occurs in the background.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Computer Architecture",
    "subtopic": "I/O Organization",
    "question": "What is the primary advantage of using 'Interrupt-driven I/O' over 'Programmed I/O (Polling)' for managing peripheral devices?",
    "correct_answer": "The CPU is freed to perform other tasks while waiting for I/O operations to complete, improving CPU utilization.",
    "distractors": [
      "It eliminates the need for an operating system.",
      "It always results in faster data transfer rates.",
      "It simplifies the hardware design of peripheral devices."
    ],
    "context": "In Programmed I/O (Polling), the CPU continuously checks the status of an I/O device, wasting CPU cycles if the device is slow. Interrupt-driven I/O allows the CPU to proceed with other tasks after initiating an I/O operation. The I/O device generates an interrupt signal to the CPU only when it's ready for the next data transfer or has completed its operation, allowing the CPU to use its time more efficiently.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Computer Architecture",
    "subtopic": "RISC vs CISC",
    "question": "Which architectural philosophy emphasizes a small, highly optimized set of simple, fixed-length instructions, often executed in a single clock cycle, favoring hardware over microcode?",
    "correct_answer": "RISC (Reduced Instruction Set Computer)",
    "distractors": [
      "CISC (Complex Instruction Set Computer)",
      "VLIW (Very Long Instruction Word)",
      "Von Neumann Architecture"
    ],
    "context": "RISC (Reduced Instruction Set Computer) architecture is characterized by a small, highly optimized set of instructions, typically of fixed length, which can often be executed in a single clock cycle. This simplifies the CPU's control unit and pipelining, and emphasizes software (compilers) to achieve complex operations by combining simple instructions. This contrasts with CISC, which features a large, complex instruction set.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Computer Architecture",
    "subtopic": "RISC vs CISC",
    "question": "Compared to a RISC processor, what is a key characteristic of a CISC (Complex Instruction Set Computer) processor, particularly regarding its instruction set and implementation?",
    "correct_answer": "It has a large, complex instruction set with variable-length instructions, often implemented with microcode.",
    "distractors": [
      "It uses a load-store architecture, where only load and store instructions access memory.",
      "It primarily focuses on single-cycle execution for all instructions.",
      "It requires compilers to generate highly optimized and complex instruction sequences."
    ],
    "context": "CISC (Complex Instruction Set Computer) processors feature a large instruction set with many specialized instructions, some of which can perform multi-step operations (e.g., memory access, arithmetic, and conditional branching in one instruction). These instructions are often of variable length and are typically implemented using microcode, allowing for complex operations to be executed by a single instruction, potentially simplifying assembly programming but complicating hardware design and pipelining.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Digital Logic",
    "subtopic": "Logic Gates and Boolean Algebra",
    "question": "Which logic gate outputs true only when both its inputs are true?",
    "correct_answer": "AND gate",
    "distractors": ["OR gate", "XOR gate", "NAND gate"],
    "context": "An AND gate outputs true if and only if all its inputs are true.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Digital Logic",
    "subtopic": "Boolean Algebra",
    "question": "According to Boolean algebra, what is the result of A + A' (where A' is complement of A)?",
    "correct_answer": "1",
    "distractors": ["0", "A", "A'"],
    "context": "The Boolean expression A + A' always equals 1.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Digital Logic",
    "subtopic": "Combinational Circuits",
    "question": "Which combinational circuit selects one input out of many and forwards it to a single output line?",
    "correct_answer": "Multiplexer (MUX)",
    "distractors": ["Demultiplexer (DEMUX)", "Encoder", "Decoder"],
    "context": "A multiplexer selects one of many inputs to pass to the output.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Digital Logic",
    "subtopic": "Combinational Circuits",
    "question": "Which device converts binary information from 2^n input lines to n output lines?",
    "correct_answer": "Encoder",
    "distractors": ["Decoder", "Multiplexer", "Demultiplexer"],
    "context": "An encoder reduces multiple inputs into fewer outputs by encoding the active input.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Digital Logic",
    "subtopic": "Sequential Circuits",
    "question": "Which flip-flop changes state only on the triggering edge of the clock signal?",
    "correct_answer": "Edge-triggered flip-flop",
    "distractors": ["Level-triggered flip-flop", "SR flip-flop", "JK flip-flop"],
    "context": "Edge-triggered flip-flops respond to changes at the clock edge, enabling synchronous designs.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Digital Logic",
    "subtopic": "Sequential Circuits",
    "question": "In sequential circuits, what is the primary function of a finite state machine (FSM)?",
    "correct_answer": "To control sequences based on inputs and states",
    "distractors": ["To store binary data permanently", "To perform arithmetic operations", "To amplify signals"],
    "context": "FSMs control the sequence of operations by transitioning between states according to inputs.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Digital Logic",
    "subtopic": "Sequential Circuits",
    "question": "Which circuit counts the number of clock pulses applied to it?",
    "correct_answer": "Counter",
    "distractors": ["Shift register", "Multiplexer", "Decoder"],
    "context": "Counters keep track of the number of clock pulses for timing and control purposes.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Digital Logic",
    "subtopic": "Logic Gates",
    "question": "Which logic gate produces an output of 1 only when both inputs are 1?",
    "correct_answer": "AND Gate",
    "distractors": ["OR Gate", "XOR Gate", "NAND Gate"],
    "context": "An AND Gate outputs 1 only when all its inputs are 1, implementing the logical conjunction operation in digital circuits.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Digital Logic",
    "subtopic": "Boolean Algebra",
    "question": "Which Boolean algebra law states that A + A = A?",
    "correct_answer": "Idempotent Law",
    "distractors": ["Distributive Law", "Commutative Law", "Absorption Law"],
    "context": "The Idempotent Law in Boolean algebra states that A + A = A and A · A = A, simplifying expressions by eliminating redundant terms.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Digital Logic",
    "subtopic": "Combinational Circuits",
    "question": "Which combinational circuit selects one of many input lines and directs it to a single output line based on a selection input?",
    "correct_answer": "Multiplexer",
    "distractors": ["Demultiplexer", "Encoder", "Decoder"],
    "context": "A Multiplexer (MUX) selects one of several input signals based on a control input and forwards it to a single output, commonly used for data routing in digital systems.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Digital Logic",
    "subtopic": "Combinational Circuits",
    "question": "Which combinational circuit converts a binary input into a coded output representing the input’s position?",
    "correct_answer": "Encoder",
    "distractors": ["Decoder", "Multiplexer", "Demultiplexer"],
    "context": "An Encoder converts a single active input line into a binary code, typically used to reduce the number of bits needed to represent input signals, such as in keyboard encoding.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Digital Logic",
    "subtopic": "Sequential Circuits",
    "question": "Which sequential circuit element stores a single bit and changes its state based on a clock signal?",
    "correct_answer": "Flip-Flop",
    "distractors": ["Counter", "Register", "Shift Register"],
    "context": "A Flip-Flop is a basic sequential circuit element that stores one bit of data, changing its state on clock edges, serving as a building block for memory and registers.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Digital Logic",
    "subtopic": "Sequential Circuits",
    "question": "Which type of counter increments its value by one on each clock pulse, cycling through a fixed sequence?",
    "correct_answer": "Binary Counter",
    "distractors": ["Gray Code Counter", "Ring Counter", "Johnson Counter"],
    "context": "A Binary Counter is a sequential circuit that increments its count in binary on each clock pulse, cycling through 0 to 2^n - 1 for n bits, used in timers and frequency dividers.",
    "difficulty": "advanced",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Digital Logic",
    "subtopic": "Sequential Circuits",
    "question": "Which sequential circuit uses a finite set of states and transitions to model system behavior based on inputs and current state?",
    "correct_answer": "Finite State Machine",
    "distractors": ["Shift Register", "Counter", "Multiplexer"],
    "context": "A Finite State Machine (FSM) models a system with a finite number of states, transitioning based on inputs and current state, used in control units and protocol implementations.",
    "difficulty": "advanced",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Digital Logic",
    "subtopic": "Logic Gates and Boolean Algebra",
    "question": "A digital circuit needs to output '1' only when its two inputs are different. Which fundamental logic gate implements this exact functionality?",
    "correct_answer": "XOR (Exclusive OR) gate",
    "distractors": [
      "AND gate",
      "OR gate",
      "NOT gate"
    ],
    "context": "The XOR (Exclusive OR) gate is a fundamental logic gate whose output is '1' if the inputs are different, and '0' if the inputs are the same. This behavior is crucial for various digital operations, including parity checking and binary addition (sum bit).",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Digital Logic",
    "subtopic": "Logic Gates and Boolean Algebra",
    "question": "Using only NAND gates, how can a 2-input XOR gate be constructed, and what property of NAND gates makes this possible?",
    "correct_answer": "By combining NAND gates to form an AND-OR-Invert (AOI) structure; NAND is a functionally complete gate.",
    "distractors": [
      "By connecting two NAND gates in series; NAND gates are idempotent.",
      "By using a single NAND gate with an inverted input; NAND gates are commutative.",
      "It is impossible to construct an XOR gate using only NAND gates."
    ],
    "context": "NAND gates (and NOR gates) are 'functionally complete' gates, meaning any Boolean function can be implemented using only NAND gates (or only NOR gates). An XOR gate can be constructed using four NAND gates by realizing its Boolean expression (A'B + AB') using NAND gate equivalents (e.g., A NAND B NAND (A NAND A) NAND (B NAND B)).",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Digital Logic",
    "subtopic": "Combinational Circuits (MUX, DEMUX, Encoder, Decoder)",
    "question": "A system needs to select one of 8 different data inputs and route it to a single output line, based on a 3-bit select code. Which combinational circuit is designed specifically for this purpose?",
    "correct_answer": "8-to-1 Multiplexer (MUX)",
    "distractors": [
      "3-to-8 Decoder",
      "8-to-3 Encoder",
      "1-to-8 Demultiplexer (DEMUX)"
    ],
    "context": "A Multiplexer (MUX) is a combinational circuit that selects one of several analog or digital input signals and forwards the selected input into a single output line. An 8-to-1 MUX has 8 data inputs, 3 select lines (since $2^3 = 8$), and 1 output. The select lines determine which input is routed to the output.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Digital Logic",
    "subtopic": "Combinational Circuits (MUX, DEMUX, Encoder, Decoder)",
    "question": "A digital circuit is used to convert a 4-bit binary input into a unique active output line among 16 possible output lines. What type of combinational circuit is this, and what is its primary application?",
    "correct_answer": "4-to-16 Decoder; used for address decoding in memory systems or enabling specific devices.",
    "distractors": [
      "16-to-4 Encoder; used for converting multiple inputs to a binary code.",
      "16-to-1 Multiplexer; used for selecting one input from many.",
      "4-bit Full Adder; used for binary arithmetic."
    ],
    "context": "A Decoder is a combinational circuit that converts binary information from N input lines to a maximum of $2^N$ unique output lines. A 4-to-16 decoder has 4 input bits and $2^4 = 16$ output lines, where only one output line is active (high) at any given time, corresponding to the binary value of the input. Decoders are commonly used in memory addressing, data routing, and enabling specific components based on control signals.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Digital Logic",
    "subtopic": "Sequential Circuits (Flip-Flops, Counters, FSMs)",
    "question": "What is the fundamental building block of all sequential circuits that is capable of storing one bit of binary information, and whose output depends on both its current inputs and its previous state?",
    "correct_answer": "Flip-Flop",
    "distractors": [
      "Logic Gate",
      "Multiplexer",
      "Encoder"
    ],
    "context": "A Flip-Flop is a basic sequential circuit that can store a single bit of information. Unlike combinational circuits whose outputs depend only on current inputs, the output of a flip-flop also depends on its previous state, making it the fundamental memory element in digital systems like registers, counters, and state machines.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Digital Logic",
    "subtopic": "Sequential Circuits (Flip-Flops, Counters, FSMs)",
    "question": "A finite state machine (FSM) is designed to detect a specific sequence of bits ('101') in a serial input stream. What are the two main components that define the behavior and structure of this FSM?",
    "correct_answer": "A set of states, and a set of transitions between states based on inputs.",
    "distractors": [
      "Only combinational logic gates.",
      "Only input and output buffers.",
      "Only a clock signal and power supply."
    ],
    "context": "A Finite State Machine (FSM) (or Finite Automaton) is a mathematical model of computation that consists of a finite number of states, transitions between those states, and actions. Its behavior is defined by its current state and the current input, which determines the next state and the output. For sequence detection, the states represent the parts of the sequence detected so far.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Digital Logic",
    "subtopic": "Sequential Circuits (Flip-Flops, Counters, FSMs)",
    "question": "What is the primary difference between a 'Mealy machine' and a 'Moore machine' in the context of Finite State Machines (FSMs)?",
    "correct_answer": "In a Mealy machine, output depends on current state and input; in a Moore machine, output depends only on current state.",
    "distractors": [
      "Mealy machines have memory, while Moore machines do not.",
      "Moore machines are always synchronous, while Mealy machines are asynchronous.",
      "Mealy machines are always simpler to design than Moore machines."
    ],
    "context": "Mealy and Moore machines are two types of Finite State Machines. The key distinction lies in how their output is generated. In a Mealy machine, the output is a function of both the current state and the current input. In contrast, in a Moore machine, the output is solely a function of the current state. This difference affects design complexity and the timing of outputs relative to inputs and state changes.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Logic Gates and Boolean Algebra",
    "subtopic": "Boolean Laws",
    "question": "Which Boolean law states that A + A·B = A?",
    "correct_answer": "Absorption Law",
    "distractors": [
      "De Morgan's Law",
      "Distributive Law",
      "Commutative Law"
    ],
    "context": "The Absorption Law in Boolean algebra states that A + A·B = A and A·(A + B) = A, which helps in simplifying Boolean expressions by eliminating redundant terms.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Logic Gates and Boolean Algebra",
    "subtopic": "Gate Implementation",
    "question": "What is the minimum number of NAND gates required to implement an XOR gate?",
    "correct_answer": "4",
    "distractors": [
      "2",
      "3",
      "5"
    ],
    "context": "An XOR gate can be implemented using 4 NAND gates by creating the expression (A NAND (A NAND B)) NAND (B NAND (A NAND B)), demonstrating the universal property of NAND gates.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Combinational Circuits",
    "subtopic": "Multiplexer",
    "question": "How many select lines are required for an 8:1 multiplexer?",
    "correct_answer": "3",
    "distractors": [
      "2",
      "4",
      "8"
    ],
    "context": "An 8:1 multiplexer requires 3 select lines because 2^3 = 8, allowing selection among 8 input lines. The select lines determine which input is routed to the output.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Combinational Circuits",
    "subtopic": "Decoder",
    "question": "In a 3:8 decoder with active LOW outputs, what will be the output when input is 101₂?",
    "correct_answer": "Y5 = 0, all others = 1",
    "distractors": [
      "Y5 = 1, all others = 0",
      "Y3 = 0, all others = 1",
      "All outputs = 0"
    ],
    "context": "A 3:8 decoder with active LOW outputs will have only one output line LOW (0) corresponding to the binary input value, while all other outputs remain HIGH (1). For input 101₂ = 5₁₀, output Y5 will be LOW.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Sequential Circuits",
    "subtopic": "Flip-Flops",
    "question": "What happens when both J and K inputs of a JK flip-flop are HIGH?",
    "correct_answer": "Output toggles",
    "distractors": [
      "Output remains unchanged",
      "Output becomes HIGH",
      "Output becomes LOW"
    ],
    "context": "In a JK flip-flop, when both J and K inputs are HIGH (1), the output toggles on each clock pulse, changing from its previous state. This eliminates the race condition present in SR flip-flops.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Sequential Circuits",
    "subtopic": "Counters",
    "question": "What is the modulus of a 4-bit ripple counter?",
    "correct_answer": "16",
    "distractors": [
      "4",
      "8",
      "15"
    ],
    "context": "A 4-bit ripple counter has a modulus of 16 because it can count from 0 to 15 (2^4 = 16 states) before resetting back to 0, making it a MOD-16 counter.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Sequential Circuits",
    "subtopic": "Finite State Machines",
    "question": "In a Moore FSM, the output depends on which of the following?",
    "correct_answer": "Present state only",
    "distractors": [
      "Present input only",
      "Present state and input",
      "Previous state only"
    ],
    "context": "In a Moore Finite State Machine, the output is determined solely by the present state and is independent of the current input. This contrasts with Mealy machines where output depends on both present state and input.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Digital Logic",
    "subtopic": "Number Representations",
    "question": "Which number system uses base 16 and is commonly used in computer systems for compact representation?",
    "correct_answer": "Hexadecimal",
    "distractors": ["Binary", "Octal", "Decimal"],
    "context": "Hexadecimal number system uses base 16 and is widely used for compact representation in computing.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Digital Logic",
    "subtopic": "Number Representations",
    "question": "What is the 2's complement representation primarily used for in digital systems?",
    "correct_answer": "Representing signed integers",
    "distractors": ["Representing unsigned integers", "Floating-point arithmetic", "Error detection"],
    "context": "2's complement is widely used to represent signed integers in digital systems.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Digital Logic",
    "subtopic": "Number Representations",
    "question": "Which binary code is designed to reduce errors by having only one bit change between successive numbers?",
    "correct_answer": "Gray code",
    "distractors": ["BCD code", "ASCII code", "Parity code"],
    "context": "Gray code is a binary code where only one bit changes between successive values, minimizing errors.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Digital Logic",
    "subtopic": "Minimization using K-Maps",
    "question": "What is the primary purpose of a Karnaugh map (K-Map) in Boolean algebra?",
    "correct_answer": "To simplify Boolean expressions by visual grouping",
    "distractors": ["To convert Boolean expressions to truth tables", "To perform arithmetic operations", "To generate random Boolean functions"],
    "context": "Karnaugh maps help simplify Boolean expressions by grouping adjacent ones visually.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Digital Logic",
    "subtopic": "Minimization using K-Maps",
    "question": "In a 4-variable K-Map, how many cells are there to represent all possible input combinations?",
    "correct_answer": "16",
    "distractors": ["8", "4", "32"],
    "context": "A 4-variable K-Map has 2^4 = 16 cells representing all input combinations.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Digital Logic",
    "subtopic": "Minimization using K-Maps",
    "question": "Which of the following is a valid group size in K-Map minimization?",
    "correct_answer": "4",
    "distractors": ["3", "5", "6"],
    "context": "Valid groups in K-Maps are powers of two: 1, 2, 4, 8, etc., used to simplify expressions.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Digital Logic",
    "subtopic": "Number Representations",
    "question": "Which number representation uses the most significant bit to indicate the sign and the remaining bits for the magnitude of a number?",
    "correct_answer": "Sign-Magnitude",
    "distractors": ["Two’s Complement", "One’s Complement", "Gray Code"],
    "context": "In Sign-Magnitude representation, the most significant bit denotes the sign (0 for positive, 1 for negative), and the remaining bits represent the magnitude, used in early computing systems.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Digital Logic",
    "subtopic": "Number Representations",
    "question": "Which representation is most commonly used in modern computers for representing negative integers due to its ease of arithmetic operations?",
    "correct_answer": "Two’s Complement",
    "distractors": ["Sign-Magnitude", "One’s Complement", "Excess-N Code"],
    "context": "Two’s Complement is widely used for negative integers in computers because it simplifies addition and subtraction operations, requiring only a single arithmetic circuit.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Digital Logic",
    "subtopic": "Minimization using K-Maps",
    "question": "Which term in a K-Map represents a group of 1s that can be combined to simplify a Boolean expression?",
    "correct_answer": "Minterm Group",
    "distractors": ["Maxterm Group", "Don’t Care Condition", "Prime Implicant"],
    "context": "In a K-Map, a Minterm Group is a collection of adjacent 1s (representing true outputs) that can be combined to form a simplified product term in the Boolean expression.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Digital Logic",
    "subtopic": "Minimization using K-Maps",
    "question": "What is the maximum number of variables that can be effectively minimized using a 4-variable K-Map?",
    "correct_answer": "4",
    "distractors": ["3", "5", "6"],
    "context": "A 4-variable K-Map is a 4x4 grid used to minimize Boolean functions with up to 4 variables, allowing simplification of expressions with 16 possible minterms.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Digital Logic",
    "subtopic": "Number Representations",
    "question": "Which number representation changes only one bit between consecutive values, reducing errors in digital systems?",
    "correct_answer": "Gray Code",
    "distractors": ["BCD", "Two’s Complement", "Sign-Magnitude"],
    "context": "Gray Code, or reflected binary code, ensures that only one bit changes between consecutive values, minimizing errors in applications like rotary encoders and analog-to-digital conversion.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Digital Logic",
    "subtopic": "Minimization using K-Maps",
    "question": "Which K-Map simplification technique identifies the largest possible groups of 1s that cannot be further combined?",
    "correct_answer": "Prime Implicant",
    "distractors": ["Essential Prime Implicant", "Don’t Care Condition", "Minterm Expansion"],
    "context": "A Prime Implicant in a K-Map is a maximal group of 1s (or 1s and don’t cares) that cannot be combined with other groups, forming a minimal sum-of-products expression.",
    "difficulty": "advanced",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Digital Logic",
    "subtopic": "Number Representations",
    "question": "An 8-bit signed integer uses 2's complement representation. What is the decimal value of the binary number `10110100`?",
    "correct_answer": "-76",
    "distractors": [
      "180",
      "-116",
      "76"
    ],
    "context": "In 2's complement representation, to find the decimal value of a negative number (indicated by a '1' in the most significant bit), first invert all bits and add 1 to get its positive counterpart. Then, append a negative sign. For `10110100`: Invert to `01001011`. Add 1: `01001100`. Convert `01001100` to decimal: $2^2 + 2^3 + 2^6 = 4 + 8 + 64 = 76$. So, the original number is -76.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Digital Logic",
    "subtopic": "Number Representations",
    "question": "What is the primary reason that 'Excess-3' code is considered a self-complementing code?",
    "correct_answer": "The 9's complement of a decimal digit can be obtained by simply complementing each bit of its Excess-3 representation.",
    "distractors": [
      "It uses only 3 bits to represent a decimal digit.",
      "It is directly convertible to BCD (Binary Coded Decimal).",
      "It eliminates the need for separate sign bits."
    ],
    "context": "Excess-3 code is a non-weighted BCD (Binary Coded Decimal) code where each decimal digit is represented by its 4-bit binary equivalent plus 3. It's a self-complementing code because the 9's complement of a decimal digit (e.g., 9-2=7) can be found by simply inverting all the bits of its Excess-3 code representation (e.g., Excess-3 for 2 is 0101, for 7 is 1010, which are bit-wise complements).",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Digital Logic",
    "subtopic": "Number Representations",
    "question": "Which number system is most commonly used internally by computers to represent data?",
    "correct_answer": "Binary",
    "distractors": ["Decimal", "Octal", "Hexadecimal"],
    "context": "Computers internally use the binary number system to represent all data and instructions.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Digital Logic",
    "subtopic": "Number Representations",
    "question": "What does the term 'floating point representation' refer to in computer arithmetic?",
    "correct_answer": "Representation of real numbers with a fixed number of significant digits",
    "distractors": ["Representation of integers only", "Binary-coded decimals", "Error checking in numbers"],
    "context": "Floating point representation is used to represent real numbers in computing with fixed precision.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Digital Logic",
    "subtopic": "Number Representations",
    "question": "In signed magnitude representation, what bit indicates the sign of a number?",
    "correct_answer": "Most significant bit (MSB)",
    "distractors": ["Least significant bit (LSB)", "Middle bit", "Parity bit"],
    "context": "Signed magnitude representation uses the MSB to indicate whether the number is positive or negative.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Digital Logic",
    "subtopic": "Minimization using K-Maps",
    "question": "What is the advantage of grouping larger numbers of 1s in K-Map simplification?",
    "correct_answer": "It results in simpler Boolean expressions with fewer terms",
    "distractors": ["It makes the circuit slower", "It increases the number of variables", "It reduces accuracy"],
    "context": "Grouping larger groups of 1s in Karnaugh maps helps reduce the complexity of Boolean expressions.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Digital Logic",
    "subtopic": "Minimization using K-Maps",
    "question": "How are cells arranged in a Karnaugh map to ensure adjacency for simplification?",
    "correct_answer": "Using Gray code sequence",
    "distractors": ["Using binary sequence", "Using decimal sequence", "Using random order"],
    "context": "Karnaugh maps use Gray code ordering to place adjacent cells differing by one bit for simplification.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE CSE",
    "topic": "Digital Logic",
    "subtopic": "Minimization using K-Maps",
    "question": "What is the minimal number of variables that can be simplified using a K-Map?",
    "correct_answer": "1",
    "distractors": ["0", "2", "3"],
    "context": "Karnaugh maps can simplify Boolean expressions starting from 1 variable up to several variables.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  
  {
    "goal": "GATE ECE",
    "topic": "Network Theorems",
    "subtopic": "Thevenin",
    "question": "Which of the following best describes Thevenin's theorem in circuit analysis?",
    "correct_answer": "It replaces a linear network with a single voltage source and series resistance.",
    "distractors": [
      "It models the network as a parallel LC circuit.",
      "It replaces the network with multiple current sources.",
      "It applies only to non-linear circuits."
    ],
    "context": "Thevenin's theorem simplifies a linear two-terminal circuit to a voltage source in series with a resistance, making analysis easier.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Network Theorems",
    "subtopic": "Norton",
    "question": "What is the equivalent representation of a linear circuit according to Norton’s theorem?",
    "correct_answer": "A current source in parallel with a resistance.",
    "distractors": [
      "A voltage source in series with a capacitor.",
      "A pure inductive load.",
      "A combination of dependent and independent sources in series."
    ],
    "context": "Norton’s theorem allows simplifying a linear network into a current source in parallel with a resistance, which is especially useful in load analysis.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Network Theorems",
    "subtopic": "Superposition",
    "question": "When applying the Superposition Theorem, what must be done to all but one independent source?",
    "correct_answer": "They must be turned off by replacing voltage sources with short circuits and current sources with open circuits.",
    "distractors": [
      "They must be replaced with resistors of equal value.",
      "They must be converted into their phasor forms.",
      "They must be left unchanged in the circuit."
    ],
    "context": "In Superposition Theorem, to analyze the effect of each independent source, other sources are turned off: voltage sources shorted, current sources opened.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Steady-State and Transient Analysis",
    "subtopic": "RLC",
    "question": "In a series RLC circuit, what determines whether the transient response is underdamped, critically damped, or overdamped?",
    "correct_answer": "The relationship between resistance and the critical damping condition.",
    "distractors": [
      "The input voltage frequency only.",
      "The initial current in the circuit.",
      "The capacitance value alone."
    ],
    "context": "The transient behavior of an RLC circuit is determined by the damping factor, which depends on the resistance in relation to the inductance and capacitance.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Sinusoidal Steady-State",
    "subtopic": "Phasors",
    "question": "Why are phasors used in AC circuit analysis?",
    "correct_answer": "They allow the representation of sinusoidal voltages and currents as complex numbers for easier calculations.",
    "distractors": [
      "They are used only for DC circuit simplification.",
      "They eliminate the need for impedance calculations.",
      "They convert sinusoidal signals into triangular waveforms."
    ],
    "context": "Phasors represent sinusoidal signals using magnitude and phase, which simplifies AC analysis using algebraic techniques.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Steady-State and Transient Analysis",
    "subtopic": "RLC",
    "question": "In the steady-state response of an RLC circuit to a sinusoidal input, what role does impedance play?",
    "correct_answer": "It determines the magnitude and phase of the current in the circuit.",
    "distractors": [
      "It only affects voltage but not current.",
      "It is irrelevant if the frequency is constant.",
      "It is always purely resistive in AC circuits."
    ],
    "context": "In steady-state AC conditions, the impedance, which includes resistive and reactive components, affects both the amplitude and phase of the current.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Sinusoidal Steady-State",
    "subtopic": "Phasors",
    "question": "How is the total impedance in a series RLC circuit expressed in the phasor domain?",
    "correct_answer": "Z = R + j(ωL - 1/ωC)",
    "distractors": [
      "Z = R + ωL + 1/ωC",
      "Z = R - j(ωL + 1/ωC)",
      "Z = jωRC"
    ],
    "context": "The impedance in a phasor-based RLC circuit includes resistance and net reactance due to inductor and capacitor, combined into a complex expression.",
    "difficulty": "advance",
    "type": "mcq"
  },
   {
    "goal": "GATE ECE",
    "topic": "Network Theorems",
    "subtopic": "Thevenin's Theorem",
    "question": "What is the Thevenin equivalent voltage of a circuit with two voltage sources 12V and 8V in series with resistances 4Ω and 6Ω respectively, when looking into terminals A-B?",
    "correct_answer": "The open-circuit voltage across terminals A-B",
    "distractors": [
      "The short-circuit current through terminals A-B",
      "The sum of all voltage sources in the circuit",
      "The voltage across the load resistor"
    ],
    "context": "Thevenin's theorem states that any linear electrical network can be replaced by an equivalent circuit consisting of a voltage source (Thevenin voltage) in series with a resistor (Thevenin resistance). The Thevenin voltage is the open-circuit voltage measured across the terminals.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Network Theorems",
    "subtopic": "Norton's Theorem",
    "question": "In Norton's equivalent circuit, what parameter is placed in parallel with the Norton current source?",
    "correct_answer": "Norton equivalent resistance",
    "distractors": [
      "Load resistance",
      "Thevenin equivalent voltage",
      "Total circuit impedance"
    ],
    "context": "Norton's theorem converts any linear circuit into an equivalent current source (Norton current) in parallel with a resistor (Norton resistance). The Norton resistance is the same as the Thevenin resistance when all independent sources are deactivated.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "subtopic": "Superposition Theorem",
    "question": "When applying superposition theorem to find current through a branch, what should be done to voltage sources that are not being considered?",
    "correct_answer": "Replace them with short circuits",
    "distractors": [
      "Replace them with open circuits",
      "Replace them with their internal resistance",
      "Keep them as they are"
    ],
    "context": "Superposition theorem states that in a linear circuit with multiple sources, the response in any branch is the algebraic sum of responses caused by each source acting independently. When considering one source, all other voltage sources are replaced by short circuits and current sources by open circuits.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "RLC Circuit Analysis",
    "subtopic": "Transient Analysis",
    "question": "In a series RLC circuit, what determines the nature of the transient response (overdamped, critically damped, or underdamped)?",
    "correct_answer": "The relationship between R²/4L² and 1/LC",
    "distractors": [
      "The initial conditions only",
      "The magnitude of the applied voltage",
      "The frequency of the applied source"
    ],
    "context": "In RLC transient analysis, the damping factor α = R/2L and natural frequency ωn = 1/√(LC) determine the response. When α > ωn (overdamped), α = ωn (critically damped), or α < ωn (underdamped), the circuit exhibits different transient behaviors.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "RLC Circuit Analysis",
    "subtopic": "Steady-State Analysis",
    "question": "At resonance in a series RLC circuit, what happens to the reactive components?",
    "correct_answer": "XL = XC and they cancel each other",
    "distractors": [
      "XL and XC both become zero",
      "XL becomes maximum and XC becomes minimum",
      "XL and XC add up to maximum value"
    ],
    "context": "In steady-state analysis of RLC circuits, resonance occurs when the inductive reactance XL equals the capacitive reactance XC. At this frequency, the reactive components cancel out, leaving only the resistance, and the impedance is minimum.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Sinusoidal Steady-State",
    "subtopic": "Phasor Analysis",
    "question": "In phasor representation, how is a capacitor's impedance expressed in terms of angular frequency ω and capacitance C?",
    "correct_answer": "-j/(ωC)",
    "distractors": [
      "jωC",
      "1/(jωC)",
      "j/(ωC)"
    ],
    "context": "Phasor analysis uses complex numbers to represent sinusoidal quantities. For a capacitor, the impedance is ZC = 1/(jωC) = -j/(ωC), indicating a -90° phase shift where current leads voltage. The 'j' operator represents the imaginary unit in electrical engineering.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Sinusoidal Steady-State",
    "subtopic": "Phasor Analysis",
    "question": "When two sinusoidal voltages V₁ = 10∠30° and V₂ = 15∠60° are added using phasor addition, what is the resultant magnitude approximately?",
    "correct_answer": "23.6 V",
    "distractors": [
      "25 V",
      "20 V",
      "18.7 V"
    ],
    "context": "Phasor addition involves converting polar form to rectangular form, adding the real and imaginary parts separately, then converting back to polar form. V₁ = 8.66 + j5, V₂ = 7.5 + j13, Resultant = 16.16 + j18, Magnitude = √(16.16² + 18²) ≈ 23.6V.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Network Theorems",
    "subtopic": "Thevenin's Theorem",
    "question": "For a given linear circuit with independent sources, what is the Thevenin equivalent voltage ($V_{Th}$) across two terminals?",
    "correct_answer": "The open-circuit voltage across the two terminals.",
    "distractors": [
      "The short-circuit current flowing between the two terminals.",
      "The voltage when all independent sources are turned off.",
      "The resistance seen looking into the terminals with all sources on."
    ],
    "context": "Thevenin's theorem simplifies a complex linear circuit into an equivalent voltage source ($V_{Th}$) in series with an equivalent resistance ($R_{Th}$). $V_{Th}$ is defined as the open-circuit voltage across the terminals of interest.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Network Theorems",
    "subtopic": "Norton's Theorem",
    "question": "According to Norton's theorem, how is the Norton equivalent current ($I_N$) determined for a linear circuit?",
    "correct_answer": "By short-circuiting the terminals and finding the current flowing through the short circuit.",
    "distractors": [
      "By open-circuiting the terminals and measuring the voltage.",
      "By calculating the current when all independent sources are turned off.",
      "By finding the equivalent resistance looking into the terminals."
    ],
    "context": "Norton's theorem allows simplification of a linear circuit into an equivalent current source ($I_N$) in parallel with an equivalent resistance ($R_N$). $I_N$ is the current that flows through a short circuit placed across the terminals of interest.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Network Theorems",
    "subtopic": "Superposition Theorem",
    "question": "When applying the Superposition Theorem, how are independent voltage sources treated while considering the effect of a single current source?",
    "correct_answer": "Replaced by a short circuit.",
    "distractors": [
      "Replaced by an open circuit.",
      "Kept as they are.",
      "Replaced by their internal resistance."
    ],
    "context": "The Superposition Theorem states that in a linear circuit with multiple independent sources, the total response (voltage or current) in any element is the algebraic sum of the responses caused by each independent source acting alone, while all other independent sources are turned off. Ideal voltage sources are replaced by short circuits, and ideal current sources by open circuits.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Steady-State and Transient Analysis",
    "subtopic": "RLC Circuits",
    "question": "In a series RLC circuit, what condition must be met for the circuit to exhibit an underdamped transient response?",
    "correct_answer": "The damping ratio is less than 1.",
    "distractors": [
      "The damping ratio is equal to 1.",
      "The damping ratio is greater than 1.",
      "The resistance is zero."
    ],
    "context": "The transient response of an RLC circuit is determined by its damping ratio ($\\zeta$). An underdamped response ($\\zeta < 1$) results in oscillations that decay over time. Other conditions include critically damped ($\\zeta = 1$) and overdamped ($\\zeta > 1$).",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Steady-State and Transient Analysis",
    "subtopic": "RLC Circuits",
    "question": "What is the primary characteristic of the steady-state response of an RLC circuit subjected to a DC input?",
    "correct_answer": "Capacitors act as open circuits and inductors act as short circuits.",
    "distractors": [
      "Capacitors act as short circuits and inductors act as open circuits.",
      "Both capacitors and inductors act as open circuits.",
      "Both capacitors and inductors act as short circuits."
    ],
    "context": "In the DC steady-state, capacitors, after fully charging, block DC current flow and thus behave as open circuits. Inductors, after the current settles, behave like ideal wires (zero resistance) and thus act as short circuits.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Sinusoidal Steady-State",
    "subtopic": "Phasors",
    "question": "How is the impedance of an ideal inductor represented in the frequency domain using phasors?",
    "correct_answer": "$j\\omega L$",
    "distractors": [
      "$1/(j\\omega C)$",
      "$R$",
      "$-j\\omega L$"
    ],
    "context": "In the sinusoidal steady-state, circuit elements are represented by their impedances in the frequency domain. For an ideal inductor with inductance L, its impedance is $Z_L = j\\omega L$, where $\\omega$ is the angular frequency and $j$ is the imaginary unit.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Sinusoidal Steady-State",
    "subtopic": "Phasors",
    "question": "Given a voltage $v(t) = V_m \\cos(\\omega t + \\phi)$, what is its corresponding phasor representation?",
    "correct_answer": "$V_m \\angle \\phi$",
    "distractors": [
      "$V_m e^{j\\phi}$",
      "$V_m \\sin(\\omega t + \\phi)$",
      "$V_m \\cos(\\phi)$"
    ],
    "context": "Phasors provide a convenient way to represent sinusoidal voltages and currents in the frequency domain. A sinusoidal function $V_m \\cos(\\omega t + \\phi)$ is represented by a phasor $V_m \\angle \\phi$, where $V_m$ is the magnitude and $\\phi$ is the phase angle.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Network Theorems",
    "subtopic": "Thevenin's Theorem",
    "question": "What is the Thevenin equivalent resistance (Rth) of a linear circuit with respect to a load?",
    "correct_answer": "The equivalent resistance seen at the load terminals with all sources deactivated",
    "distractors": [
      "The resistance of the load itself",
      "The total resistance of all circuit elements",
      "The resistance when the load is short-circuited"
    ],
    "context": "Thevenin's Theorem simplifies a linear circuit to an equivalent voltage source (Vth) in series with a resistance (Rth), where Rth is calculated by deactivating all independent sources.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Network Theorems",
    "subtopic": "Norton's Theorem",
    "question": "How is the Norton equivalent resistance (Rn) related to the Thevenin equivalent resistance (Rth) in a linear circuit?",
    "correct_answer": "Rn is equal to Rth",
    "distractors": [
      "Rn is the reciprocal of Rth",
      "Rn is twice Rth",
      "Rn is independent of Rth"
    ],
    "context": "Norton's Theorem provides an equivalent circuit with a current source (In) in parallel with a resistance (Rn), where Rn is identical to the Thevenin resistance (Rth) of the same circuit.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Network Theorems",
    "subtopic": "Superposition Theorem",
    "question": "When using the Superposition Theorem, how should dependent sources be handled in a linear circuit?",
    "correct_answer": "Dependent sources remain active for all calculations",
    "distractors": [
      "Dependent sources are replaced by independent sources",
      "Dependent sources are deactivated like independent sources",
      "Dependent sources are ignored completely"
    ],
    "context": "In the Superposition Theorem, independent sources are turned on one at a time while others are deactivated, but dependent sources remain active as they depend on circuit variables.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Steady-State and Transient Analysis",
    "subtopic": "RLC Circuits",
    "question": "In a critically damped series RLC circuit, what is the condition for the damping factor (α) and the resonant frequency (ω0)?",
    "correct_answer": "α = ω0",
    "distractors": [
      "α > ω0",
      "α < ω0",
      "α = 2ω0"
    ],
    "context": "In a series RLC circuit, critical damping occurs when the damping factor (α = R/(2L)) equals the resonant frequency (ω0 = 1/√(LC)), resulting in the fastest non-oscillatory response.",
    "difficulty": "advanced",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Steady-State and Transient Analysis",
    "subtopic": "Transient Analysis",
    "question": "What is the steady-state current in an RC circuit after a long time when excited by a DC voltage source?",
    "correct_answer": "Zero",
    "distractors": [
      "V/R",
      "V/C",
      "Infinite"
    ],
    "context": "In an RC circuit with a DC source, the capacitor acts as an open circuit in steady-state, resulting in zero current flow after the transient response decays.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Sinusoidal Steady-State",
    "subtopic": "Phasor Analysis",
    "question": "What is the phase angle of the impedance of an inductor in phasor analysis?",
    "correct_answer": "+90 degrees",
    "distractors": [
      "-90 degrees",
      "0 degrees",
      "+45 degrees"
    ],
    "context": "In phasor analysis, the impedance of an inductor is jωL, which has a phase angle of +90 degrees, indicating that the voltage leads the current by 90 degrees.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Sinusoidal Steady-State",
    "subtopic": "Phasors and Impedance",
    "question": "For a parallel RLC circuit in sinusoidal steady-state, what is the condition for resonance?",
    "correct_answer": "The imaginary part of the total admittance is zero",
    "distractors": [
      "The imaginary part of the total impedance is zero",
      "The real part of the total admittance is zero",
      "The total impedance equals the resistance"
    ],
    "context": "In a parallel RLC circuit, resonance occurs when the imaginary part of the total admittance (Y = 1/R + j(ωC - 1/(ωL))) is zero, leading to maximum current at the resonant frequency.",
    "difficulty": "advanced",
    "type": "mcq"
  },
   {
    "goal": "GATE ECE",
    "topic": "Resonance and Bode Plots",
    "subtopic": "Resonance",
    "question": "What happens to the impedance of a series RLC circuit at resonance?",
    "correct_answer": "It becomes purely resistive and reaches a minimum value.",
    "distractors": [
      "It becomes purely capacitive and maximum.",
      "It becomes purely inductive and maximum.",
      "It reaches an infinite value."
    ],
    "context": "At resonance in a series RLC circuit, the inductive and capacitive reactances cancel each other, making the circuit impedance purely resistive and minimum.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Resonance and Bode Plots",
    "subtopic": "Bode Plots",
    "question": "In a Bode magnitude plot, what is the slope for a second-order low-pass filter beyond the cutoff frequency?",
    "correct_answer": "-40 dB/decade",
    "distractors": [
      "-20 dB/decade",
      "0 dB/decade",
      "+20 dB/decade"
    ],
    "context": "Each pole contributes -20 dB/decade. For a second-order system, two poles lead to a slope of -40 dB/decade in the magnitude Bode plot beyond cutoff frequency.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Passive Filter Design",
    "subtopic": "RC Filters",
    "question": "What type of filter does a simple RC low-pass circuit implement?",
    "correct_answer": "A first-order low-pass filter that attenuates high frequencies.",
    "distractors": [
      "A second-order high-pass filter that boosts low frequencies.",
      "A notch filter that blocks specific frequency bands.",
      "A band-pass filter with variable gain."
    ],
    "context": "An RC low-pass filter passes low-frequency signals and attenuates high-frequency ones, forming a first-order filter with a -20 dB/decade slope.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Passive Filter Design",
    "subtopic": "Filter Characteristics",
    "question": "What defines the cutoff frequency in a passive filter?",
    "correct_answer": "The frequency where the output drops to 70.7% of the input (−3 dB point).",
    "distractors": [
      "The frequency where phase shift is 0°.",
      "The point where gain increases by 3 dB.",
      "The frequency where the input impedance is maximum."
    ],
    "context": "The cutoff frequency is defined as the point where output power drops to half, or voltage to 70.7% of input, corresponding to a -3 dB drop.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Two-Port Networks",
    "subtopic": "Z and Y Parameters",
    "question": "Which two-port parameter set relates voltages and currents using open-circuit conditions?",
    "correct_answer": "Z-parameters (impedance parameters)",
    "distractors": [
      "Y-parameters (admittance parameters)",
      "H-parameters (hybrid parameters)",
      "S-parameters (scattering parameters)"
    ],
    "context": "Z-parameters describe two-port networks by measuring voltages and currents under open-circuit conditions, providing impedance relationships.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Two-Port Networks",
    "subtopic": "Reciprocity",
    "question": "In a reciprocal two-port network, which condition must be satisfied for Z-parameters?",
    "correct_answer": "Z12 = Z21",
    "distractors": [
      "Z11 = Z22",
      "Z12 = -Z21",
      "Z21 = 0"
    ],
    "context": "Reciprocity in two-port networks implies that the transfer impedance from port 1 to 2 is the same as from 2 to 1, i.e., Z12 = Z21.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Resonance and Bode Plots",
    "subtopic": "Quality Factor",
    "question": "What does the Quality Factor (Q) indicate in a resonant RLC circuit?",
    "correct_answer": "The sharpness or selectivity of the resonance peak.",
    "distractors": [
      "The bandwidth of the input signal.",
      "The gain of the DC response.",
      "The damping coefficient of a low-pass filter."
    ],
    "context": "The Quality Factor quantifies how selective a resonant circuit is; higher Q indicates a sharper peak and narrower bandwidth.",
    "difficulty": "advance",
    "type": "mcq"
  },
   {
    "goal": "GATE ECE",
    "topic": "Resonance and Bode Plots",
    "subtopic": "Resonance Frequency",
    "question": "In a parallel RLC circuit, what is the condition for resonance in terms of reactances?",
    "correct_answer": "XL = XC at resonance frequency",
    "distractors": [
      "XL + XC = R",
      "XL - XC = maximum",
      "XL × XC = R²"
    ],
    "context": "At resonance in a parallel RLC circuit, the inductive reactance XL equals the capacitive reactance XC. This occurs at the resonant frequency fr = 1/(2π√LC), where the impedance is maximum and the circuit behaves purely resistive.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Resonance and Bode Plots",
    "subtopic": "Bode Plot Analysis",
    "question": "In a Bode magnitude plot, what is the slope of the asymptote for a single pole at high frequencies?",
    "correct_answer": "-20 dB/decade",
    "distractors": [
      "+20 dB/decade",
      "-40 dB/decade",
      "-6 dB/octave"
    ],
    "context": "Bode plots are logarithmic plots used to analyze frequency response. For a single pole transfer function H(s) = K/(s + a), the magnitude plot has a slope of -20 dB/decade (or -6 dB/octave) at frequencies much higher than the pole frequency.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Resonance and Bode Plots",
    "subtopic": "Quality Factor",
    "question": "For a series RLC circuit with R = 10Ω, L = 1mH, and C = 100µF, what is the quality factor Q at resonance?",
    "correct_answer": "1",
    "distractors": [
      "10",
      "0.1",
      "100"
    ],
    "context": "Quality factor Q in a series RLC circuit is defined as Q = (1/R)√(L/C). It represents the ratio of energy stored to energy dissipated per cycle. Higher Q indicates sharper resonance and lower damping in the circuit.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Passive Filter Design",
    "subtopic": "Low-Pass Filter",
    "question": "In a first-order RC low-pass filter, what happens to the output voltage at the cutoff frequency?",
    "correct_answer": "Output voltage is -3dB (0.707 times) of input voltage",
    "distractors": [
      "Output voltage equals input voltage",
      "Output voltage is zero",
      "Output voltage is -6dB of input voltage"
    ],
    "context": "In passive filter design, the cutoff frequency is defined as the frequency where the output power is half of the input power, corresponding to -3dB attenuation. At this frequency, the output voltage magnitude is 1/√2 ≈ 0.707 times the input voltage magnitude.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Passive Filter Design",
    "subtopic": "High-Pass Filter",
    "question": "What is the primary characteristic that distinguishes a Butterworth filter from a Chebyshev filter in passive filter design?",
    "correct_answer": "Butterworth has maximally flat passband response",
    "distractors": [
      "Butterworth has ripples in the passband",
      "Butterworth has steeper roll-off than Chebyshev",
      "Butterworth uses only inductors"
    ],
    "context": "Butterworth filters are characterized by a maximally flat magnitude response in the passband with no ripples, while Chebyshev filters have ripples in either the passband (Type I) or stopband (Type II) but achieve steeper roll-off rates for the same filter order.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Passive Filter Design",
    "subtopic": "Band-Pass Filter",
    "question": "In a band-pass RLC filter, if the center frequency is 1kHz and the bandwidth is 100Hz, what is the quality factor Q?",
    "correct_answer": "10",
    "distractors": [
      "100",
      "0.1",
      "1"
    ],
    "context": "For band-pass filters, the quality factor Q is defined as the ratio of center frequency to bandwidth: Q = fc/BW. A higher Q indicates a narrower bandwidth and more selective filtering, while a lower Q provides broader bandwidth.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Two-Port Networks",
    "subtopic": "Z-Parameters",
    "question": "In a two-port network, what does the Z21 parameter represent when port 2 is open-circuited?",
    "correct_answer": "Transfer impedance from port 2 to port 1",
    "distractors": [
      "Input impedance at port 1",
      "Output impedance at port 2",
      "Short-circuit current gain"
    ],
    "context": "Z-parameters (impedance parameters) describe a two-port network using impedance relationships. Z21 = V1/I2 when I1 = 0 (port 1 open), representing the transfer impedance from port 2 to port 1. These parameters are useful for analyzing cascaded networks.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Resonance",
    "subtopic": "Series Resonance",
    "question": "In a series RLC circuit at resonance, what is the phase relationship between the voltage across the inductor and the voltage across the capacitor?",
    "correct_answer": "They are 180 degrees out of phase and equal in magnitude.",
    "distractors": [
      "They are in phase.",
      "They are 90 degrees out of phase.",
      "The inductor voltage leads the capacitor voltage by 90 degrees."
    ],
    "context": "At series resonance, the inductive reactance ($X_L$) equals the capacitive reactance ($X_C$). The voltage across the inductor ($V_L = j I X_L$) and the voltage across the capacitor ($V_C = -j I X_C$) are 180 degrees out of phase and equal in magnitude, effectively cancelling each other out.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Bode Plots",
    "subtopic": "Magnitude Plot",
    "question": "For a transfer function with a simple pole at the origin (1/s), what is the slope of its magnitude Bode plot (in dB/decade) at frequencies above the pole?",
    "correct_answer": "-20 dB/decade",
    "distractors": [
      "0 dB/decade",
      "+20 dB/decade",
      "-40 dB/decade"
    ],
    "context": "In Bode magnitude plots, each simple pole (like 1/s or 1/(1+sT)) contributes a slope of -20 dB/decade to the overall plot beyond its corner frequency. A simple pole at the origin means its effect is present across all frequencies.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Passive Filter Design",
    "subtopic": "Low-Pass Filter",
    "question": "Which passive component combination is typically used to implement a first-order RC low-pass filter?",
    "correct_answer": "Resistor in series with the input, capacitor in parallel with the output.",
    "distractors": [
      "Capacitor in series with the input, resistor in parallel with the output.",
      "Inductor in series with the input, resistor in parallel with the output.",
      "Resistor in parallel with the input, capacitor in series with the output."
    ],
    "context": "A first-order RC low-pass filter allows low frequencies to pass and attenuates high frequencies. This is achieved by placing a resistor in series with the input signal and a capacitor in parallel with the output, as the capacitor's impedance decreases with increasing frequency, shunting high-frequency signals.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Passive Filter Design",
    "subtopic": "Band-Pass Filter",
    "question": "To design a passive band-pass filter, which combination of ideal passive filters would be cascaded?",
    "correct_answer": "A low-pass filter followed by a high-pass filter.",
    "distractors": [
      "Two low-pass filters.",
      "Two high-pass filters.",
      "A notch filter and a low-pass filter."
    ],
    "context": "A band-pass filter allows a specific range of frequencies to pass while attenuating frequencies outside this range. It can be implemented by cascading a high-pass filter (to cut off low frequencies) and a low-pass filter (to cut off high frequencies), with the high-pass cutoff frequency being lower than the low-pass cutoff frequency.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Two-Port Networks",
    "subtopic": "Z-Parameters",
    "question": "For a two-port network, if the input port is open-circuited, which Z-parameter can be directly determined by measuring the open-circuit voltage at the output port ($V_2$) and the input current ($I_1$)?",
    "correct_answer": "$Z_{21} = V_2 / I_1$",
    "distractors": [
      "$Z_{11} = V_1 / I_1$",
      "$Z_{22} = V_2 / I_2$",
      "$Z_{12} = V_1 / I_2$"
    ],
    "context": "Z-parameters (impedance parameters) describe the relationship between voltages and currents at the ports of a two-port network. When the input port is open-circuited ($I_1 = 0$), $V_2 = Z_{21}I_1 + Z_{22}I_2$. However, if we consider applying a current $I_1$ at the input and measure $V_2$ with the output open-circuited ($I_2=0$), then $Z_{21} = V_2 / I_1$. This question implies a scenario where we are measuring the transfer impedance from input current to output voltage under specific open-circuit conditions.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Two-Port Networks",
    "subtopic": "Y-Parameters",
    "question": "When analyzing a two-port network using Y-parameters (admittance parameters), what condition must be met to determine $Y_{12}$?",
    "correct_answer": "The input port must be short-circuited ($V_1 = 0$).",
    "distractors": [
      "The output port must be open-circuited ($I_2 = 0$).",
      "The output port must be short-circuited ($V_2 = 0$).",
      "Both ports must be open-circuited."
    ],
    "context": "Y-parameters relate port currents to port voltages. The equations are $I_1 = Y_{11}V_1 + Y_{12}V_2$ and $I_2 = Y_{21}V_1 + Y_{22}V_2$. To find $Y_{12}$ ($= I_1/V_2$), the term involving $V_1$ must be zero, which means the input port must be short-circuited ($V_1 = 0$).",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Bode Plots",
    "subtopic": "Phase Plot",
    "question": "What is the approximate phase shift contributed by a complex conjugate pair of poles to a Bode phase plot, if the damping ratio is very small and the frequency approaches the natural frequency?",
    "correct_answer": "-180 degrees",
    "distractors": [
      "-90 degrees",
      "-45 degrees",
      "0 degrees"
    ],
    "context": "For a complex conjugate pair of poles, the phase shift changes rapidly around the natural frequency. If the damping ratio is very small (underdamped system), the phase shift can drop sharply by -180 degrees as the frequency crosses the natural frequency.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Resonance",
    "subtopic": "Parallel RLC Resonance",
    "question": "In a parallel RLC circuit, what is the condition for resonance?",
    "correct_answer": "The imaginary part of the admittance is zero",
    "distractors": [
      "The real part of the admittance is zero",
      "The imaginary part of the impedance is zero",
      "The total impedance equals the resistance"
    ],
    "context": "In a parallel RLC circuit, resonance occurs when the imaginary part of the total admittance (Y = 1/R + j(ωC - 1/(ωL))) is zero, leading to maximum current at the resonant frequency.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Resonance",
    "subtopic": "Quality Factor",
    "question": "What is the quality factor (Q) of a parallel RLC circuit at resonance?",
    "correct_answer": "Q = R√(C/L)",
    "distractors": [
      "Q = R√(L/C)",
      "Q = 1/(R√(C/L))",
      "Q = L/(RC)"
    ],
    "context": "The quality factor of a parallel RLC circuit at resonance is Q = R√(C/L), which measures the sharpness of the resonance peak and is inversely related to bandwidth.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Bode Plots",
    "subtopic": "Magnitude Plot",
    "question": "What is the initial slope of the Bode magnitude plot for a transfer function with two poles at the same frequency?",
    "correct_answer": "-40 dB/decade",
    "distractors": [
      "-20 dB/decade",
      "+40 dB/decade",
      "0 dB/decade"
    ],
    "context": "In a Bode magnitude plot, each pole contributes a -20 dB/decade slope after its corner frequency, so two poles at the same frequency result in a -40 dB/decade slope.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Bode Plots",
    "subtopic": "Phase Plot",
    "question": "What is the total phase shift in a Bode phase plot for a transfer function with a single pole at frequencies much lower than the pole frequency?",
    "correct_answer": "0 degrees",
    "distractors": [
      "-90 degrees",
      "+90 degrees",
      "-45 degrees"
    ],
    "context": "In a Bode phase plot, a single pole contributes a phase shift that approaches 0 degrees at frequencies much lower than the pole’s corner frequency.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Passive Filter Design",
    "subtopic": "High-Pass Filter",
    "question": "What is the cutoff frequency of a first-order passive high-pass filter composed of a resistor and capacitor?",
    "correct_answer": "ωc = 1/(RC)",
    "distractors": [
      "ωc = RC",
      "ωc = R/C",
      "ωc = √(RC)"
    ],
    "context": "In a first-order passive high-pass filter, the cutoff frequency (ωc = 1/(RC)) is where the magnitude of the transfer function is 1/√2 times its maximum value.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Passive Filter Design",
    "subtopic": "Band-Stop Filter",
    "question": "What is the primary characteristic of a passive band-stop filter?",
    "correct_answer": "Attenuates a specific range of frequencies while passing others",
    "distractors": [
      "Passes a specific range of frequencies while attenuating others",
      "Amplifies a specific range of frequencies",
      "Blocks all frequencies below a cutoff frequency"
    ],
    "context": "A passive band-stop filter, often designed using RLC components, attenuates a specific band of frequencies while allowing frequencies outside that band to pass with minimal loss.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Two-Port Networks",
    "subtopic": "Y-Parameters",
    "question": "In a two-port network, what does the Y-parameter Y21 represent?",
    "correct_answer": "The short-circuit current gain when the input port is driven",
    "distractors": [
      "The open-circuit voltage gain when the output port is driven",
      "The input admittance when the output is open-circuited",
      "The output admittance when the input is short-circuited"
    ],
    "context": "Y-parameters (admittance parameters) describe a two-port network, where Y21 = I2/I1 when V2 = 0, representing the short-circuit current gain from input to output.",
    "difficulty": "advanced",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Semiconductors",
    "subtopic": "Intrinsic",
    "question": "What characterizes an intrinsic semiconductor?",
    "correct_answer": "It is a pure semiconductor without any significant doping.",
    "distractors": [
      "It is doped with donor atoms to increase hole concentration.",
      "It contains a high density of mobile ions.",
      "It behaves as a conductor at all temperatures."
    ],
    "context": "An intrinsic semiconductor is made from pure material like silicon or germanium and contains equal numbers of electrons and holes.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Semiconductors",
    "subtopic": "Extrinsic",
    "question": "What is the primary reason for doping in extrinsic semiconductors?",
    "correct_answer": "To increase charge carrier concentration.",
    "distractors": [
      "To convert semiconductors into insulators.",
      "To reduce atomic mass of the material.",
      "To enhance lattice vibrations."
    ],
    "context": "Doping introduces impurities to intrinsic semiconductors, increasing either electron or hole carriers to form n-type or p-type materials.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Diodes",
    "subtopic": "Zener Diodes",
    "question": "What is the main application of a Zener diode?",
    "correct_answer": "Voltage regulation in reverse breakdown mode.",
    "distractors": [
      "Rectification in forward bias only.",
      "Amplifying high-frequency signals.",
      "Storing charge in capacitive circuits."
    ],
    "context": "Zener diodes are used in voltage regulator circuits by operating in reverse breakdown, maintaining a constant output voltage.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Diodes",
    "subtopic": "LEDs",
    "question": "How does a Light Emitting Diode (LED) produce light?",
    "correct_answer": "By electron-hole recombination releasing energy as photons.",
    "distractors": [
      "By emitting electrons through thermionic emission.",
      "By magnetic field interaction in the PN junction.",
      "By dielectric breakdown at high voltages."
    ],
    "context": "In LEDs, electrons recombine with holes across the PN junction, and the energy released appears as visible light.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "BJTs",
    "subtopic": "Operation Modes",
    "question": "In active mode, how are the emitter-base and collector-base junctions biased in an NPN BJT?",
    "correct_answer": "Emitter-base is forward biased and collector-base is reverse biased.",
    "distractors": [
      "Both junctions are forward biased.",
      "Both junctions are reverse biased.",
      "Emitter-base is reverse biased and collector-base is forward biased."
    ],
    "context": "For an NPN transistor to operate in active mode, the base-emitter junction must be forward biased and the base-collector junction reverse biased.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "BJTs",
    "subtopic": "Amplifier",
    "question": "What is the function of a BJT in a common-emitter amplifier configuration?",
    "correct_answer": "To amplify voltage with phase reversal.",
    "distractors": [
      "To block DC signals and pass AC only.",
      "To convert AC into DC signal.",
      "To operate purely as a switch."
    ],
    "context": "The common-emitter configuration of a BJT is widely used for voltage amplification, with output 180° out of phase with input.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "BJTs",
    "subtopic": "Characteristics",
    "question": "What does the current gain (β) of a BJT represent?",
    "correct_answer": "The ratio of collector current to base current.",
    "distractors": [
      "The ratio of emitter current to collector current.",
      "The inverse of resistance across the base.",
      "The ratio of voltage across collector to emitter."
    ],
    "context": "Current gain β is a key parameter in BJTs, indicating how much collector current is produced per unit of base current.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Semiconductors",
    "subtopic": "Intrinsic Semiconductors",
    "question": "In an intrinsic semiconductor at room temperature, what is the relationship between electron concentration (n) and hole concentration (p)?",
    "correct_answer": "n = p = ni (intrinsic carrier concentration)",
    "distractors": [
      "n > p always",
      "p > n always",
      "n × p = constant but n ≠ p"
    ],
    "context": "In intrinsic semiconductors, the material is pure with no impurities. At thermal equilibrium, electron-hole pairs are generated by thermal energy, creating equal concentrations of electrons and holes. The intrinsic carrier concentration ni is temperature-dependent and follows ni² = np.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Semiconductors",
    "subtopic": "Extrinsic Semiconductors",
    "question": "When phosphorus atoms are added to pure silicon, what type of semiconductor is formed and what are the majority carriers?",
    "correct_answer": "N-type semiconductor with electrons as majority carriers",
    "distractors": [
      "P-type semiconductor with holes as majority carriers",
      "N-type semiconductor with holes as majority carriers",
      "Intrinsic semiconductor with equal carriers"
    ],
    "context": "Extrinsic semiconductors are created by doping pure semiconductors with impurities. Phosphorus is a pentavalent donor atom that provides free electrons when added to silicon, creating N-type material where electrons are majority carriers and holes are minority carriers.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Semiconductors",
    "subtopic": "Doping Concentration",
    "question": "In a heavily doped N-type semiconductor where Nd >> ni, what approximation can be made for the majority carrier concentration?",
    "correct_answer": "n ≈ Nd (donor concentration)",
    "distractors": [
      "n ≈ ni (intrinsic concentration)",
      "n ≈ Nd/2",
      "n ≈ √(Nd × ni)"
    ],
    "context": "In heavily doped extrinsic semiconductors, the dopant concentration far exceeds the intrinsic carrier concentration. For N-type material with Nd >> ni, the majority electron concentration is approximately equal to the donor concentration, while minority hole concentration is ni²/Nd.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Diodes and Variants",
    "subtopic": "PN Junction Diode",
    "question": "What happens to the width of the depletion region in a PN junction diode when forward bias is applied?",
    "correct_answer": "Depletion width decreases",
    "distractors": [
      "Depletion width increases",
      "Depletion width remains constant",
      "Depletion region disappears completely"
    ],
    "context": "In a PN junction diode, the depletion region is formed due to diffusion of carriers across the junction. When forward bias is applied, the external voltage opposes the built-in potential, reducing the electric field and narrowing the depletion width, allowing current to flow.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Diodes and Variants",
    "subtopic": "Zener Diode",
    "question": "What is the primary mechanism responsible for breakdown in a Zener diode with breakdown voltage less than 5V?",
    "correct_answer": "Zener breakdown (band-to-band tunneling)",
    "distractors": [
      "Avalanche breakdown",
      "Thermal breakdown",
      "Impact ionization"
    ],
    "context": "Zener diodes exhibit two breakdown mechanisms: Zener breakdown occurs at lower voltages (< 5V) due to band-to-band tunneling of electrons across the narrow depletion region, while avalanche breakdown dominates at higher voltages through impact ionization of carriers.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Diodes and Variants",
    "subtopic": "Light Emitting Diode",
    "question": "In an LED, what determines the color (wavelength) of the emitted light?",
    "correct_answer": "The bandgap energy of the semiconductor material",
    "distractors": [
      "The forward current through the LED",
      "The doping concentration",
      "The junction temperature only"
    ],
    "context": "LEDs emit light through electroluminescence when electrons recombine with holes across the bandgap. The photon energy E = hf = hc/λ equals the bandgap energy, so the wavelength (color) is determined by the semiconductor material's bandgap. Different materials produce different colors.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Bipolar Junction Transistors",
    "subtopic": "BJT Operation",
    "question": "In an NPN BJT operating in the active region, which junction is forward biased and which is reverse biased?",
    "correct_answer": "Base-Emitter forward biased, Base-Collector reverse biased",
    "distractors": [
      "Base-Emitter reverse biased, Base-Collector forward biased",
      "Both junctions forward biased",
      "Both junctions reverse biased"
    ],
    "context": "BJT operation depends on the biasing of its two junctions. In active region operation, the base-emitter junction is forward biased to inject carriers, while the base-collector junction is reverse biased to collect these carriers, enabling current amplification with β = IC/IB.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Semiconductors",
    "subtopic": "Intrinsic Semiconductors",
    "question": "At absolute zero temperature (0 K), what is the behavior of an intrinsic semiconductor?",
    "correct_answer": "It behaves as an insulator.",
    "distractors": [
      "It behaves as a perfect conductor.",
      "It exhibits moderate conductivity.",
      "Its resistance decreases significantly."
    ],
    "context": "An intrinsic semiconductor has an equal number of electrons and holes. At 0 K, all valence electrons are tightly bound in covalent bonds, and there are no free charge carriers, making it behave like an insulator.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Semiconductors",
    "subtopic": "Extrinsic Semiconductors",
    "question": "Which type of impurity is added to a pure semiconductor to create an N-type extrinsic semiconductor?",
    "correct_answer": "Pentavalent impurity.",
    "distractors": [
      "Trivalent impurity.",
      "Divalent impurity.",
      "Monovalent impurity."
    ],
    "context": "Extrinsic semiconductors are formed by doping intrinsic semiconductors with impurities. N-type semiconductors are created by adding pentavalent impurities (e.g., Phosphorus, Arsenic) which donate free electrons, making electrons the majority carriers.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Diodes",
    "subtopic": "PN Junction Diode Characteristics",
    "question": "When a PN junction diode is forward-biased, what happens to the width of the depletion region?",
    "correct_answer": "It decreases.",
    "distractors": [
      "It increases.",
      "It remains unchanged.",
      "It fluctuates rapidly."
    ],
    "context": "In a forward-biased PN junction diode, the applied voltage reduces the potential barrier across the junction. This allows majority carriers to cross the junction, and consequently, the width of the depletion region (which is devoid of free charge carriers) decreases.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Diodes",
    "subtopic": "Zener Diodes",
    "question": "What is the primary application of a Zener diode when operated in its reverse breakdown region?",
    "correct_answer": "Voltage regulation.",
    "distractors": [
      "Rectification.",
      "Amplification.",
      "Oscillation."
    ],
    "context": "Zener diodes are specifically designed to operate in the reverse breakdown region. In this region, they maintain a nearly constant voltage across their terminals despite significant changes in current, making them ideal for voltage regulation applications.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Diodes",
    "subtopic": "LEDs",
    "question": "What is the fundamental principle behind light emission in an LED (Light Emitting Diode)?",
    "correct_answer": "Recombination of electrons and holes in the active region.",
    "distractors": [
      "Heating of a filament to incandescence.",
      "Ionization of a gas by an electric field.",
      "Stimulated emission of photons."
    ],
    "context": "LEDs are forward-biased PN junction diodes. When electrons and holes recombine in the active region of the semiconductor material, they release energy in the form of photons, which is observed as light. The color of the light depends on the energy bandgap of the semiconductor material.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Bipolar Junction Transistors (BJTs)",
    "subtopic": "Common Emitter Configuration",
    "question": "In the common-emitter (CE) configuration of a BJT, what is the phase relationship between the input voltage (base-emitter) and the output voltage (collector-emitter) when the transistor is operating in the active region?",
    "correct_answer": "180 degrees out of phase.",
    "distractors": [
      "In phase.",
      "90 degrees out of phase.",
      "Dependent on the load resistance."
    ],
    "context": "In a common-emitter BJT amplifier operating in the active region, an increase in base current causes an increase in collector current, leading to an increased voltage drop across the collector resistor. This results in a decrease in collector-emitter voltage, causing a 180-degree phase shift between input and output voltages.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Bipolar Junction Transistors (BJTs)",
    "subtopic": "Transistor Biasing",
    "question": "For stable operation of a BJT amplifier, what is the primary purpose of biasing the transistor?",
    "correct_answer": "To set the DC operating point (Q-point) in the active region.",
    "distractors": [
      "To maximize the AC gain of the amplifier.",
      "To reduce the power dissipation in the transistor.",
      "To minimize the collector current variations."
    ],
    "context": "Biasing a BJT involves establishing appropriate DC voltages and currents (the Q-point) to ensure that the transistor operates in its desired region (typically the active region for amplification) over the entire range of the input signal. Proper biasing prevents distortion and ensures stable performance.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Semiconductors",
    "subtopic": "Intrinsic Semiconductors",
    "question": "What is the primary characteristic of an intrinsic semiconductor?",
    "correct_answer": "Equal number of electrons and holes",
    "distractors": [
      "Presence of only electrons as charge carriers",
      "Presence of only holes as charge carriers",
      "High conductivity due to impurities"
    ],
    "context": "An intrinsic semiconductor is a pure semiconductor without impurities, where the number of electrons equals the number of holes, leading to low conductivity at room temperature.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Semiconductors",
    "subtopic": "Extrinsic Semiconductors",
    "question": "What type of extrinsic semiconductor is formed by doping silicon with phosphorus?",
    "correct_answer": "N-type",
    "distractors": [
      "P-type",
      "Intrinsic",
      "Compensated"
    ],
    "context": "Doping silicon with phosphorus, a pentavalent impurity, introduces extra electrons, forming an N-type extrinsic semiconductor where electrons are the majority carriers.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Diodes",
    "subtopic": "PN Junction Diode",
    "question": "What happens to the depletion region of a PN junction diode when it is forward-biased?",
    "correct_answer": "The depletion region narrows",
    "distractors": [
      "The depletion region widens",
      "The depletion region remains unchanged",
      "The depletion region disappears completely"
    ],
    "context": "In a forward-biased PN junction diode, the applied voltage reduces the potential barrier, causing the depletion region to narrow and allowing current to flow.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Diodes",
    "subtopic": "Zener Diode",
    "question": "What is the primary application of a Zener diode in a circuit?",
    "correct_answer": "Voltage regulation",
    "distractors": [
      "Signal amplification",
      "Current rectification",
      "Frequency modulation"
    ],
    "context": "A Zener diode operates in reverse bias near its breakdown voltage, maintaining a constant output voltage, making it ideal for voltage regulation in circuits.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Diodes",
    "subtopic": "LEDs",
    "question": "What physical phenomenon causes light emission in a Light Emitting Diode (LED)?",
    "correct_answer": "Recombination of electrons and holes",
    "distractors": [
      "Thermionic emission",
      "Photoelectric effect",
      "Avalanche breakdown"
    ],
    "context": "In an LED, when electrons recombine with holes in the PN junction, energy is released as photons, producing light, with the wavelength depending on the semiconductor material.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Bipolar Junction Transistors",
    "subtopic": "BJT Operation",
    "question": "In which region does a BJT operate to function as an amplifier?",
    "correct_answer": "Active region",
    "distractors": [
      "Saturation region",
      "Cutoff region",
      "Reverse active region"
    ],
    "context": "In the active region, a BJT has a forward-biased base-emitter junction and a reverse-biased base-collector junction, enabling it to amplify signals.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Bipolar Junction Transistors",
    "subtopic": "BJT Parameters",
    "question": "What is the current gain (β) of a BJT in the common-emitter configuration defined as?",
    "correct_answer": "β = IC/IB",
    "distractors": [
      "β = IC/IE",
      "β = IB/IC",
      "β = IE/IB"
    ],
    "context": "In a BJT’s common-emitter configuration, the current gain (β) is the ratio of collector current (IC) to base current (IB), typically ranging from 20 to 1000 for most transistors.",
    "difficulty": "advanced",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Field Effect Transistors",
    "subtopic": "MOSFET",
    "question": "What controls the current flow between source and drain in a MOSFET?",
    "correct_answer": "The voltage applied at the gate terminal.",
    "distractors": [
      "The current flowing through the gate.",
      "The resistance between source and gate.",
      "The frequency of the input signal."
    ],
    "context": "In a MOSFET, the gate voltage controls the conductivity of the channel between the source and drain terminals without drawing significant current.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Field Effect Transistors",
    "subtopic": "JFET",
    "question": "In a JFET, how is the channel width controlled?",
    "correct_answer": "By varying the reverse bias voltage on the gate.",
    "distractors": [
      "By changing the current through the gate.",
      "By adjusting the source resistance.",
      "By increasing the drain voltage linearly."
    ],
    "context": "The gate of a JFET is reverse biased, and increasing this reverse bias reduces the channel width, thus controlling current flow.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "PN Junction Characteristics",
    "subtopic": "Forward Bias",
    "question": "What happens to the depletion region when a PN junction is forward biased?",
    "correct_answer": "The depletion width decreases, allowing current to flow.",
    "distractors": [
      "The depletion width increases, blocking current.",
      "The junction becomes insulating.",
      "The diode enters breakdown mode."
    ],
    "context": "Forward bias reduces the barrier potential at the PN junction, causing the depletion region to narrow and allowing charge carriers to flow.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "PN Junction Characteristics",
    "subtopic": "Reverse Bias",
    "question": "What is the main behavior of a PN junction under reverse bias?",
    "correct_answer": "It blocks current flow except for a small leakage current.",
    "distractors": [
      "It allows large current flow freely.",
      "It converts AC to DC.",
      "It amplifies input signals significantly."
    ],
    "context": "When reverse biased, a PN junction restricts current flow, permitting only minimal leakage current until breakdown occurs.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Device Modeling and Characteristics",
    "subtopic": "MOSFET Regions",
    "question": "Which region of a MOSFET is used for amplification?",
    "correct_answer": "Saturation region.",
    "distractors": [
      "Cut-off region.",
      "Triode region.",
      "Breakdown region."
    ],
    "context": "In the saturation region, the MOSFET operates with a constant drain current, making it suitable for amplification.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Device Modeling and Characteristics",
    "subtopic": "Transistor Modeling",
    "question": "What does the threshold voltage in a MOSFET determine?",
    "correct_answer": "The minimum gate voltage required to form a conducting channel.",
    "distractors": [
      "The maximum drain current allowed.",
      "The breakdown voltage of the junction.",
      "The operating frequency range of the device."
    ],
    "context": "The threshold voltage is the gate voltage at which a MOSFET begins to conduct; it’s a key parameter in modeling and switching behavior.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Breakdown Mechanisms",
    "subtopic": "Zener Breakdown",
    "question": "What is the cause of Zener breakdown in heavily doped PN junctions?",
    "correct_answer": "Tunneling of electrons through the narrow depletion region.",
    "distractors": [
      "Avalanche multiplication due to collisions.",
      "Thermal runaway of charge carriers.",
      "Photonic excitation in the depletion zone."
    ],
    "context": "Zener breakdown occurs at low reverse voltages in heavily doped PN junctions due to quantum tunneling across a thin depletion layer.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Breakdown Mechanisms",
    "subtopic": "Avalanche Breakdown",
    "question": "Which phenomenon leads to avalanche breakdown in semiconductors?",
    "correct_answer": "Impact ionization caused by high-energy carriers.",
    "distractors": [
      "Electron tunneling in low fields.",
      "Reverse leakage due to minority carriers.",
      "Thermal breakdown due to lattice vibrations."
    ],
    "context": "Avalanche breakdown happens when high reverse voltage accelerates carriers enough to create secondary ionizations, multiplying current flow.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Field Effect Transistors",
    "subtopic": "MOSFET Operation",
    "question": "Why is the gate current in a MOSFET ideally zero?",
    "correct_answer": "Because the gate is insulated by a dielectric layer, preventing current flow.",
    "distractors": [
      "Because the gate is connected to ground internally.",
      "Because the gate is in saturation mode always.",
      "Because the MOSFET operates with negative feedback."
    ],
    "context": "MOSFET gates are insulated with an oxide layer, which allows voltage control but blocks direct current flow into the gate.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Device Modeling and Characteristics",
    "subtopic": "Transfer Characteristics",
    "question": "What does the transfer characteristic of a MOSFET describe?",
    "correct_answer": "The relationship between gate voltage and drain current.",
    "distractors": [
      "The response of output current to drain resistance.",
      "The variation of drain voltage with source current.",
      "The linear gain at zero gate bias."
    ],
    "context": "The MOSFET’s transfer characteristic shows how the drain current varies with the gate voltage, crucial in analog and digital modeling.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Field Effect Transistors",
    "subtopic": "MOSFET Operation",
    "question": "In an N-channel MOSFET, what happens to the channel when the gate-source voltage VGS exceeds the threshold voltage VT?",
    "correct_answer": "An inversion layer (channel) forms under the gate oxide",
    "distractors": [
      "The channel gets depleted completely",
      "Holes accumulate under the gate oxide",
      "The substrate becomes forward biased"
    ],
    "context": "In N-channel MOSFETs, when VGS > VT, the positive gate voltage attracts electrons to the semiconductor-oxide interface, forming an inversion layer that acts as a conducting channel between source and drain. This channel allows current flow when VDS is applied.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Field Effect Transistors",
    "subtopic": "JFET Characteristics",
    "question": "What is the primary difference between JFET and MOSFET in terms of gate current?",
    "correct_answer": "JFET has negligible gate current due to reverse-biased PN junction",
    "distractors": [
      "JFET has high gate current like BJT",
      "MOSFET has higher gate current than JFET",
      "Both have identical gate current characteristics"
    ],
    "context": "JFETs use a reverse-biased PN junction as the gate, resulting in extremely low gate current (only leakage current). MOSFETs use an insulated gate with oxide layer, also providing high input impedance. Both are voltage-controlled devices with minimal gate current.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Field Effect Transistors",
    "subtopic": "MOSFET Scaling",
    "question": "According to constant field scaling in MOSFETs, if all dimensions are scaled down by factor α, how does the power density change?",
    "correct_answer": "Power density increases by factor α",
    "distractors": [
      "Power density decreases by factor α",
      "Power density remains constant",
      "Power density increases by factor α²"
    ],
    "context": "In constant field scaling, all voltages and dimensions are scaled by factor α while maintaining constant electric fields. Power per device scales as 1/α², but area scales as 1/α², so power density (power per unit area) increases by factor α, leading to thermal challenges in scaled devices.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "PN Junction Characteristics",
    "subtopic": "Current-Voltage Relationship",
    "question": "In the ideal diode equation I = Is(e^(qV/kT) - 1), what does the saturation current Is primarily depend on?",
    "correct_answer": "Minority carrier concentrations and diffusion coefficients",
    "distractors": [
      "Majority carrier concentrations only",
      "Applied voltage magnitude",
      "Junction capacitance"
    ],
    "context": "The saturation current Is in the diode equation represents the reverse bias current and depends on minority carrier concentrations (np0 and pn0), diffusion coefficients (Dn and Dp), and diffusion lengths. It is independent of applied voltage but strongly temperature dependent.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "PN Junction Characteristics",
    "subtopic": "Junction Capacitance",
    "question": "How does the junction capacitance of a reverse-biased PN junction vary with applied reverse voltage?",
    "correct_answer": "Capacitance decreases as reverse voltage increases",
    "distractors": [
      "Capacitance increases as reverse voltage increases",
      "Capacitance remains constant with voltage",
      "Capacitance first increases then decreases"
    ],
    "context": "Junction capacitance Cj = A√(εqN)/(2(Vbi + VR))^(1/2), where VR is reverse voltage. As reverse voltage increases, depletion width increases and capacitance decreases. This voltage-dependent capacitance is utilized in varactor diodes for tuning applications.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "PN Junction Characteristics",
    "subtopic": "Temperature Effects",
    "question": "How does the forward voltage drop of a silicon PN junction diode change with temperature at constant current?",
    "correct_answer": "Decreases by approximately 2mV/°C",
    "distractors": [
      "Increases by approximately 2mV/°C",
      "Remains constant with temperature",
      "Decreases by approximately 10mV/°C"
    ],
    "context": "The forward voltage of a PN junction has a negative temperature coefficient of approximately -2mV/°C for silicon diodes. This occurs because the thermal voltage kT/q increases while the bandgap energy decreases with temperature, resulting in lower forward voltage drop.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Device Modeling and Characteristics",
    "subtopic": "Small Signal Model",
    "question": "In the small-signal model of a MOSFET, what does the transconductance gm represent?",
    "correct_answer": "The ratio of change in drain current to change in gate-source voltage",
    "distractors": [
      "The ratio of change in gate current to gate voltage",
      "The output conductance of the device",
      "The input conductance at the gate"
    ],
    "context": "Transconductance gm = ∂ID/∂VGS is a key small-signal parameter representing the control of drain current by gate voltage. For MOSFETs in saturation, gm = √(2μCoxW/L × ID), indicating the amplification capability of the device.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Device Modeling and Characteristics",
    "subtopic": "SPICE Models",
    "question": "In SPICE Level 1 MOSFET model, which effect is NOT accounted for?",
    "correct_answer": "Channel length modulation",
    "distractors": [
      "Threshold voltage dependence on substrate bias",
      "Mobility degradation due to vertical field",
      "Velocity saturation effects"
    ],
    "context": "SPICE Level 1 is the simplest MOSFET model based on Shichman-Hodges equations. It includes basic square-law behavior but neglects advanced effects like channel length modulation, velocity saturation, and mobility degradation. Higher level models (Level 2, 3, BSIM) include these effects.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Breakdown Mechanisms",
    "subtopic": "Avalanche Breakdown",
    "question": "What is the primary cause of avalanche breakdown in reverse-biased PN junctions?",
    "correct_answer": "Impact ionization by high-energy carriers",
    "distractors": [
      "Tunneling of electrons across the junction",
      "Thermal generation of carriers",
      "Diffusion of majority carriers"
    ],
    "context": "Avalanche breakdown occurs when carriers gain sufficient kinetic energy from the electric field to create electron-hole pairs through impact ionization. This creates a multiplication effect where one carrier can generate multiple carriers, leading to rapid increase in reverse current.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Breakdown Mechanisms",
    "subtopic": "Zener vs Avalanche Breakdown",
    "question": "What is the temperature coefficient difference between Zener breakdown and avalanche breakdown?",
    "correct_answer": "Zener breakdown has negative temperature coefficient, avalanche has positive",
    "distractors": [
      "Both have positive temperature coefficients",
      "Both have negative temperature coefficients",
      "Zener has positive, avalanche has negative coefficient"
    ],
    "context": "Zener breakdown (tunneling) has a negative temperature coefficient because bandgap decreases with temperature, making tunneling easier. Avalanche breakdown has a positive temperature coefficient because impact ionization rates decrease with temperature due to increased lattice scattering.",
    "difficulty": "advance",
    "type": "mcq"
  },
   {
    "goal": "GATE ECE",
    "topic": "Field Effect Transistors",
    "subtopic": "MOSFETs",
    "question": "Which terminal controls the channel conductivity in a MOSFET?",
    "correct_answer": "Gate terminal.",
    "distractors": [
      "Drain terminal.",
      "Source terminal.",
      "Bulk terminal."
    ],
    "context": "In a Metal-Oxide-Semiconductor Field-Effect Transistor (MOSFET), the voltage applied to the gate terminal creates an electric field that modulates the conductivity of the channel between the source and drain, thereby controlling the current flow.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Field Effect Transistors",
    "subtopic": "JFETs",
    "question": "What is the primary mechanism for current control in a JFET (Junction Field-Effect Transistor)?",
    "correct_answer": "Varying the width of the depletion region.",
    "distractors": [
      "Injecting minority carriers into the base.",
      "Modulating the gate-source voltage to attract carriers.",
      "Controlling the flow of current through a PN junction in forward bias."
    ],
    "context": "In a JFET, the gate-source voltage (reverse-biased) changes the width of the depletion region within the channel. As the depletion region widens, it 'pinches off' the channel, restricting the current flow between the source and drain, thus controlling the device.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "PN Junction Characteristics",
    "subtopic": "Forward Bias",
    "question": "As the forward bias voltage across a PN junction diode increases, what happens to the diffusion current?",
    "correct_answer": "It increases exponentially.",
    "distractors": [
      "It decreases exponentially.",
      "It remains constant.",
      "It decreases linearly."
    ],
    "context": "When a PN junction is forward-biased, the potential barrier is lowered, allowing more majority carriers to diffuse across the junction. This diffusion current increases exponentially with the applied forward voltage, as described by the diode equation.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "PN Junction Characteristics",
    "subtopic": "Reverse Bias",
    "question": "What is the dominant current mechanism in a PN junction diode under reverse bias, excluding breakdown?",
    "correct_answer": "Reverse saturation current due to minority carrier drift.",
    "distractors": [
      "Majority carrier diffusion current.",
      "Avalanche breakdown current.",
      "Zener tunneling current."
    ],
    "context": "Under reverse bias, the depletion region widens, and majority carrier flow is prevented. However, a small leakage current, known as the reverse saturation current, flows due to the thermal generation of minority carriers within the depletion region and their subsequent drift across the junction.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Device Modeling and Characteristics",
    "subtopic": "MOSFET Threshold Voltage",
    "question": "What is the significance of the threshold voltage ($V_{th}$) in a MOSFET?",
    "correct_answer": "It is the minimum gate-source voltage required to create a conducting channel.",
    "distractors": [
      "It is the maximum drain-source voltage the device can withstand.",
      "It is the voltage at which the drain current saturates.",
      "It represents the voltage drop across the oxide layer."
    ],
    "context": "The threshold voltage ($V_{th}$) in a MOSFET is a critical parameter. It defines the minimum gate-source voltage that must be applied to induce an inversion layer (channel) between the source and drain, thereby allowing significant current flow.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Device Modeling and Characteristics",
    "subtopic": "Small-Signal Models",
    "question": "In the small-signal equivalent circuit of a MOSFET, what does the transconductance ($g_m$) primarily represent?",
    "correct_answer": "The change in drain current with respect to a change in gate-source voltage.",
    "distractors": [
      "The output resistance of the device.",
      "The input capacitance of the device.",
      "The voltage gain of the amplifier."
    ],
    "context": "The transconductance ($g_m$) is a key parameter in the small-signal model of a MOSFET. It quantifies how effectively the gate-source voltage controls the drain current, and it is a crucial factor in determining the voltage gain of a MOSFET amplifier.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Breakdown Mechanisms",
    "subtopic": "Avalanche Breakdown",
    "question": "Which phenomenon is primarily responsible for avalanche breakdown in a PN junction diode?",
    "correct_answer": "Impact ionization of atoms by high-energy charge carriers.",
    "distractors": [
      "Quantum mechanical tunneling of electrons.",
      "Thermal runaway due to increased temperature.",
      "Recombination of electrons and holes."
    ],
    "context": "Avalanche breakdown occurs in reverse-biased PN junctions when the electric field across the depletion region becomes very strong. High-energy carriers collide with lattice atoms, generating new electron-hole pairs, which in turn generate more carriers, leading to a rapid multiplication of current.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Breakdown Mechanisms",
    "subtopic": "Zener Breakdown",
    "question": "Zener breakdown primarily occurs in heavily doped PN junctions due to which physical effect?",
    "correct_answer": "Quantum mechanical tunneling of electrons.",
    "distractors": [
      "Thermal generation of electron-hole pairs.",
      "Impact ionization by energetic carriers.",
      "Increased minority carrier diffusion."
    ],
    "context": "Zener breakdown is prevalent in heavily doped PN junctions where the depletion region is very thin. Under reverse bias, a strong electric field across this thin region causes electrons to tunnel directly from the valence band to the conduction band, leading to a sharp increase in current.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Field Effect Transistors",
    "subtopic": "MOSFET Operating Regions",
    "question": "In which operating region does a MOSFET behave like a voltage-controlled resistor?",
    "correct_answer": "Triode (Linear) region.",
    "distractors": [
      "Saturation region.",
      "Cut-off region.",
      "Breakdown region."
    ],
    "context": "The triode (or linear) region of a MOSFET is characterized by a relatively small drain-source voltage ($V_{DS} < V_{GS} - V_{th}$). In this region, the channel resistance is controlled by the gate-source voltage, making the MOSFET behave like a voltage-controlled resistor.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Device Modeling and Characteristics",
    "subtopic": "Output Characteristics",
    "question": "For a common-source MOSFET amplifier, what does the slope of the $I_D$ vs. $V_{DS}$ curve represent in the saturation region?",
    "correct_answer": "The reciprocal of the output resistance ($1/r_o$).",
    "distractors": [
      "The transconductance ($g_m$).",
      "The input resistance ($R_{in}$).",
      "The voltage gain of the amplifier."
    ],
    "context": "In the saturation region of a MOSFET's output characteristics, the drain current ($I_D$) becomes relatively independent of the drain-source voltage ($V_{DS}$). The small, non-zero slope in this region is due to channel length modulation and represents the output conductance ($1/r_o$), where $r_o$ is the output resistance.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Field Effect Transistors",
    "subtopic": "MOSFET Types",
    "question": "What is the primary difference between an enhancement-mode MOSFET and a depletion-mode MOSFET?",
    "correct_answer": "Enhancement-mode requires gate voltage to conduct, while depletion-mode conducts without gate voltage",
    "distractors": [
      "Enhancement-mode uses N-type substrate, depletion-mode uses P-type",
      "Enhancement-mode has higher threshold voltage",
      "Depletion-mode cannot operate in saturation"
    ],
    "context": "In an enhancement-mode MOSFET, a gate voltage is needed to form a conductive channel, while a depletion-mode MOSFET has a pre-existing channel that can be turned off by applying a gate voltage.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Field Effect Transistors",
    "subtopic": "JFET Operation",
    "question": "What controls the drain current in a JFET?",
    "correct_answer": "Gate-source voltage",
    "distractors": [
      "Drain-source voltage",
      "Source-substrate voltage",
      "Gate-drain voltage"
    ],
    "context": "In a JFET, the drain current is controlled by the gate-source voltage, which modulates the width of the depletion region in the channel.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Field Effect Transistors",
    "subtopic": "MOSFET Operation",
    "question": "In which region does a MOSFET operate when it is used as a switch in the 'off' state?",
    "correct_answer": "Cutoff region",
    "distractors": [
      "Triode region",
      "Saturation region",
      "Subthreshold region"
    ],
    "context": "In the cutoff region, a MOSFET has no channel formed, resulting in negligible drain current, making it suitable for the 'off' state in switching applications.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "PN Junction Characteristics",
    "subtopic": "Forward Bias",
    "question": "What is the primary effect of forward bias on the current in a PN junction diode?",
    "correct_answer": "Exponential increase in current with voltage",
    "distractors": [
      "Linear increase in current with voltage",
      "Constant current regardless of voltage",
      "Decrease in current with increasing voltage"
    ],
    "context": "In a forward-biased PN junction, the current increases exponentially with applied voltage due to reduced barrier potential, as described by the diode equation I = Is(e^(V/VT) - 1).",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "PN Junction Characteristics",
    "subtopic": "Reverse Bias",
    "question": "What is the dominant current in a reverse-biased PN junction diode under normal conditions?",
    "correct_answer": "Reverse saturation current",
    "distractors": [
      "Diffusion current",
      "Drift current due to majority carriers",
      "Breakdown current"
    ],
    "context": "In a reverse-biased PN junction, the reverse saturation current, caused by thermally generated minority carriers, dominates under normal conditions before breakdown occurs.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Device Modeling and Characteristics",
    "subtopic": "MOSFET Modeling",
    "question": "What is the expression for drain current in the saturation region of an N-channel MOSFET?",
    "correct_answer": "ID = (μnCox/2)(W/L)(VGS - Vth)^2",
    "distractors": [
      "ID = (μnCox)(W/L)(VGS - Vth)",
      "ID = (μnCox/2)(W/L)(VDS - Vth)^2",
      "ID = (μnCox)(W/L)(VGS - VDS)"
    ],
    "context": "In the saturation region, the drain current of an N-channel MOSFET is modeled as ID = (μnCox/2)(W/L)(VGS - Vth)^2, where μn is mobility, Cox is oxide capacitance, W/L is channel aspect ratio, and Vth is threshold voltage.",
    "difficulty": "advanced",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Device Modeling and Characteristics",
    "subtopic": "JFET Modeling",
    "question": "What is the pinch-off voltage (VP) in a JFET?",
    "correct_answer": "The gate-source voltage at which the channel is fully depleted",
    "distractors": [
      "The drain-source voltage at which current saturates",
      "The gate-source voltage at which current is maximum",
      "The voltage across the drain and source at cutoff"
    ],
    "context": "The pinch-off voltage (VP) in a JFET is the gate-source voltage that fully depletes the channel, stopping current flow, and is a key parameter in JFET modeling.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Breakdown Mechanisms",
    "subtopic": "Zener Breakdown",
    "question": "What is the primary mechanism of Zener breakdown in a heavily doped PN junction?",
    "correct_answer": "Tunneling of electrons across the junction",
    "distractors": [
      "Avalanche multiplication of carriers",
      "Thermal generation of carriers",
      "Diffusion of majority carriers"
    ],
    "context": "Zener breakdown occurs in heavily doped PN junctions at low reverse voltages due to quantum tunneling of electrons through the narrow depletion region.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Breakdown Mechanisms",
    "subtopic": "Avalanche Breakdown",
    "question": "In which type of PN junction is avalanche breakdown most likely to occur?",
    "correct_answer": "Lightly doped PN junction",
    "distractors": [
      "Heavily doped PN junction",
      "Intrinsic semiconductor junction",
      "Metal-semiconductor junction"
    ],
    "context": "Avalanche breakdown occurs in lightly doped PN junctions at high reverse voltages due to impact ionization, where accelerated carriers create additional electron-hole pairs.",
    "difficulty": "advanced",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Field Effect Transistors",
    "subtopic": "MOSFET Characteristics",
    "question": "What is the effect of increasing the gate-source voltage (VGS) above the threshold voltage in an N-channel MOSFET in the saturation region?",
    "correct_answer": "Increases the drain current quadratically",
    "distractors": [
      "Increases the drain current linearly",
      "Decreases the drain current",
      "Has no effect on the drain current"
    ],
    "context": "In the saturation region of an N-channel MOSFET, the drain current increases quadratically with (VGS - Vth) as per the equation ID = (μnCox/2)(W/L)(VGS - Vth)^2.",
    "difficulty": "advanced",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Analog Circuits",
    "subtopic": "Diode Circuits",
    "question": "In a half-wave rectifier circuit using an ideal diode, what happens during the negative half-cycle of the input signal?",
    "correct_answer": "The diode becomes reverse biased and blocks current flow.",
    "distractors": [
      "The diode conducts current in reverse direction.",
      "The diode amplifies the signal.",
      "The diode short-circuits the output."
    ],
    "context": "In a half-wave rectifier, the diode only conducts during the positive half-cycle. In the negative cycle, the ideal diode is reverse biased and blocks current.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Analog Circuits",
    "subtopic": "MOSFET Amplifiers",
    "question": "Which region of operation must a MOSFET be in for small signal amplification?",
    "correct_answer": "Saturation region.",
    "distractors": [
      "Cut-off region.",
      "Triode region.",
      "Breakdown region."
    ],
    "context": "For small signal amplification, the MOSFET must be biased in the saturation region where it behaves like a voltage-controlled current source.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Analog Circuits",
    "subtopic": "BJT Amplifiers",
    "question": "In a common-emitter amplifier, what causes phase inversion between input and output?",
    "correct_answer": "The output is taken across the collector, which goes low when the base-emitter voltage increases.",
    "distractors": [
      "The output is taken across the emitter which leads the input.",
      "The base current is always out of phase with collector.",
      "The collector follows the emitter input directly."
    ],
    "context": "Common-emitter amplifiers exhibit 180° phase shift because the output at the collector drops when input base-emitter voltage increases.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Analog Circuits",
    "subtopic": "Small Signal Analysis",
    "question": "What does the transconductance parameter 'gm' in a MOSFET indicate?",
    "correct_answer": "Rate of change of drain current with respect to gate voltage.",
    "distractors": [
      "Rate of change of drain voltage with drain current.",
      "Resistance between drain and gate.",
      "Capacitance between gate and source."
    ],
    "context": "Transconductance (gm) defines the efficiency of gate control over drain current and is a key parameter in small signal models.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Analog Circuits",
    "subtopic": "Op-Amps (Ideal)",
    "question": "For an ideal op-amp in negative feedback, what is the voltage difference between the inverting and non-inverting terminals?",
    "correct_answer": "Zero volts (virtual short).",
    "distractors": [
      "Equal to the input voltage.",
      "Equal to the output voltage.",
      "Depends on the feedback resistor value."
    ],
    "context": "An ideal op-amp with negative feedback forces the voltage at both input terminals to be equal, creating a virtual short with zero voltage difference.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Analog Circuits",
    "subtopic": "Op-Amps (Non-Ideal)",
    "question": "Which of the following non-ideal effects causes offset voltage at the output of a practical op-amp?",
    "correct_answer": "Input bias currents and input offset voltage.",
    "distractors": [
      "Infinite gain of the op-amp.",
      "Ideal feedback loop behavior.",
      "Virtual short condition."
    ],
    "context": "Non-ideal op-amps exhibit offset at output due to input bias currents and mismatched input offset voltage.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Analog Circuits",
    "subtopic": "Op-Amp Applications",
    "question": "In an inverting amplifier using an op-amp, what is the gain formula?",
    "correct_answer": "Gain = -Rf / Rin.",
    "distractors": [
      "Gain = Rf × Rin.",
      "Gain = Rin / Rf.",
      "Gain = 1 + (Rf / Rin)."
    ],
    "context": "In inverting op-amp configurations, the voltage gain is calculated as the negative ratio of feedback resistance to input resistance.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Diode and BJT/MOSFET Circuits",
    "subtopic": "Diode Clippers/Clampers",
    "question": "Which diode circuit is primarily used to shift the DC level of an input signal without altering its AC component?",
    "correct_answer": "Clamper circuit.",
    "distractors": [
      "Clipper circuit.",
      "Rectifier circuit.",
      "Voltage multiplier circuit."
    ],
    "context": "Clamper circuits (or DC restorers) add a DC offset to an AC signal. They use a diode, a capacitor, and often a resistor, to shift the entire waveform either above or below a specific DC level, while preserving the peak-to-peak AC voltage.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Diode and BJT/MOSFET Circuits",
    "subtopic": "BJT Biasing",
    "question": "For a common-emitter BJT amplifier, what is the primary advantage of using voltage-divider biasing over fixed-bias configuration?",
    "correct_answer": "Improved Q-point stability against variations in beta ($\\beta$).",
    "distractors": [
      "Higher voltage gain.",
      "Reduced power consumption.",
      "Simpler circuit implementation."
    ],
    "context": "Voltage-divider biasing provides excellent Q-point stability in BJT circuits. By creating a stiff voltage at the base, it makes the collector current largely independent of the transistor's current gain ($\\beta$), which can vary significantly between devices or with temperature.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Small Signal Analysis",
    "subtopic": "BJT Small Signal Model",
    "question": "In the small-signal hybrid-pi model of a BJT, what does the parameter $r_\\pi$ (pi resistance) represent?",
    "correct_answer": "The dynamic resistance of the base-emitter junction.",
    "distractors": [
      "The static DC resistance of the base-emitter junction.",
      "The output resistance of the collector.",
      "The resistance of the collector-base junction."
    ],
    "context": "The small-signal hybrid-pi model is used to analyze the AC behavior of BJTs. The parameter $r_\\pi$ is the small-signal input resistance at the base, representing the dynamic resistance of the forward-biased base-emitter junction, and is related to $g_m$ and $\\beta$ by $r_\\pi = \\beta / g_m$.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Small Signal Analysis",
    "subtopic": "MOSFET Small Signal Model",
    "question": "When performing small-signal analysis of a common-source MOSFET amplifier, why is the input resistance typically considered very high?",
    "correct_answer": "The gate is insulated from the channel by the oxide layer.",
    "distractors": [
      "The drain current is constant in the saturation region.",
      "The source terminal is grounded.",
      "The transconductance ($g_m$) is very large."
    ],
    "context": "The gate of a MOSFET is electrically insulated from the semiconductor channel by a thin silicon dioxide ($SiO_2$) layer. This oxide layer acts as a very good insulator, resulting in extremely high input impedance (ideally infinite) at the gate terminal for AC signals.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Operational Amplifiers",
    "subtopic": "Ideal Op-Amp Characteristics",
    "question": "For an ideal operational amplifier, what is the magnitude of its open-loop voltage gain?",
    "correct_answer": "Infinite.",
    "distractors": [
      "Zero.",
      "Unity (1).",
      "A large but finite value."
    ],
    "context": "An ideal operational amplifier is characterized by several properties, one of which is infinite open-loop voltage gain. This means that even a minuscule difference in voltage between its input terminals will result in a very large output voltage, theoretically reaching the supply rails.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Operational Amplifiers",
    "subtopic": "Non-Ideal Op-Amp",
    "question": "What is the consequence of a finite open-loop gain in a real operational amplifier, compared to an ideal op-amp?",
    "correct_answer": "Reduced accuracy and linearity of closed-loop gain.",
    "distractors": [
      "Increased input impedance.",
      "Zero output impedance.",
      "Elimination of input offset voltage."
    ],
    "context": "While ideal op-amps have infinite open-loop gain, real op-amps have a large but finite gain. This finite gain means that the accuracy and linearity of the closed-loop gain, particularly at higher frequencies, will be degraded compared to the ideal case.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Operational Amplifiers",
    "subtopic": "Op-Amp Applications",
    "question": "Which op-amp configuration is commonly used to produce an output voltage proportional to the integral of the input voltage?",
    "correct_answer": "Integrator.",
    "distractors": [
      "Differentiator.",
      "Non-inverting amplifier.",
      "Voltage follower."
    ],
    "context": "An op-amp integrator circuit typically consists of a resistor at the input and a capacitor in the feedback path. The output voltage of this configuration is proportional to the time integral of the input voltage, making it useful in various signal processing applications.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Diode Circuits",
    "subtopic": "Rectifier Circuits",
    "question": "What is the primary function of a diode in a half-wave rectifier circuit?",
    "correct_answer": "Converts AC to pulsating DC",
    "distractors": [
      "Amplifies the input AC signal",
      "Filters out high-frequency noise",
      "Regulates the output voltage"
    ],
    "context": "In a half-wave rectifier, a diode allows current to flow during one half of the AC input cycle, converting alternating current (AC) to pulsating direct current (DC).",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "BJT Circuits",
    "subtopic": "Common-Emitter Amplifier",
    "question": "What is the role of the emitter resistor in a common-emitter BJT amplifier?",
    "correct_answer": "Provides negative feedback to stabilize the operating point",
    "distractors": [
      "Increases the voltage gain significantly",
      "Acts as a low-pass filter",
      "Prevents signal amplification"
    ],
    "context": "In a common-emitter BJT amplifier, the emitter resistor introduces negative feedback, which stabilizes the biasing point against temperature and parameter variations.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "MOSFET Circuits",
    "subtopic": "Common-Source Amplifier",
    "question": "What is the effect of a source resistor in a common-source MOSFET amplifier?",
    "correct_answer": "Reduces gain but improves linearity",
    "distractors": [
      "Increases gain without affecting linearity",
      "Completely eliminates distortion",
      "Has no effect on gain or linearity"
    ],
    "context": "In a common-source MOSFET amplifier, a source resistor provides negative feedback, reducing the voltage gain but improving linearity by stabilizing the operating point.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Small Signal Analysis",
    "subtopic": "BJT Small Signal Model",
    "question": "In the small signal model of a BJT, what is the transconductance (gm) defined as?",
    "correct_answer": "gm = IC/VT",
    "distractors": [
      "gm = IB/VT",
      "gm = IC/VBE",
      "gm = VCE/IB"
    ],
    "context": "In the small signal model of a BJT, the transconductance (gm) is defined as gm = IC/VT, where IC is the collector current and VT is the thermal voltage (approximately 26 mV at room temperature).",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Small Signal Analysis",
    "subtopic": "MOSFET Small Signal Model",
    "question": "What is the small signal output resistance (ro) of a MOSFET in the saturation region?",
    "correct_answer": "ro = 1/(λID)",
    "distractors": [
      "ro = λID",
      "ro = VDS/ID",
      "ro = 1/(μnCoxID)"
    ],
    "context": "In the small signal model of a MOSFET in saturation, the output resistance (ro) is approximated as ro = 1/(λID), where λ is the channel-length modulation parameter and ID is the drain current.",
    "difficulty": "advanced",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Operational Amplifiers",
    "subtopic": "Ideal Op-Amp",
    "question": "What is the ideal open-loop gain of an operational amplifier?",
    "correct_answer": "Infinite",
    "distractors": [
      "Zero",
      "Unity",
      "100 dB"
    ],
    "context": "An ideal operational amplifier is assumed to have infinite open-loop gain, allowing it to achieve precise amplification when used with negative feedback.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Operational Amplifiers",
    "subtopic": "Non-Ideal Op-Amp",
    "question": "What is the effect of finite open-loop gain in a non-ideal op-amp on the closed-loop gain of an inverting amplifier?",
    "correct_answer": "Reduces the closed-loop gain slightly",
    "distractors": [
      "Increases the closed-loop gain significantly",
      "Makes the closed-loop gain zero",
      "Has no effect on the closed-loop gain"
    ],
    "context": "In a non-ideal op-amp, finite open-loop gain causes the closed-loop gain of an inverting amplifier to deviate slightly from the ideal value determined by the feedback resistors.",
    "difficulty": "advanced",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Diode and BJT/MOSFET Circuits",
    "subtopic": "PN Junction Diode",
    "question": "What is the typical forward voltage drop across a silicon diode at room temperature when conducting current?",
    "correct_answer": "0.7V",
    "distractors": ["0.3V", "1.2V", "0.5V"],
    "context": "Silicon diodes have a forward voltage drop of approximately 0.7V when conducting, while germanium diodes have approximately 0.3V. This voltage drop is due to the energy barrier in the PN junction.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Diode and BJT/MOSFET Circuits",
    "subtopic": "BJT Biasing",
    "question": "In a common emitter BJT amplifier, which biasing technique provides the best thermal stability?",
    "correct_answer": "Voltage divider biasing",
    "distractors": ["Fixed bias", "Collector feedback bias", "Emitter bias"],
    "context": "Voltage divider biasing (also called potential divider bias) provides excellent thermal stability by using two resistors to set the base voltage, making the operating point less sensitive to temperature variations and β changes.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Small Signal Analysis",
    "subtopic": "BJT Small Signal Model",
    "question": "What is the expression for transconductance (gm) of a BJT in terms of collector current IC?",
    "correct_answer": "gm = IC/VT",
    "distractors": ["gm = VT/IC", "gm = β×IC/VT", "gm = IC×VT"],
    "context": "The transconductance of a BJT is given by gm = IC/VT, where IC is the collector current and VT is the thermal voltage (approximately 26mV at room temperature). This parameter relates the change in collector current to the change in base-emitter voltage.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Small Signal Analysis",
    "subtopic": "MOSFET Small Signal Parameters",
    "question": "For a MOSFET operating in saturation region, the small signal drain conductance gds is primarily determined by which effect?",
    "correct_answer": "Channel length modulation",
    "distractors": ["Body effect", "Velocity saturation", "Hot carrier effects"],
    "context": "Channel length modulation causes the effective channel length to decrease as VDS increases, resulting in a finite output conductance gds = λ×ID, where λ is the channel length modulation parameter and ID is the drain current.",
    "difficulty": "advanced",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Operational Amplifiers",
    "subtopic": "Ideal Op-Amp Properties",
    "question": "Which of the following is NOT a characteristic of an ideal operational amplifier?",
    "correct_answer": "Finite common mode rejection ratio",
    "distractors": ["Infinite input impedance", "Zero output impedance", "Infinite open loop gain"],
    "context": "An ideal op-amp has infinite input impedance, zero output impedance, infinite open loop gain, infinite bandwidth, and infinite common mode rejection ratio (CMRR). Real op-amps have finite values for these parameters.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Operational Amplifiers",
    "subtopic": "Non-ideal Op-Amp Effects",
    "question": "Input offset voltage in a real operational amplifier causes which primary problem in DC-coupled circuits?",
    "correct_answer": "DC output voltage error",
    "distractors": ["Reduced bandwidth", "Increased noise", "Phase shift"],
    "context": "Input offset voltage is the small DC voltage that must be applied between the input terminals to make the output zero. In DC-coupled circuits, this offset gets amplified by the closed-loop gain, causing a DC error at the output.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Operational Amplifiers",
    "subtopic": "Op-Amp Frequency Response",
    "question": "The gain-bandwidth product (GBW) of an op-amp determines which circuit parameter in a non-inverting amplifier configuration?",
    "correct_answer": "Bandwidth of the closed-loop amplifier",
    "distractors": ["DC gain of the amplifier", "Input impedance", "Slew rate"],
    "context": "The gain-bandwidth product is constant for a given op-amp. In a closed-loop configuration, as the gain increases, the bandwidth decreases such that their product remains constant: BW = GBW/Gain.",
    "difficulty": "advanced",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Analog Circuits",
    "subtopic": "Active Filters",
    "question": "What defines an active low-pass filter using an op-amp?",
    "correct_answer": "It allows low-frequency signals and attenuates high-frequency signals using op-amps with RC elements.",
    "distractors": [
      "It amplifies high frequencies and blocks low frequencies.",
      "It requires inductors to function.",
      "It has no phase shift at any frequency."
    ],
    "context": "Active low-pass filters use op-amps with resistors and capacitors to pass low frequencies while attenuating high frequencies.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Analog Circuits",
    "subtopic": "Active Filters",
    "question": "Why are active filters preferred over passive filters at low frequencies?",
    "correct_answer": "They provide gain and eliminate the need for inductors.",
    "distractors": [
      "They have lower power consumption.",
      "They work only in high-frequency applications.",
      "They always require large capacitors."
    ],
    "context": "Active filters offer amplification, can drive loads, and do not require bulky inductors, making them ideal at low frequencies.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Analog Circuits",
    "subtopic": "Oscillators",
    "question": "What is the condition for oscillation in a feedback amplifier?",
    "correct_answer": "The loop gain must be unity and total phase shift must be 0° or 360°.",
    "distractors": [
      "The loop gain must be zero and phase shift should be 90°.",
      "The amplifier must be in saturation mode.",
      "There must be negative feedback only."
    ],
    "context": "For sustained oscillations, Barkhausen criteria must be met: loop gain = 1 and phase shift = 0° or 360°.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Analog Circuits",
    "subtopic": "Oscillators",
    "question": "Which type of oscillator is commonly used for high-frequency applications?",
    "correct_answer": "Colpitts oscillator.",
    "distractors": [
      "Wien bridge oscillator.",
      "RC phase shift oscillator.",
      "Integrator circuit."
    ],
    "context": "Colpitts oscillators, which use LC tanks, are well-suited for generating high-frequency sinusoidal signals.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Analog Circuits",
    "subtopic": "Power Amplifiers",
    "question": "What distinguishes Class A amplifiers from Class B and AB in terms of conduction angle?",
    "correct_answer": "Class A amplifiers conduct for the full 360° of the input signal.",
    "distractors": [
      "Class A amplifiers conduct for 180° of the input signal.",
      "They operate only with digital signals.",
      "They have zero power dissipation at idle."
    ],
    "context": "Class A amplifiers operate over the entire input cycle, offering high linearity but lower efficiency.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Analog Circuits",
    "subtopic": "Power Amplifiers",
    "question": "What is the main advantage of a Class AB power amplifier?",
    "correct_answer": "It offers a compromise between efficiency and linearity.",
    "distractors": [
      "It is the most efficient amplifier class.",
      "It conducts the full input signal.",
      "It operates only in digital domains."
    ],
    "context": "Class AB amplifiers combine the low distortion of Class A and the efficiency of Class B, ideal for audio applications.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Analog Circuits",
    "subtopic": "Feedback Amplifiers",
    "question": "What is the effect of negative feedback in an amplifier circuit?",
    "correct_answer": "It improves stability and reduces distortion.",
    "distractors": [
      "It increases gain without changing bandwidth.",
      "It always results in oscillations.",
      "It reduces the input resistance."
    ],
    "context": "Negative feedback in amplifiers enhances stability, lowers gain sensitivity, and minimizes non-linear distortion.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Analog Circuits",
    "subtopic": "Analog Circuit Design",
    "question": "What is the primary function of a current mirror in analog circuit design?",
    "correct_answer": "To replicate a reference current in multiple branches.",
    "distractors": [
      "To amplify voltage signals.",
      "To generate clock pulses.",
      "To reduce output impedance."
    ],
    "context": "Current mirrors are used to copy a precise reference current into other branches of a circuit, useful in biasing.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Analog Circuits",
    "subtopic": "Analog Circuit Design",
    "question": "Why are differential amplifiers preferred in analog ICs?",
    "correct_answer": "They reject common-mode signals and amplify differential signals.",
    "distractors": [
      "They consume less power than single-ended amplifiers.",
      "They have lower gain than inverting amplifiers.",
      "They are limited to digital signal processing."
    ],
    "context": "Differential amplifiers offer high common-mode rejection, making them ideal for low-noise and precision analog designs.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Analog Circuits",
    "subtopic": "Feedback Amplifiers",
    "question": "Which parameter is reduced in an amplifier when negative feedback is applied?",
    "correct_answer": "Gain sensitivity to component variations.",
    "distractors": [
      "Bandwidth of the amplifier.",
      "Phase margin of the loop.",
      "Input impedance of the circuit."
    ],
    "context": "Negative feedback helps stabilize amplifier gain against variations in component values and temperature.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
   {
    "goal": "GATE ECE",
    "topic": "Active Filters",
    "subtopic": "Sallen-Key Filter",
    "question": "In a Sallen-Key low-pass filter, what is the primary advantage over passive RC filters?",
    "correct_answer": "No loading effect and unity gain",
    "distractors": ["Higher cutoff frequency", "Lower power consumption", "Simpler circuit design"],
    "context": "Sallen-Key filters use op-amps to provide unity gain and high input impedance, eliminating loading effects that occur in passive filters when cascaded. This allows multiple filter stages to be connected without affecting each other's frequency response.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Active Filters",
    "subtopic": "Butterworth Filter",
    "question": "What is the roll-off rate of a second-order Butterworth low-pass filter?",
    "correct_answer": "40 dB/decade",
    "distractors": ["20 dB/decade", "60 dB/decade", "80 dB/decade"],
    "context": "A second-order Butterworth filter has a roll-off rate of 40 dB/decade (12 dB/octave) beyond the cutoff frequency. The roll-off rate increases by 20 dB/decade for each additional pole in the filter design.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Active Filters",
    "subtopic": "Multiple Feedback Filter",
    "question": "In a multiple feedback band-pass filter, which component primarily determines the center frequency?",
    "correct_answer": "Product of resistor and capacitor values",
    "distractors": ["Op-amp gain-bandwidth product", "Supply voltage level", "Temperature coefficient"],
    "context": "The center frequency of a multiple feedback band-pass filter is determined by f0 = 1/(2π√(R1R2C1C2)), where the RC product sets the resonant frequency. The Q factor is determined by the ratio of resistor values.",
    "difficulty": "advanced",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Oscillators and Feedback Amplifiers",
    "subtopic": "Barkhausen Criterion",
    "question": "For sustained oscillation in a feedback oscillator, what must be the loop gain at the oscillation frequency?",
    "correct_answer": "Unity with zero phase shift",
    "distractors": ["Greater than unity with 90° phase shift", "Less than unity with 180° phase shift", "Unity with 180° phase shift"],
    "context": "The Barkhausen criterion states that for sustained oscillation, the loop gain Aβ must equal unity (|Aβ| = 1) and the total phase shift around the loop must be zero degrees (or multiples of 360°) at the oscillation frequency.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Oscillators and Feedback Amplifiers",
    "subtopic": "Wien Bridge Oscillator",
    "question": "In a Wien bridge oscillator, what is the frequency of oscillation in terms of RC components?",
    "correct_answer": "f = 1/(2πRC)",
    "distractors": ["f = 1/(πRC)", "f = 2/(πRC)", "f = 1/(4πRC)"],
    "context": "A Wien bridge oscillator uses an RC network that provides zero phase shift at the frequency f = 1/(2πRC). At this frequency, the RC network acts as a pure resistive feedback path, satisfying the phase condition for oscillation.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Oscillators and Feedback Amplifiers",
    "subtopic": "Crystal Oscillator",
    "question": "What makes crystal oscillators superior to RC oscillators in terms of frequency stability?",
    "correct_answer": "High Q factor of quartz crystal",
    "distractors": ["Lower power consumption", "Wider frequency range", "Simpler circuit topology"],
    "context": "Quartz crystals have extremely high Q factors (10,000 to 100,000) compared to RC circuits (Q ~ 1-10). This high Q factor results in very sharp resonance and excellent frequency stability against temperature and aging effects.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Power Amplifiers",
    "subtopic": "Class A Amplifier",
    "question": "What is the theoretical maximum efficiency of a Class A power amplifier?",
    "correct_answer": "50%",
    "distractors": ["25%", "78.5%", "100%"],
    "context": "Class A amplifiers conduct for the entire input cycle (360°) and have a theoretical maximum efficiency of 50%. In practice, efficiency is typically 25-30% due to the quiescent current flowing continuously through the output transistor.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Power Amplifiers",
    "subtopic": "Class B Push-Pull",
    "question": "What is the main disadvantage of Class B amplifiers that Class AB amplifiers overcome?",
    "correct_answer": "Crossover distortion",
    "distractors": ["Lower efficiency", "Higher power consumption", "Frequency response limitation"],
    "context": "Class B amplifiers suffer from crossover distortion when the signal crosses zero, as both transistors are cut off momentarily. Class AB amplifiers use slight forward bias to keep both transistors slightly conducting, eliminating this distortion.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Power Amplifiers",
    "subtopic": "Class D Amplifier",
    "question": "Class D amplifiers achieve high efficiency primarily through which switching technique?",
    "correct_answer": "Pulse Width Modulation (PWM)",
    "distractors": ["Amplitude Modulation (AM)", "Frequency Modulation (FM)", "Phase Shift Keying (PSK)"],
    "context": "Class D amplifiers use PWM switching where transistors operate as switches (fully on or off), minimizing power dissipation. The audio signal controls the duty cycle of high-frequency pulses, achieving efficiencies above 90%.",
    "difficulty": "advanced",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Analog Circuit Design",
    "subtopic": "Current Mirror",
    "question": "What is the primary function of a current mirror in analog integrated circuits?",
    "correct_answer": "Provide bias current copying",
    "distractors": ["Voltage amplification", "Impedance matching", "Signal filtering"],
    "context": "Current mirrors are fundamental building blocks in analog ICs that replicate a reference current in multiple branches. They provide precise bias currents for differential pairs, active loads, and other circuit blocks while maintaining good matching characteristics.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Active Filters",
    "subtopic": "Advantages of Active Filters",
    "question": "What is a significant advantage of active filters over passive filters, particularly at low frequencies?",
    "correct_answer": "They can achieve gain and avoid loading effects.",
    "distractors": [
      "They are simpler to design and implement.",
      "They require no external power supply.",
      "They are less susceptible to noise."
    ],
    "context": "Active filters, incorporating active components like op-amps, offer several advantages over passive filters. They can provide gain, eliminate the need for large inductors at low frequencies (reducing size and cost), and isolate filter stages, preventing loading effects between them.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Active Filters",
    "subtopic": "Filter Topologies",
    "question": "Which active filter topology is known for its relatively simple design and good stability, often used for low-Q applications?",
    "correct_answer": "Sallen-Key filter.",
    "distractors": [
      "Butterworth filter (as a general type)",
      "Chebyshev filter (as a general type)",
      "Switched-capacitor filter"
    ],
    "context": "The Sallen-Key filter is a popular active filter topology that uses a single op-amp. It's known for its relatively straightforward design process and good stability, making it suitable for applications where a moderate Q-factor is sufficient, such as basic low-pass or high-pass filtering.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Oscillators and Feedback Amplifiers",
    "subtopic": "Barkhausen Criterion",
    "question": "According to the Barkhausen criterion for sustained oscillations, what must be the total phase shift around the feedback loop?",
    "correct_answer": "An integer multiple of 360 degrees (0 or 360 degrees).",
    "distractors": [
      "90 degrees.",
      "180 degrees.",
      "270 degrees."
    ],
    "context": "The Barkhausen criterion states two conditions for sustained oscillations in an oscillator: (1) the magnitude of the loop gain ($|A\\beta|$) must be equal to or greater than unity, and (2) the total phase shift around the loop ($\\angle A\\beta$) must be an integer multiple of 360 degrees (or 0 degrees).",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Oscillators and Feedback Amplifiers",
    "subtopic": "Negative Feedback",
    "question": "In a negative feedback amplifier, what is the primary effect of increasing the feedback factor ($\\beta$)?",
    "correct_answer": "Reduced overall gain and increased stability.",
    "distractors": [
      "Increased overall gain and reduced bandwidth.",
      "Increased distortion and higher output impedance.",
      "Reduced input impedance and increased noise."
    ],
    "context": "Negative feedback is widely used in amplifiers to improve performance. Increasing the feedback factor generally leads to a reduction in the overall amplifier gain, but it also significantly improves stability, linearity, bandwidth, and reduces distortion and sensitivity to component variations.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Power Amplifiers",
    "subtopic": "Class A Amplifier",
    "question": "What is a significant drawback of a Class A power amplifier in terms of efficiency?",
    "correct_answer": "It has very low efficiency, especially at low output power.",
    "distractors": [
      "It suffers from crossover distortion.",
      "It requires complementary transistors.",
      "It has a limited frequency response."
    ],
    "context": "Class A power amplifiers conduct current for the entire 360 degrees of the input signal. While they offer good linearity, a major disadvantage is their low maximum theoretical efficiency (typically 25% for resistive load, 50% for transformer-coupled), as the transistor always draws quiescent current even with no input signal.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Power Amplifiers",
    "subtopic": "Class B Amplifier",
    "question": "What type of distortion is characteristic of a simple Class B push-pull amplifier operating without proper biasing?",
    "correct_answer": "Crossover distortion.",
    "distractors": [
      "Harmonic distortion.",
      "Intermodulation distortion.",
      "Saturation distortion."
    ],
    "context": "In a Class B push-pull amplifier, each transistor conducts for only 180 degrees of the input cycle. Without a small bias to ensure both transistors are slightly on, there is a dead zone around the zero-crossing, leading to a noticeable distortion known as crossover distortion.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Analog Circuit Design",
    "subtopic": "Current Mirrors",
    "question": "What is the primary function of a BJT or MOSFET current mirror circuit?",
    "correct_answer": "To replicate a reference current with high accuracy.",
    "distractors": [
      "To provide high voltage gain.",
      "To convert voltage to current.",
      "To filter out high-frequency noise."
    ],
    "context": "A current mirror circuit is designed to copy a current flowing through one active device (the reference or master device) into another active device, maintaining that current even if the load conditions change. This is crucial for biasing and current-source applications in integrated circuits.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Analog Circuit Design",
    "subtopic": "Differential Amplifiers",
    "question": "What is the primary advantage of a differential amplifier in terms of common-mode noise rejection?",
    "correct_answer": "High Common-Mode Rejection Ratio (CMRR).",
    "distractors": [
      "High differential gain.",
      "Low input impedance.",
      "Large output swing."
    ],
    "context": "Differential amplifiers are designed to amplify the difference between two input signals while rejecting signals common to both inputs (common-mode signals, often noise). A high Common-Mode Rejection Ratio (CMRR) is a key metric indicating the amplifier's ability to suppress common-mode noise.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Oscillators and Feedback Amplifiers",
    "subtopic": "Colpitts Oscillator",
    "question": "Which reactive components primarily determine the oscillation frequency in a Colpitts oscillator?",
    "correct_answer": "Two capacitors and one inductor.",
    "distractors": [
      "Two inductors and one capacitor.",
      "Only resistors and capacitors.",
      "Only resistors and inductors."
    ],
    "context": "The Colpitts oscillator is a type of LC oscillator. Its frequency-determining network consists of a tapped capacitive voltage divider (two capacitors in series across the inductor) connected in parallel with an inductor. The feedback is provided from the capacitor divider.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Analog Circuit Design",
    "subtopic": "Voltage Regulators",
    "question": "What is the primary role of a series pass transistor in a linear voltage regulator circuit?",
    "correct_answer": "To absorb the difference between the unregulated input voltage and the regulated output voltage.",
    "distractors": [
      "To provide a stable reference voltage.",
      "To act as a feedback element for regulation.",
      "To amplify the error signal."
    ],
    "context": "In a linear voltage regulator, the series pass transistor (often a BJT or MOSFET) is connected in series with the load. It operates in the active region and dissipates the excess voltage (V_in - V_out) as heat, maintaining a constant output voltage regardless of input voltage fluctuations or load changes.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Active Filters",
    "subtopic": "Filter Types",
    "question": "What is the primary advantage of an active filter over a passive filter?",
    "correct_answer": "Provides gain and does not require inductors",
    "distractors": [
      "Requires fewer components than passive filters",
      "Operates without a power supply",
      "Has lower bandwidth than passive filters"
    ],
    "context": "Active filters use operational amplifiers to provide gain and eliminate the need for bulky inductors, offering improved performance over passive filters in many applications.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Active Filters",
    "subtopic": "Butterworth Filter",
    "question": "What characterizes the frequency response of a Butterworth active filter?",
    "correct_answer": "Maximally flat passband",
    "distractors": [
      "Sharp transition band",
      "Linear phase response",
      "Constant gain in stopband"
    ],
    "context": "A Butterworth active filter is designed to have a maximally flat frequency response in the passband, with a gradual roll-off in the transition band.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Oscillators",
    "subtopic": "Barkhausen Criterion",
    "question": "What is the condition for sustained oscillations in a feedback oscillator according to the Barkhausen criterion?",
    "correct_answer": "Loop gain equals 1 and phase shift is 0° or 360°",
    "distractors": [
      "Loop gain less than 1 and phase shift is 180°",
      "Loop gain greater than 1 and phase shift is 90°",
      "Loop gain equals 0 and phase shift is 0°"
    ],
    "context": "The Barkhausen criterion states that for sustained oscillations, the loop gain of a feedback oscillator must be unity, and the total phase shift around the loop must be 0° or a multiple of 360°.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Oscillators",
    "subtopic": "Colpitts Oscillator",
    "question": "What component configuration distinguishes a Colpitts oscillator?",
    "correct_answer": "Two capacitors and one inductor in the tank circuit",
    "distractors": [
      "Two inductors and one capacitor in the tank circuit",
      "A single resistor in the tank circuit",
      "A crystal in the feedback loop"
    ],
    "context": "A Colpitts oscillator uses a tank circuit with two capacitors and one inductor to determine the oscillation frequency, typically implemented with a transistor or op-amp.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Feedback Amplifiers",
    "subtopic": "Negative Feedback",
    "question": "What is the primary effect of negative feedback on the bandwidth of an amplifier?",
    "correct_answer": "Increases the bandwidth",
    "distractors": [
      "Decreases the bandwidth",
      "Has no effect on bandwidth",
      "Reduces the gain to zero"
    ],
    "context": "Negative feedback in an amplifier reduces gain but increases bandwidth by stabilizing the frequency response and reducing distortion.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Power Amplifiers",
    "subtopic": "Class A Amplifier",
    "question": "What is the maximum theoretical efficiency of a Class A power amplifier?",
    "correct_answer": "50%",
    "distractors": [
      "25%",
      "75%",
      "100%"
    ],
    "context": "A Class A power amplifier operates with the transistor conducting throughout the entire input cycle, resulting in a maximum theoretical efficiency of 50% due to constant power dissipation.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Power Amplifiers",
    "subtopic": "Class B Amplifier",
    "question": "What is the primary advantage of a Class B push-pull power amplifier over a Class A amplifier?",
    "correct_answer": "Higher efficiency",
    "distractors": [
      "Lower distortion",
      "Higher gain",
      "Simpler biasing"
    ],
    "context": "A Class B push-pull power amplifier uses two transistors conducting alternately, achieving higher efficiency (up to 78.5%) compared to Class A, though it may introduce crossover distortion.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Analog Circuit Design",
    "subtopic": "Differential Amplifier",
    "question": "What is the common-mode rejection ratio (CMRR) of an ideal differential amplifier?",
    "correct_answer": "Infinite",
    "distractors": [
      "Zero",
      "Unity",
      "100 dB"
    ],
    "context": "In an ideal differential amplifier, the CMRR is infinite because it completely rejects common-mode signals while amplifying differential signals, a key feature in analog circuit design.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Analog Circuit Design",
    "subtopic": "Current Mirror",
    "question": "What is the primary function of a current mirror in analog circuit design?",
    "correct_answer": "Replicates a reference current in another branch",
    "distractors": [
      "Amplifies the input voltage",
      "Filters high-frequency signals",
      "Stabilizes the input impedance"
    ],
    "context": "A current mirror, typically implemented with BJTs or MOSFETs, copies a reference current to another branch of the circuit, widely used in biasing and analog signal processing.",
    "difficulty": "advanced",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Analog Circuit Design",
    "subtopic": "Op-Amp Non-Idealities",
    "question": "How does the finite slew rate of a non-ideal op-amp affect the output of a high-frequency sinusoidal input?",
    "correct_answer": "Causes distortion due to inability to follow rapid voltage changes",
    "distractors": [
      "Increases the output amplitude",
      "Reduces the phase shift",
      "Has no effect on the output"
    ],
    "context": "The slew rate of a non-ideal op-amp limits the rate of change of the output voltage, causing distortion in high-frequency signals when the required rate exceeds the slew rate.",
    "difficulty": "advanced",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Digital Electronics",
    "subtopic": "Number Systems",
    "question": "What is the 2’s complement of the binary number 1010?",
    "correct_answer": "0110",
    "distractors": [
      "1001",
      "1101",
      "0001"
    ],
    "context": "To find the 2’s complement, invert the digits and add 1. 1010 becomes 0101 + 1 = 0110.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Digital Electronics",
    "subtopic": "Boolean Algebra",
    "question": "Which Boolean identity simplifies the expression A + A·B?",
    "correct_answer": "A",
    "distractors": [
      "A + B",
      "AB",
      "A·B"
    ],
    "context": "Using the absorption law in Boolean algebra, A + A·B simplifies to A.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Digital Electronics",
    "subtopic": "Logic Gates",
    "question": "Which logic gate outputs HIGH only when all inputs are LOW?",
    "correct_answer": "NOR gate",
    "distractors": [
      "NAND gate",
      "AND gate",
      "OR gate"
    ],
    "context": "A NOR gate gives a HIGH output only when all inputs are LOW, acting as a universal gate.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Digital Electronics",
    "subtopic": "Combinational Circuits",
    "question": "What is the main function of a full adder in digital circuits?",
    "correct_answer": "It adds three binary digits and outputs a sum and carry.",
    "distractors": [
      "It subtracts binary digits.",
      "It multiplies binary digits.",
      "It stores a single bit of data."
    ],
    "context": "A full adder adds two input bits and a carry-in bit, producing a sum and a carry-out.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Digital Electronics",
    "subtopic": "Multiplexers",
    "question": "What is the main purpose of a multiplexer in a digital system?",
    "correct_answer": "To select one input from many and forward it to the output.",
    "distractors": [
      "To decode binary inputs into decimal outputs.",
      "To perform arithmetic operations.",
      "To convert analog signals to digital."
    ],
    "context": "A multiplexer acts as a data selector, selecting one of several inputs based on control signals.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Digital Electronics",
    "subtopic": "Encoders",
    "question": "What is the output of an 8-to-3 encoder?",
    "correct_answer": "A 3-bit binary code corresponding to the active input line.",
    "distractors": [
      "An 8-bit output code for 3 inputs.",
      "A parity bit and sum bit.",
      "A binary counter output."
    ],
    "context": "An 8-to-3 encoder converts one of 8 active input lines into a 3-bit binary output.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Digital Electronics",
    "subtopic": "Decoders",
    "question": "Which statement best describes a 3-to-8 line decoder?",
    "correct_answer": "It activates one of 8 outputs based on a 3-bit binary input.",
    "distractors": [
      "It encodes 8 inputs into 3 outputs.",
      "It stores binary values.",
      "It performs binary addition."
    ],
    "context": "A decoder translates binary input combinations into a single active output among many.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Number Systems, Boolean Algebra",
    "subtopic": "2's Complement Representation",
    "question": "What is the decimal value of the 8-bit 2's complement binary number 11010110?",
    "correct_answer": "-42",
    "distractors": ["214", "-214", "42"],
    "context": "In 2's complement representation, the MSB represents the sign bit with weight -2^(n-1). For 11010110: -128×1 + 64×1 + 32×0 + 16×1 + 8×0 + 4×1 + 2×1 + 1×0 = -128 + 64 + 16 + 4 + 2 = -42.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "subtopic": "De Morgan's Laws",
    "topic": "Number Systems, Boolean Algebra",
    "question": "According to De Morgan's law, what is the equivalent expression for (A + B)'?",
    "correct_answer": "A' · B'",
    "distractors": ["A' + B'", "(A · B)'", "A + B'"],
    "context": "De Morgan's laws state that the complement of a sum equals the product of complements: (A + B)' = A' · B', and the complement of a product equals the sum of complements: (A · B)' = A' + B'. These laws are fundamental for Boolean algebra simplification.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Logic Gates, Combinational Circuits",
    "subtopic": "Universal Gates",
    "question": "Which gate can be used to implement any Boolean function and is therefore called a universal gate?",
    "correct_answer": "NAND gate",
    "distractors": ["XOR gate", "OR gate", "AND gate"],
    "context": "NAND and NOR gates are universal gates because they can implement any Boolean function. A NAND gate can create NOT (A NAND A), AND ((A NAND B) NAND (A NAND B)), and OR operations, making it functionally complete for digital circuit design.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Logic Gates, Combinational Circuits",
    "subtopic": "Karnaugh Map Simplification",
    "question": "In a 4-variable Karnaugh map, what is the maximum number of variables that can be eliminated by a single group of 8 adjacent cells?",
    "correct_answer": "3 variables",
    "distractors": ["1 variable", "2 variables", "4 variables"],
    "context": "In K-map simplification, a group of 2^n adjacent cells eliminates n variables. A group of 8 cells (2^3) eliminates 3 variables, leaving only 1 variable in the simplified term. This follows the rule that larger groups lead to simpler Boolean expressions.",
    "difficulty": "advanced",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Logic Gates, Combinational Circuits",
    "subtopic": "Full Adder Circuit",
    "question": "How many XOR gates are required to implement a full adder circuit?",
    "correct_answer": "2",
    "distractors": ["1", "3", "4"],
    "context": "A full adder requires 2 XOR gates: one to compute A⊕B, and another to compute (A⊕B)⊕Cin for the sum output. The carry output uses AND and OR gates. This configuration allows addition of two bits plus a carry input from previous stage.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Multiplexers, Encoders, Decoders",
    "subtopic": "Multiplexer Design",
    "question": "How many select lines are required for an 8:1 multiplexer?",
    "correct_answer": "3",
    "distractors": ["2", "4", "8"],
    "context": "An n:1 multiplexer requires log₂(n) select lines to choose from n input lines. For an 8:1 multiplexer, log₂(8) = 3 select lines are needed. These select lines create 2³ = 8 different combinations to select each input.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Multiplexers, Encoders, Decoders",
    "subtopic": "Priority Encoder",
    "question": "In an 8:3 priority encoder, if inputs I₇, I₃, and I₁ are simultaneously active, what will be the 3-bit output?",
    "correct_answer": "111",
    "distractors": ["011", "001", "101"],
    "context": "A priority encoder gives priority to the highest-order active input. When multiple inputs are active, only the highest priority input is encoded. Since I₇ has the highest priority among active inputs I₇, I₃, and I₁, the output will be 111 (binary representation of 7).",
    "difficulty": "advanced",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Number Systems",
    "subtopic": "Binary to Decimal Conversion",
    "question": "What is the decimal equivalent of the binary number $(11010)_2$?",
    "correct_answer": "$26_{10}$",
    "distractors": [
      "$13_{10}$",
      "$20_{10}$",
      "$22_{10}$"
    ],
    "context": "To convert a binary number to its decimal equivalent, multiply each digit by the corresponding power of 2 and sum the results. For $(11010)_2$, it is $1*2^4 + 1*2^3 + 0*2^2 + 1*2^1 + 0*2^0 = 16 + 8 + 0 + 2 + 0 = 26$.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Boolean Algebra",
    "subtopic": "De Morgan's Theorem",
    "question": "According to De Morgan's theorem, the complement of the product of two variables ($\\overline{AB}$) is equal to which expression?",
    "correct_answer": "$\\overline{A} + \\overline{B}$",
    "distractors": [
      "$\\overline{A} \\cdot \\overline{B}$",
      "$A + B$",
      "$A \\cdot B$"
    ],
    "context": "De Morgan's theorems are fundamental to Boolean algebra. One theorem states that the complement of a product of variables is equal to the sum of their complements: $\\overline{AB} = \\overline{A} + \\overline{B}$. The other theorem states that the complement of a sum is the product of the complements.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Logic Gates",
    "subtopic": "Universal Gates",
    "question": "Which of the following logic gates are considered 'universal' gates, meaning any Boolean function can be implemented using only them?",
    "correct_answer": "NAND and NOR gates.",
    "distractors": [
      "AND and OR gates.",
      "XOR and XNOR gates.",
      "NOT and BUFFER gates."
    ],
    "context": "Universal gates are those from which any other logic gate or Boolean function can be constructed. The NAND gate and the NOR gate are the two universal gates because they possess the functionality to implement all basic logic operations (AND, OR, NOT).",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Combinational Circuits",
    "subtopic": "Half Adder",
    "question": "What are the two outputs generated by a half adder circuit for two single-bit inputs?",
    "correct_answer": "Sum and Carry.",
    "distractors": [
      "Sum and Difference.",
      "Carry and Borrow.",
      "Product and Sum."
    ],
    "context": "A half adder is a combinational circuit that adds two single-bit binary numbers. It produces two outputs: a 'Sum' (which is the XOR of the inputs) and a 'Carry' (which is the AND of the inputs).",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Multiplexers, Encoders, Decoders",
    "subtopic": "Multiplexer",
    "question": "A 4-to-1 multiplexer has how many data input lines and select lines, respectively?",
    "correct_answer": "4 data input lines, 2 select lines.",
    "distractors": [
      "1 data input line, 4 select lines.",
      "2 data input lines, 4 select lines.",
      "4 data input lines, 4 select lines."
    ],
    "context": "A multiplexer (MUX) is a data selector that selects one of its many input data lines and routes it to a single output line. An 'N-to-1' MUX has N data input lines and $\\log_2 N$ select lines to choose which input is passed to the output.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Multiplexers, Encoders, Decoders",
    "subtopic": "Decoder",
    "question": "What is the function of a 3-to-8 line decoder?",
    "correct_answer": "Converts a 3-bit binary input into one of eight active output lines.",
    "distractors": [
      "Converts an 8-bit input into a 3-bit binary output.",
      "Selects one of eight inputs to a single output.",
      "Generates an 8-bit code from a 3-bit input."
    ],
    "context": "A decoder is a combinational circuit that converts binary information from N input lines to a maximum of $2^N$ unique output lines. A 3-to-8 decoder has 3 input lines and activates exactly one of its 8 output lines based on the 3-bit binary input code.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Combinational Circuits",
    "subtopic": "Karnaugh Maps (K-Maps)",
    "question": "When simplifying a Boolean expression using a 4-variable K-map, what does a group of 8 adjacent '1's represent?",
    "correct_answer": "A single literal term.",
    "distractors": [
      "A term with two literals.",
      "A term with three literals.",
      "No simplification is possible with 8 ones."
    ],
    "context": "Karnaugh maps (K-maps) are used for graphical simplification of Boolean expressions. Grouping adjacent '1's in powers of 2 (2, 4, 8, 16) leads to simplification. A group of 8 adjacent '1's in a 4-variable K-map represents a single literal term, indicating that three variables have been eliminated.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Number Systems",
    "subtopic": "Binary Arithmetic",
    "question": "What is the result of the binary addition 1011 + 1101?",
    "correct_answer": "11000",
    "distractors": [
      "10000",
      "10110",
      "11110"
    ],
    "context": "Binary addition follows the same principles as decimal addition, with carry-over when the sum of bits exceeds 1. For 1011 + 1101, the result is 11000 (decimal 24).",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Boolean Algebra",
    "subtopic": "Boolean Simplification",
    "question": "Using Boolean algebra, what is the simplified form of the expression A(A + B)?",
    "correct_answer": "A",
    "distractors": [
      "AB",
      "A + B",
      "A + AB"
    ],
    "context": "The Boolean expression A(A + B) can be simplified using the distributive property and absorption law: A(A + B) = A + AB = A(1 + B) = A.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Logic Gates",
    "subtopic": "Universal Gates",
    "question": "Which logic gate can be used to implement any Boolean function using only that gate type?",
    "correct_answer": "NAND",
    "distractors": [
      "AND",
      "OR",
      "NOT"
    ],
    "context": "The NAND gate is a universal gate because any Boolean function (AND, OR, NOT, etc.) can be implemented using only NAND gates by combining them appropriately.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Combinational Circuits",
    "subtopic": "Half Adder",
    "question": "What are the outputs of a half adder for inputs A = 1 and B = 1?",
    "correct_answer": "Sum = 0, Carry = 1",
    "distractors": [
      "Sum = 1, Carry = 0",
      "Sum = 1, Carry = 1",
      "Sum = 0, Carry = 0"
    ],
    "context": "A half adder adds two binary inputs, producing a sum (A XOR B) and a carry (A AND B). For A = 1, B = 1, Sum = 1 XOR 1 = 0, Carry = 1 AND 1 = 1.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Multiplexers",
    "subtopic": "Multiplexer Functionality",
    "question": "How many select lines are required for an 8-to-1 multiplexer?",
    "correct_answer": "3",
    "distractors": [
      "2",
      "4",
      "8"
    ],
    "context": "An 8-to-1 multiplexer selects one of 8 input lines using log2(8) = 3 select lines to route the selected input to the output.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Encoders",
    "subtopic": "Priority Encoder",
    "question": "What is the function of a priority encoder when multiple inputs are active simultaneously?",
    "correct_answer": "Encodes the highest-priority active input",
    "distractors": [
      "Encodes all active inputs simultaneously",
      "Produces an error signal",
      "Encodes the lowest-priority active input"
    ],
    "context": "A priority encoder assigns priority to its inputs and outputs the binary code corresponding to the highest-priority active input when multiple inputs are active.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Decoders",
    "subtopic": "Decoder Output",
    "question": "For a 3-to-8 decoder with input 101, which output line is activated?",
    "correct_answer": "Output 5",
    "distractors": [
      "Output 3",
      "Output 6",
      "Output 7"
    ],
    "context": "A 3-to-8 decoder converts a 3-bit binary input to one of 8 outputs. For input 101 (decimal 5), the 5th output line (Y5) is activated (set to 1).",
    "difficulty": "advanced",
    "type": "mcq"
  },
   {
    "goal": "GATE ECE",
    "topic": "Digital Electronics",
    "subtopic": "Flip-Flops",
    "question": "Which flip-flop toggles its state on every clock pulse when both inputs are HIGH?",
    "correct_answer": "JK flip-flop",
    "distractors": ["SR flip-flop", "T flip-flop", "D flip-flop"],
    "context": "A JK flip-flop toggles its output on every clock cycle if both J and K are HIGH.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Digital Electronics",
    "subtopic": "Counters",
    "question": "What is the modulus of a 4-bit binary counter?",
    "correct_answer": "16",
    "distractors": ["4", "8", "12"],
    "context": "A 4-bit binary counter can count from 0 to 15, giving it a modulus of 16.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Digital Electronics",
    "subtopic": "FSM",
    "question": "Which digital system can be best described using a finite number of states and transitions?",
    "correct_answer": "Finite State Machine (FSM)",
    "distractors": ["Combinational Circuit", "Counter", "Shift Register"],
    "context": "FSMs use a finite number of states to represent system behavior and transitions based on inputs.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Digital Electronics",
    "subtopic": "FSM",
    "question": "Which type of FSM uses output based solely on current state and not on input?",
    "correct_answer": "Moore machine",
    "distractors": ["Mealy machine", "Turing machine", "Von Neumann machine"],
    "context": "A Moore machine’s output is determined only by its present state, independent of inputs.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Digital Electronics",
    "subtopic": "Logic Families",
    "question": "Which logic family offers the best noise immunity and lowest power consumption?",
    "correct_answer": "CMOS",
    "distractors": ["TTL", "ECL", "RTL"],
    "context": "CMOS logic provides low power usage and strong noise immunity, making it ideal for ICs.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Digital Electronics",
    "subtopic": "Logic Families",
    "question": "Which logic family is known for faster switching but higher power consumption?",
    "correct_answer": "TTL",
    "distractors": ["CMOS", "IIL", "MOS"],
    "context": "TTL circuits are faster than CMOS but consume more power, especially in high-speed systems.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Digital Electronics",
    "subtopic": "Timing Diagrams",
    "question": "What does a timing diagram primarily represent in sequential circuits?",
    "correct_answer": "Signal transitions with respect to time",
    "distractors": ["Voltage level comparison", "Logic gate operation", "Power consumption"],
    "context": "Timing diagrams illustrate how signals change over time relative to clock pulses.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Digital Electronics",
    "subtopic": "Flip-Flops",
    "question": "Which flip-flop can be used to design a binary counter directly?",
    "correct_answer": "T flip-flop",
    "distractors": ["D flip-flop", "JK flip-flop", "SR flip-flop"],
    "context": "T flip-flops toggle on each clock pulse, making them suitable for counter applications.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Digital Electronics",
    "subtopic": "Counters",
    "question": "What is the main drawback of an asynchronous counter?",
    "correct_answer": "Propagation delay accumulation",
    "distractors": ["Low speed", "High complexity", "Fixed frequency"],
    "context": "In asynchronous counters, each flip-flop waits for the previous one to toggle, causing cumulative delay.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Digital Electronics",
    "subtopic": "FSM",
    "question": "Which of the following best describes a Mealy machine?",
    "correct_answer": "Output depends on both current state and input",
    "distractors": ["Output depends only on input", "Output depends only on current state", "Output is undefined"],
    "context": "Mealy machines update their output based on both the present state and the input.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Sequential Circuits (Flip-Flops, Counters)",
    "subtopic": "JK Flip-Flop",
    "question": "What happens when both J and K inputs of a JK flip-flop are set to logic 1?",
    "correct_answer": "Output toggles on each clock pulse",
    "distractors": ["Output remains unchanged", "Output is set to 1", "Output is reset to 0"],
    "context": "In a JK flip-flop, when J=1 and K=1, the flip-flop operates in toggle mode. The output changes to the complement of its previous state on each positive clock edge. This eliminates the race condition present in SR flip-flops when both inputs are high.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Sequential Circuits (Flip-Flops, Counters)",
    "subtopic": "D Flip-Flop",
    "question": "What is the primary advantage of a D flip-flop over an SR flip-flop?",
    "correct_answer": "No invalid input combinations",
    "distractors": ["Higher operating frequency", "Lower power consumption", "More output states"],
    "context": "D flip-flops eliminate the invalid state problem of SR flip-flops by having only one data input. The output Q always follows the input D on the clock edge, making it ideal for data storage and eliminating race conditions that occur when S=R=1 in SR flip-flops.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Sequential Circuits (Flip-Flops, Counters)",
    "subtopic": "Ripple Counter",
    "question": "What is the maximum counting frequency limitation in a 4-bit ripple counter?",
    "correct_answer": "1/(4 × propagation delay)",
    "distractors": ["1/(2 × propagation delay)", "1/(8 × propagation delay)", "1/propagation delay"],
    "context": "In a ripple counter, each flip-flop's output triggers the next flip-flop, causing cumulative propagation delays. For an n-bit ripple counter, the maximum frequency is limited to 1/(n × tpd) where tpd is the propagation delay of each flip-flop, as the carry must ripple through all stages.",
    "difficulty": "advanced",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Sequential Circuits (Flip-Flops, Counters)",
    "subtopic": "Synchronous Counter",
    "question": "What is the main advantage of synchronous counters over asynchronous (ripple) counters?",
    "correct_answer": "All flip-flops change simultaneously",
    "distractors": ["Lower power consumption", "Fewer flip-flops required", "Simpler circuit design"],
    "context": "Synchronous counters have all flip-flops clocked simultaneously by the same clock signal, eliminating the cumulative propagation delay problem of ripple counters. This allows higher operating frequencies and avoids glitches during state transitions.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Finite State Machines (FSM)",
    "subtopic": "Moore vs Mealy Machine",
    "question": "In a Moore machine, the output depends on which parameter?",
    "correct_answer": "Present state only",
    "distractors": ["Present state and input", "Input only", "Previous state only"],
    "context": "Moore machines have outputs that depend only on the current state, not on the inputs. This means outputs change only when state transitions occur, making them synchronous with the clock. In contrast, Mealy machines have outputs that depend on both current state and inputs.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Finite State Machines (FSM)",
    "subtopic": "State Minimization",
    "question": "What is the purpose of state minimization in FSM design?",
    "correct_answer": "Reduce the number of flip-flops required",
    "distractors": ["Increase operating speed", "Reduce input combinations", "Improve output reliability"],
    "context": "State minimization reduces redundant states in an FSM, thereby minimizing the number of flip-flops needed for implementation. Since n flip-flops can represent 2^n states, reducing states from 8 to 4 would reduce flip-flops from 3 to 2, saving hardware cost and complexity.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Finite State Machines (FSM)",
    "subtopic": "FSM Implementation",
    "question": "How many flip-flops are required to implement an FSM with 6 states?",
    "correct_answer": "3",
    "distractors": ["2", "4", "6"],
    "context": "The number of flip-flops required for an FSM is ceil(log₂(number of states)). For 6 states, log₂(6) = 2.58, so ceil(2.58) = 3 flip-flops are needed. Three flip-flops can represent up to 2³ = 8 states, which is sufficient for 6 states.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Logic Families (TTL, CMOS)",
    "subtopic": "TTL Characteristics",
    "question": "What is the typical noise margin for TTL logic family?",
    "correct_answer": "0.4V",
    "distractors": ["0.2V", "0.8V", "1.2V"],
    "context": "TTL logic has VIH(min) = 2.0V, VIL(max) = 0.8V, VOH(min) = 2.4V, and VOL(max) = 0.4V. The noise margins are NMH = VOH(min) - VIH(min) = 0.4V and NML = VIL(max) - VOL(max) = 0.4V, providing reasonable immunity to noise.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Logic Families (TTL, CMOS)",
    "subtopic": "CMOS Power Consumption",
    "question": "When does CMOS logic consume maximum power?",
    "correct_answer": "During switching transitions",
    "distractors": ["In steady state high", "In steady state low", "During reset condition"],
    "context": "CMOS logic consumes minimal static power in steady states because only one transistor path conducts. Maximum power consumption occurs during switching when both PMOS and NMOS transistors conduct briefly, creating a current path from VDD to ground, plus dynamic power from charging/discharging capacitances.",
    "difficulty": "advanced",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Timing Diagrams",
    "subtopic": "Setup and Hold Time",
    "question": "What happens if the setup time requirement is violated in a flip-flop?",
    "correct_answer": "Metastable state or incorrect data capture",
    "distractors": ["Increased propagation delay", "Higher power consumption", "Clock frequency reduction"],
    "context": "Setup time is the minimum time data must be stable before the clock edge. Violating setup time can cause the flip-flop to enter a metastable state where the output oscillates between logic levels, or capture incorrect data, leading to unpredictable circuit behavior.",
    "difficulty": "advanced",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Sequential Circuits",
    "subtopic": "Flip-Flops",
    "question": "Which type of flip-flop is commonly used to implement a toggle switch, where the output changes state on every clock pulse?",
    "correct_answer": "T (Toggle) flip-flop.",
    "distractors": [
      "SR (Set-Reset) flip-flop.",
      "D (Delay) flip-flop.",
      "JK (Jump-Kill) flip-flop."
    ],
    "context": "A T flip-flop (Toggle flip-flop) has a single input 'T'. When T is high, the output (Q) toggles its state (from 0 to 1 or 1 to 0) on each active clock edge. This makes it ideal for frequency division and counting applications.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Sequential Circuits",
    "subtopic": "Counters",
    "question": "What is the maximum modulus (number of states) for a counter implemented using 'N' flip-flops?",
    "correct_answer": "$2^N$",
    "distractors": [
      "$N$",
      "$N^2$",
      "$2N$"
    ],
    "context": "A counter is a sequential circuit that goes through a predetermined sequence of states upon the application of input pulses. If a counter uses 'N' flip-flops, each flip-flop can store one bit, allowing for a maximum of $2^N$ distinct states (from $00...0$ to $11...1$).",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Finite State Machines (FSM)",
    "subtopic": "Moore vs. Mealy FSM",
    "question": "In a Mealy-type Finite State Machine, when does the output change its state?",
    "correct_answer": "It depends on both the present state and the present input.",
    "distractors": [
      "Only on the present state.",
      "Only on the input clock edge.",
      "Only on the next state."
    ],
    "context": "Mealy and Moore are two models for FSMs. In a Mealy machine, the output is a function of both the current state and the current input, meaning the output can change immediately upon an input change, even before a clock edge.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Finite State Machines (FSM)",
    "subtopic": "State Table/Diagram",
    "question": "What does a state table in a Finite State Machine primarily represent?",
    "correct_answer": "The next state and output for every possible combination of present state and input.",
    "distractors": [
      "Only the current state and output mapping.",
      "The timing relationships between input and output signals.",
      "The power consumption of the sequential circuit."
    ],
    "context": "A state table (or transition table) is a tabular representation of a sequential circuit's behavior. It lists all possible present states, input combinations, the resulting next states, and the corresponding outputs, providing a complete functional description of the FSM.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Logic Families",
    "subtopic": "TTL (Transistor-Transistor Logic)",
    "question": "Which internal component in a standard TTL NAND gate primarily acts as a multi-emitter transistor at its input?",
    "correct_answer": "Input transistor.",
    "distractors": [
      "Output transistor.",
      "Phase splitter.",
      "Pull-up resistor."
    ],
    "context": "In a standard TTL NAND gate, the input stage consists of a multi-emitter transistor. Its emitters serve as the inputs to the gate, and its collector is connected to the base of the phase-splitter transistor, initiating the logic operation.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Logic Families",
    "subtopic": "CMOS (Complementary Metal-Oxide-Semiconductor)",
    "question": "What is the primary advantage of CMOS logic over TTL logic in terms of static power dissipation?",
    "correct_answer": "Very low static power dissipation.",
    "distractors": [
      "Higher propagation delay.",
      "Lower noise margin.",
      "Requires higher supply voltage."
    ],
    "context": "CMOS logic gates are constructed using complementary pairs of nMOS and pMOS transistors. In steady-state (when inputs are not changing), one transistor is OFF, effectively cutting off the current path from supply to ground, leading to extremely low static (quiescent) power dissipation compared to TTL.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Timing Diagrams",
    "subtopic": "Flip-Flop Timing Parameters",
    "question": "What does the 'setup time' ($t_{su}$) of a flip-flop refer to?",
    "correct_answer": "The minimum time the input data must be stable before the clock edge.",
    "distractors": [
      "The minimum time the input data must be stable after the clock edge.",
      "The propagation delay from clock to output.",
      "The time duration for which the clock pulse is high."
    ],
    "context": "Setup time ($t_{su}$) is a critical timing parameter for sequential circuits. It is the minimum amount of time that the data input to a flip-flop must be stable and valid BEFORE the active edge of the clock pulse arrives, to ensure reliable data capture.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Sequential Circuits",
    "subtopic": "Shift Registers",
    "question": "Which type of shift register configuration allows for simultaneous loading of all bits and serial shifting out of data?",
    "correct_answer": "Parallel-In, Serial-Out (PISO) shift register.",
    "distractors": [
      "Serial-In, Serial-Out (SISO) shift register.",
      "Serial-In, Parallel-Out (SIPO) shift register.",
      "Parallel-In, Parallel-Out (PIPO) shift register."
    ],
    "context": "A Parallel-In, Serial-Out (PISO) shift register is designed to accept data in parallel (all bits loaded simultaneously) and then shift them out one bit at a time, serially, on successive clock pulses. This is useful for parallel-to-serial data conversion.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Logic Families",
    "subtopic": "Noise Margin",
    "question": "In digital logic families, what does a higher noise margin indicate?",
    "correct_answer": "Greater immunity to unwanted electrical noise.",
    "distractors": [
      "Faster propagation delay.",
      "Lower power consumption.",
      "Reduced fan-out capability."
    ],
    "context": "Noise margin is a measure of a digital circuit's immunity to noise. It is the maximum extraneous voltage that can be added to an input without causing an incorrect output. A higher noise margin means the circuit is more robust against noise.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Timing Diagrams",
    "subtopic": "Race Around Condition",
    "question": "In a JK flip-flop, under what specific input condition does the 'race-around' condition typically occur?",
    "correct_answer": "When both J and K inputs are HIGH (J=1, K=1) and the clock pulse duration is greater than the propagation delay.",
    "distractors": [
      "When J=0, K=0 and clock is HIGH.",
      "When J=1, K=0 and clock is LOW.",
      "When the clock pulse is very narrow."
    ],
    "context": "The 'race-around' condition is a problem in level-triggered JK flip-flops where, if J=1 and K=1 and the clock pulse remains high for a duration longer than the flip-flop's propagation delay, the output toggles multiple times, leading to an unpredictable final state. This issue is typically overcome by using edge-triggered flip-flops.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Sequential Circuits",
    "subtopic": "Flip-Flops",
    "question": "What is the output state of a D flip-flop when the clock is triggered and the D input is 1?",
    "correct_answer": "Q = 1",
    "distractors": [
      "Q = 0",
      "Q remains unchanged",
      "Q toggles"
    ],
    "context": "A D flip-flop transfers the input D to the output Q on the active edge of the clock signal, so if D = 1, the next state is Q = 1.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Sequential Circuits",
    "subtopic": "JK Flip-Flop",
    "question": "What happens to the output of a JK flip-flop when J = 1, K = 1, and the clock is triggered?",
    "correct_answer": "The output toggles",
    "distractors": [
      "The output remains unchanged",
      "The output is set to 1",
      "The output is reset to 0"
    ],
    "context": "In a JK flip-flop, when J = 1 and K = 1, the output Q toggles (changes to the opposite state) on the active clock edge.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Sequential Circuits",
    "subtopic": "Counters",
    "question": "What is the modulus of a 4-bit binary up-counter?",
    "correct_answer": "16",
    "distractors": [
      "4",
      "8",
      "10"
    ],
    "context": "A 4-bit binary up-counter cycles through 2^4 = 16 states (from 0000 to 1111), so its modulus, or number of unique states, is 16.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Sequential Circuits",
    "subtopic": "Asynchronous Counters",
    "question": "What is a key characteristic of an asynchronous (ripple) counter compared to a synchronous counter?",
    "correct_answer": "Flip-flops are triggered by the output of the previous flip-flop",
    "distractors": [
      "All flip-flops are triggered simultaneously",
      "It requires fewer flip-flops",
      "It has no propagation delay"
    ],
    "context": "In an asynchronous counter, each flip-flop is triggered by the output of the previous one, causing a ripple effect and introducing propagation delay, unlike synchronous counters where all flip-flops are clocked simultaneously.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Finite State Machines",
    "subtopic": "Moore vs. Mealy",
    "question": "What is the primary difference between a Moore and a Mealy finite state machine?",
    "correct_answer": "Moore outputs depend only on the state, while Mealy outputs depend on both state and inputs",
    "distractors": [
      "Moore uses fewer states than Mealy",
      "Mealy outputs are always delayed by one clock cycle",
      "Moore cannot have combinational logic in the output"
    ],
    "context": "In a Moore FSM, the output is a function of the current state only, whereas in a Mealy FSM, the output depends on both the current state and the input, potentially reducing latency but increasing complexity.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Finite State Machines",
    "subtopic": "State Transitions",
    "question": "In a finite state machine, what determines the next state?",
    "correct_answer": "Current state and input signals",
    "distractors": [
      "Output signals only",
      "Previous state only",
      "Clock frequency only"
    ],
    "context": "In an FSM, the next state is determined by the current state and the input signals, as defined by the state transition function in the state diagram or table.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Logic Families",
    "subtopic": "TTL Characteristics",
    "question": "What is a key advantage of TTL (Transistor-Transistor Logic) over CMOS logic?",
    "correct_answer": "Faster switching speed in older technologies",
    "distractors": [
      "Lower power consumption",
      "Higher noise immunity",
      "Simpler fabrication process"
    ],
    "context": "TTL logic, using bipolar transistors, historically offered faster switching speeds than CMOS in older technologies, though it consumes more power.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Logic Families",
    "subtopic": "CMOS Characteristics",
    "question": "What is the primary reason CMOS logic consumes less power than TTL in static conditions?",
    "correct_answer": "Current flows only during switching",
    "distractors": [
      "CMOS uses fewer transistors",
      "CMOS operates at lower voltages",
      "CMOS has no leakage current"
    ],
    "context": "In CMOS logic, power consumption is low in static conditions because current flows only during transitions between states, as complementary transistors ensure one is off while the other is on.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Timing Diagrams",
    "subtopic": "Setup Time",
    "question": "What does the setup time of a flip-flop represent in a timing diagram?",
    "correct_answer": "Minimum time the input must be stable before the clock edge",
    "distractors": [
      "Time taken for the output to stabilize after the clock edge",
      "Minimum time the clock pulse must be active",
      "Time between two consecutive clock edges"
    ],
    "context": "In a timing diagram, the setup time of a flip-flop is the minimum duration that the input data must be stable before the active clock edge to ensure reliable operation.",
    "difficulty": "advanced",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Timing Diagrams",
    "subtopic": "Propagation Delay",
    "question": "In a timing diagram, what is the propagation delay of a flip-flop?",
    "correct_answer": "Time from clock edge to output change",
    "distractors": [
      "Time from input change to clock edge",
      "Time between consecutive clock pulses",
      "Time for the input to stabilize"
    ],
    "context": "The propagation delay in a flip-flop, as shown in a timing diagram, is the time interval from the active clock edge to when the output reaches a stable, valid state.",
    "difficulty": "advanced",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Signals and Systems",
    "subtopic": "Continuous and Discrete-Time Signals",
    "question": "Which of the following is an example of a discrete-time signal?",
    "correct_answer": "x[n] = cos(nπ/2)",
    "distractors": ["x(t) = sin(2πt)", "x(t) = e^(-t)", "x(t) = δ(t)"],
    "context": "A discrete-time signal is defined at integer values of time such as x[n], whereas continuous-time signals like x(t) are defined for all real time values.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Signals and Systems",
    "subtopic": "Laplace Transform",
    "question": "What is the Laplace transform of the unit step function u(t)?",
    "correct_answer": "1/s",
    "distractors": ["s", "1/(s+1)", "1/(s-1)"],
    "context": "The Laplace transform of u(t), which is 1 for t ≥ 0, is 1/s for Re(s) > 0.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Signals and Systems",
    "subtopic": "Z-Transform",
    "question": "Which condition ensures the existence of the Z-transform for a signal x[n]?",
    "correct_answer": "Absolute summability of x[n]",
    "distractors": ["Periodicity of x[n]", "Differentiability of x[n]", "Continuity of x[n]"],
    "context": "The Z-transform of a discrete-time signal exists if the signal is absolutely summable, i.e., ∑|x[n]| < ∞.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Signals and Systems",
    "subtopic": "Fourier Series",
    "question": "What property must a signal satisfy for it to have a Fourier Series representation?",
    "correct_answer": "Periodicity",
    "distractors": ["Causality", "Linearity", "Boundedness"],
    "context": "Fourier Series is applicable only to periodic signals; non-periodic signals use Fourier Transform instead.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Signals and Systems",
    "subtopic": "Fourier Transform",
    "question": "Which function's Fourier Transform results in a delta function in the frequency domain?",
    "correct_answer": "A constant signal",
    "distractors": ["A unit impulse", "A ramp function", "A sinusoidal signal"],
    "context": "A constant signal in the time domain transforms into a delta function at zero frequency in the frequency domain.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Signals and Systems",
    "subtopic": "Laplace and Fourier",
    "question": "Which transform provides both frequency and exponential growth/decay behavior?",
    "correct_answer": "Laplace Transform",
    "distractors": ["Fourier Series", "Fourier Transform", "Z-Transform"],
    "context": "Laplace Transform handles both exponential and oscillatory components, making it suitable for analyzing system stability.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Signals and Systems",
    "subtopic": "Z-Transform",
    "question": "Which of the following best describes the Region of Convergence (ROC) in the Z-transform?",
    "correct_answer": "The set of z values for which the Z-transform sum converges",
    "distractors": ["The range of time indices", "The domain of time values", "The frequency band of the signal"],
    "context": "ROC determines the stability and causality of discrete-time systems and is critical in Z-transform analysis.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Continuous and Discrete-Time Signals",
    "subtopic": "Signal Energy and Power",
    "question": "A signal x(t) = A cos(ωt) is classified as which type of signal in terms of energy and power?",
    "correct_answer": "Power signal",
    "distractors": ["Energy signal", "Neither energy nor power", "Both energy and power"],
    "context": "A sinusoidal signal x(t) = A cos(ωt) has infinite energy over infinite time but finite average power P = A²/2. Signals with finite power and infinite energy are classified as power signals. Energy signals have finite energy and zero average power.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Continuous and Discrete-Time Signals",
    "subtopic": "System Properties",
    "question": "Which property is violated if a system's output y(t) = x²(t) where x(t) is the input?",
    "correct_answer": "Linearity",
    "distractors": ["Time-invariance", "Causality", "Stability"],
    "context": "A system y(t) = x²(t) violates the superposition principle of linearity. For inputs x₁(t) and x₂(t), the output is (x₁ + x₂)² = x₁² + x₂² + 2x₁x₂, which is not equal to x₁² + x₂². The cross-term 2x₁x₂ makes the system nonlinear.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Laplace and Z-Transform",
    "subtopic": "Laplace Transform Properties",
    "question": "What is the Laplace transform of the unit step function u(t)?",
    "correct_answer": "1/s",
    "distractors": ["s", "1", "1/s²"],
    "context": "The unit step function u(t) has the Laplace transform L{u(t)} = 1/s for Re(s) > 0. This is derived from the definition: ∫₀^∞ u(t)e^(-st) dt = ∫₀^∞ e^(-st) dt = [-e^(-st)/s]₀^∞ = 1/s.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Laplace and Z-Transform",
    "subtopic": "Z-Transform ROC",
    "question": "For a causal sequence x[n] = aⁿu[n], what is the region of convergence (ROC) for its Z-transform?",
    "correct_answer": "|z| > |a|",
    "distractors": ["|z| < |a|", "|z| = |a|", "All z except z = 0"],
    "context": "For a causal sequence x[n] = aⁿu[n], the Z-transform is X(z) = 1/(1-az⁻¹) = z/(z-a). The ROC is |z| > |a| because the geometric series ∑(az⁻¹)ⁿ converges when |az⁻¹| < 1, which gives |z| > |a|.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Laplace and Z-Transform",
    "subtopic": "Inverse Transform",
    "question": "What method is commonly used to find the inverse Laplace transform of rational functions?",
    "correct_answer": "Partial fraction expansion",
    "distractors": ["Integration by parts", "Convolution theorem", "Differentiation property"],
    "context": "Partial fraction expansion decomposes a rational function F(s) = N(s)/D(s) into simpler fractions whose inverse transforms are known. Each term corresponds to poles of F(s), and the inverse transform is found by summing the inverse transforms of individual partial fractions.",
    "difficulty": "advanced",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Fourier Series and Fourier Transform",
    "subtopic": "Fourier Series Coefficients",
    "question": "For a periodic signal with period T, what is the fundamental frequency ω₀?",
    "correct_answer": "2π/T",
    "distractors": ["π/T", "1/T", "T/2π"],
    "context": "The fundamental frequency ω₀ of a periodic signal with period T is ω₀ = 2π/T radians per second. This represents the lowest frequency component in the Fourier series expansion, and all other harmonics are integer multiples of this fundamental frequency.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Fourier Series and Fourier Transform",
    "subtopic": "Fourier Transform Properties",
    "question": "According to the duality property of Fourier transform, if F{x(t)} = X(ω), then F{X(t)} equals what?",
    "correct_answer": "2πx(-ω)",
    "distractors": ["x(-ω)", "X(-ω)", "2πX(-ω)"],
    "context": "The duality property states that if x(t) ↔ X(ω), then X(t) ↔ 2πx(-ω). This symmetry arises from the similar mathematical forms of forward and inverse Fourier transforms, differing only by a factor of 2π and sign in the exponential.",
    "difficulty": "advanced",
    "type": "mcq"
  },
   {
    "goal": "GATE ECE",
    "topic": "Continuous and Discrete-Time Signals",
    "subtopic": "Signal Classification",
    "question": "Which of the following describes a signal that is defined only at discrete instants of time and has values that can be continuous?",
    "correct_answer": "Discrete-time signal.",
    "distractors": [
      "Continuous-time signal.",
      "Digital signal.",
      "Analog signal."
    ],
    "context": "A discrete-time signal is a function of an independent variable (time) that is sampled at specific, discrete intervals. The values of the signal itself can be continuous (i.e., not quantized), distinguishing it from a digital signal.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Continuous and Discrete-Time Signals",
    "subtopic": "Energy and Power Signals",
    "question": "For an infinite-duration signal $x(t)$, if its total energy is finite ($0 < E < \\infty$), what type of signal is it classified as?",
    "correct_answer": "Energy signal.",
    "distractors": [
      "Power signal.",
      "Neither energy nor power signal.",
      "Both energy and power signal."
    ],
    "context": "Signals are classified based on their energy and power. An energy signal has finite total energy and zero average power. A power signal has infinite total energy but finite average power. A signal cannot be both an energy and a power signal.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Laplace and Z-Transform",
    "subtopic": "Laplace Transform Properties",
    "question": "If $X(s)$ is the Laplace transform of $x(t)$, what is the Laplace transform of $x(t-t_0)$, assuming causality and $t_0 > 0$?",
    "correct_answer": "$e^{-st_0} X(s)$",
    "distractors": [
      "$X(s) + e^{-st_0}$",
      "$X(s-t_0)$",
      "$\\frac{1}{s}X(s)$"
    ],
    "context": "One of the fundamental properties of the Laplace transform is the time-shifting property. It states that if $x(t) \\leftrightarrow X(s)$, then a time-shifted version $x(t-t_0)$ has a Laplace transform of $e^{-st_0}X(s)$, for $t_0 > 0$ and $x(t)$ being causal.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Laplace and Z-Transform",
    "subtopic": "Z-Transform Region of Convergence (ROC)",
    "question": "For a causal, right-sided discrete-time signal, what is the characteristic shape of its Z-transform's Region of Convergence (ROC)?",
    "correct_answer": "An exterior of a circle.",
    "distractors": [
      "An interior of a circle.",
      "A ring.",
      "The entire z-plane."
    ],
    "context": "The Region of Convergence (ROC) is crucial for the uniqueness of the Z-transform. For a causal (right-sided) discrete-time signal, the ROC is always the exterior of a circle, extending outwards from the outermost pole to infinity.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Fourier Series and Fourier Transform",
    "subtopic": "Fourier Series Properties",
    "question": "If a periodic continuous-time signal $x(t)$ has odd symmetry, which type of Fourier series coefficients will be zero?",
    "correct_answer": "All 'a_n' coefficients (cosine terms).",
    "distractors": [
      "All 'b_n' coefficients (sine terms).",
      "The DC component 'a_0'.",
      "Both 'a_n' and 'b_n' coefficients."
    ],
    "context": "For a periodic signal, its symmetry affects its Fourier series coefficients. If a signal has odd symmetry ($x(t) = -x(-t)$), then its Fourier series will only contain sine terms, meaning all the cosine coefficients ($a_n$) will be zero, and the DC component ($a_0$) will also be zero.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Fourier Series and Fourier Transform",
    "subtopic": "Fourier Transform Properties",
    "question": "What is the Fourier transform of a constant DC signal, $x(t) = A$, where A is a real constant?",
    "correct_answer": "$2\\pi A \\delta(\\omega)$",
    "distractors": [
      "$A \\delta(\\omega)$",
      "$A / (j\\omega)$",
      "$A u(\\omega)$"
    ],
    "context": "The Fourier Transform of a constant DC signal represents its frequency content. A DC signal has energy concentrated only at zero frequency. Therefore, its Fourier Transform is a scaled impulse function at $\\omega = 0$, specifically $2\\pi A \\delta(\\omega)$.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Fourier Series and Fourier Transform",
    "subtopic": "Discrete-Time Fourier Transform (DTFT)",
    "question": "Unlike the Continuous-Time Fourier Transform (CTFT), the Discrete-Time Fourier Transform (DTFT) of a discrete-time signal is always which type of function?",
    "correct_answer": "Periodic.",
    "distractors": [
      "Aperiodic.",
      "Discrete in frequency.",
      "Real-valued."
    ],
    "context": "The DTFT of a discrete-time signal is a continuous function of frequency, but it is always periodic with a period of $2\\pi$ (or the sampling frequency). This periodicity is a fundamental property stemming from the discrete nature of the time-domain signal.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Continuous and Discrete-Time Signals",
    "subtopic": "Signal Classification",
    "question": "What is the primary characteristic of a periodic continuous-time signal?",
    "correct_answer": "Repeats at regular intervals",
    "distractors": [
      "Has finite energy",
      "Is always causal",
      "Has a constant amplitude"
    ],
    "context": "A periodic continuous-time signal repeats its waveform at regular intervals, satisfying x(t) = x(t + T) for some period T.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Continuous and Discrete-Time Signals",
    "subtopic": "Energy and Power Signals",
    "question": "Which type of signal has finite energy but infinite duration?",
    "correct_answer": "Energy signal",
    "distractors": [
      "Power signal",
      "Periodic signal",
      "Impulse signal"
    ],
    "context": "An energy signal has finite total energy, calculated as the integral of the squared magnitude over all time, and typically has infinite duration but decays to zero.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Laplace Transform",
    "subtopic": "Region of Convergence",
    "question": "What is the region of convergence (ROC) for the Laplace transform of a right-sided signal?",
    "correct_answer": "Re(s) > σ, where σ is the largest pole real part",
    "distractors": [
      "Re(s) < σ",
      "Re(s) = σ",
      "Entire s-plane"
    ],
    "context": "The ROC for the Laplace transform of a right-sided signal (defined for t ≥ 0) is the half-plane to the right of the rightmost pole, Re(s) > σ, ensuring the transform converges.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Z-Transform",
    "subtopic": "Z-Transform Properties",
    "question": "What is the Z-transform of the time-shifted discrete signal x[n - n0]?",
    "correct_answer": "z^(-n0)X(z)",
    "distractors": [
      "z^(n0)X(z)",
      "X(z)/z^(-n0)",
      "X(z - n0)"
    ],
    "context": "The time-shifting property of the Z-transform states that if X(z) is the Z-transform of x[n], then the Z-transform of x[n - n0] is z^(-n0)X(z), with the same ROC adjusted for poles at z = 0 or infinity.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Fourier Series",
    "subtopic": "Fourier Coefficients",
    "question": "What do the Fourier series coefficients represent for a periodic signal?",
    "correct_answer": "Amplitude and phase of frequency components",
    "distractors": [
      "Time-domain signal amplitude",
      "Signal power at each frequency",
      "Signal energy in the time domain"
    ],
    "context": "Fourier series coefficients represent the amplitude and phase of the harmonic frequency components that make up a periodic signal, allowing its decomposition into sinusoids.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Fourier Transform",
    "subtopic": "Properties",
    "question": "What is the Fourier transform of the time-scaled signal x(at), where a is a positive constant?",
    "correct_answer": "(1/|a|)X(jω/a)",
    "distractors": [
      "|a|X(jω/a)",
      "X(jωa)",
      "(1/a^2)X(jω)"
    ],
    "context": "The time-scaling property of the Fourier transform states that if X(jω) is the Fourier transform of x(t), then the Fourier transform of x(at) is (1/|a|)X(jω/a), reflecting time compression or expansion.",
    "difficulty": "advanced",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Fourier Transform",
    "subtopic": "Frequency Domain Analysis",
    "question": "What does the Fourier transform of a signal represent in the frequency domain?",
    "correct_answer": "Amplitude and phase spectrum of the signal",
    "distractors": [
      "Time-domain energy of the signal",
      "Power spectral density only",
      "Impulse response of the signal"
    ],
    "context": "The Fourier transform converts a time-domain signal into its frequency-domain representation, providing the amplitude and phase spectrum of all frequency components.",
    "difficulty": "advanced",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Signals and Systems",
    "subtopic": "Convolution and Correlation",
    "question": "Which operation is used to determine the output of an LTI system when input and impulse response are known?",
    "correct_answer": "Convolution",
    "distractors": ["Correlation", "Fourier Transform", "Laplace Transform"],
    "context": "In an LTI system, the output is obtained by convolving the input signal with the system's impulse response.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Signals and Systems",
    "subtopic": "Convolution and Correlation",
    "question": "Which of the following properties is true for the convolution of two signals?",
    "correct_answer": "Convolution is commutative",
    "distractors": ["Convolution is not associative", "Convolution changes the signal frequency", "Convolution requires only periodic signals"],
    "context": "The convolution operation is commutative, i.e., x(t)*h(t) = h(t)*x(t), which is fundamental to LTI systems.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Signals and Systems",
    "subtopic": "LTI System Analysis",
    "question": "What is the defining property of a Linear Time-Invariant (LTI) system?",
    "correct_answer": "The output response does not change if the input is shifted in time",
    "distractors": ["The output grows exponentially", "The system has memory", "The system uses only Fourier analysis"],
    "context": "Time-invariance means the system's behavior does not change over time; linearity ensures superposition applies.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Signals and Systems",
    "subtopic": "Sampling Theorem",
    "question": "According to the Nyquist theorem, what is the minimum sampling rate for a signal with 5 kHz bandwidth?",
    "correct_answer": "10 kHz",
    "distractors": ["5 kHz", "2.5 kHz", "20 kHz"],
    "context": "The Nyquist theorem states that a signal must be sampled at least twice its highest frequency component to avoid aliasing.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Signals and Systems",
    "subtopic": "Sampling Theorem",
    "question": "What is aliasing in signal processing?",
    "correct_answer": "Distortion due to undersampling",
    "distractors": ["Distortion due to noise", "Distortion due to filtering", "Distortion due to over-amplification"],
    "context": "Aliasing occurs when a signal is undersampled, causing different signals to become indistinguishable after sampling.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Signals and Systems",
    "subtopic": "Filters and System Properties",
    "question": "Which condition must a system satisfy to be considered causal?",
    "correct_answer": "The output depends only on present and past inputs",
    "distractors": ["The output depends on future inputs", "The system must be linear", "The system must be time-invariant"],
    "context": "Causality implies that the system's output at any time depends only on present and past input values, not future inputs.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Signals and Systems",
    "subtopic": "Filters and System Properties",
    "question": "Which of the following is a necessary condition for a system to be stable?",
    "correct_answer": "Bounded input leads to bounded output",
    "distractors": ["Impulse response must be infinite", "Output must always be zero", "System must be causal"],
    "context": "For stability, the system must produce bounded outputs for all bounded inputs; this is the BIBO (Bounded Input Bounded Output) criterion.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Signals and Systems",
    "subtopic": "Filters and System Properties",
    "question": "Which of the following filters ideally passes all low frequencies and attenuates high frequencies?",
    "correct_answer": "Low-pass filter",
    "distractors": ["High-pass filter", "Band-pass filter", "Notch filter"],
    "context": "Low-pass filters allow low-frequency components to pass through while attenuating high-frequency components.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Signals and Systems",
    "subtopic": "Convolution and Correlation",
    "question": "Which operation is used to determine the similarity between two signals?",
    "correct_answer": "Correlation",
    "distractors": ["Convolution", "Sampling", "Modulation"],
    "context": "Correlation measures how similar two signals are; it is widely used in signal detection and pattern recognition.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Signals and Systems",
    "subtopic": "LTI System Analysis",
    "question": "What does the impulse response of an LTI system represent?",
    "correct_answer": "The output when the input is a unit impulse",
    "distractors": ["The input required for zero output", "The frequency response of the system", "The derivative of the output signal"],
    "context": "The impulse response characterizes an LTI system completely; knowing it allows calculation of output for any input via convolution.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Convolution and Correlation",
    "subtopic": "Convolution Properties",
    "question": "What is the result of convolving a signal x(t) with a unit impulse δ(t-t₀)?",
    "correct_answer": "x(t-t₀)",
    "distractors": ["x(t)", "x(t+t₀)", "δ(t-t₀)"],
    "context": "Convolution with a shifted unit impulse produces a shifted version of the original signal: x(t) * δ(t-t₀) = x(t-t₀). This is the shifting property of the impulse function, where the impulse acts as a sampling function that extracts and shifts the signal.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Convolution and Correlation",
    "subtopic": "Cross-Correlation",
    "question": "The cross-correlation function Rxy(τ) between signals x(t) and y(t) is mathematically equivalent to which operation?",
    "correct_answer": "x(τ) * y(-τ)",
    "distractors": ["x(τ) * y(τ)", "x(-τ) * y(τ)", "x(τ) + y(τ)"],
    "context": "Cross-correlation Rxy(τ) = ∫x(t)y(t+τ)dt is equivalent to convolution x(τ) * y(-τ). This relationship shows that correlation can be computed using convolution with one signal time-reversed, which is useful for pattern matching and signal detection.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Convolution and Correlation",
    "subtopic": "Discrete Convolution",
    "question": "If x[n] has length M and h[n] has length N, what is the length of their linear convolution y[n] = x[n] * h[n]?",
    "correct_answer": "M + N - 1",
    "distractors": ["M + N", "M × N", "max(M, N)"],
    "context": "Linear convolution of two finite sequences results in a sequence of length M + N - 1. This occurs because convolution involves all possible overlaps between the sequences, from the first overlap (at index 0) to the last overlap (at index M + N - 2).",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "LTI System Analysis",
    "subtopic": "Impulse Response",
    "question": "For an LTI system, if the impulse response is h(t), what represents the system's output for input x(t)?",
    "correct_answer": "x(t) * h(t)",
    "distractors": ["x(t) × h(t)", "x(t) + h(t)", "x(t) / h(t)"],
    "context": "In LTI systems, the output is the convolution of input and impulse response: y(t) = x(t) * h(t). This fundamental relationship allows us to determine system behavior for any input once we know the impulse response, which completely characterizes the LTI system.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "LTI System Analysis",
    "subtopic": "Frequency Response",
    "question": "The frequency response H(ω) of an LTI system is related to its impulse response h(t) by which transform?",
    "correct_answer": "Fourier Transform",
    "distractors": ["Laplace Transform", "Z-Transform", "Discrete Fourier Transform"],
    "context": "The frequency response H(ω) is the Fourier transform of the impulse response: H(ω) = ∫h(t)e^(-jωt)dt. This relationship allows analysis of system behavior in frequency domain, showing how different frequency components are affected by the system.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "LTI System Analysis",
    "subtopic": "System Interconnection",
    "question": "When two LTI systems with impulse responses h₁(t) and h₂(t) are connected in cascade, what is the overall impulse response?",
    "correct_answer": "h₁(t) * h₂(t)",
    "distractors": ["h₁(t) + h₂(t)", "h₁(t) × h₂(t)", "h₁(t) - h₂(t)"],
    "context": "For cascaded LTI systems, the overall impulse response is the convolution of individual impulse responses: h(t) = h₁(t) * h₂(t). This follows from the associative property of convolution, where the order of cascade connection doesn't affect the final result.",
    "difficulty": "advanced",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Sampling Theorem",
    "subtopic": "Nyquist Rate",
    "question": "For a signal with maximum frequency component fm, what is the minimum sampling frequency required to avoid aliasing?",
    "correct_answer": "2fm",
    "distractors": ["fm", "4fm", "fm/2"],
    "context": "The Nyquist sampling theorem states that a signal must be sampled at least at twice its highest frequency component (fs ≥ 2fm) to perfectly reconstruct it. This minimum rate fs = 2fm is called the Nyquist rate, below which aliasing occurs.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Sampling Theorem",
    "subtopic": "Aliasing",
    "question": "What happens when a signal is sampled below the Nyquist rate?",
    "correct_answer": "High frequency components appear as low frequencies",
    "distractors": ["Signal amplitude is reduced", "Signal phase is shifted", "Signal is perfectly reconstructed"],
    "context": "When sampling below the Nyquist rate, aliasing occurs where high-frequency components fold back and appear as lower frequencies in the sampled signal. This spectral overlap makes it impossible to distinguish between the original and aliased components during reconstruction.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Filters and System Properties",
    "subtopic": "Causality",
    "question": "What condition must the impulse response h(t) satisfy for a system to be causal?",
    "correct_answer": "h(t) = 0 for t < 0",
    "distractors": ["h(t) = 0 for t > 0", "∫|h(t)|dt < ∞", "h(t) is periodic"],
    "context": "A causal system cannot respond before the input is applied, so its impulse response must be zero for negative time: h(t) = 0 for t < 0. This ensures that the output at any time depends only on present and past inputs, not future inputs.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Filters and System Properties",
    "subtopic": "BIBO Stability",
    "question": "What is the condition for BIBO (Bounded Input Bounded Output) stability of an LTI system?",
    "correct_answer": "∫|h(t)|dt < ∞",
    "distractors": ["h(t) = 0 for t < 0", "H(ω) is real", "h(t) is causal"],
    "context": "For BIBO stability, the impulse response must be absolutely integrable: ∫|h(t)|dt < ∞. This ensures that any bounded input produces a bounded output. If this condition is violated, even small bounded inputs can produce unbounded outputs.",
    "difficulty": "advanced",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Convolution and Correlation",
    "subtopic": "Convolution Property",
    "question": "If $x(t)$ is the input to an LTI system and $h(t)$ is its impulse response, what operation relates the output $y(t)$ to $x(t)$ and $h(t)$?",
    "correct_answer": "Convolution.",
    "distractors": [
      "Multiplication.",
      "Correlation.",
      "Differentiation."
    ],
    "context": "For a Linear Time-Invariant (LTI) system, the output signal $y(t)$ is obtained by convolving the input signal $x(t)$ with the system's impulse response $h(t)$, expressed as $y(t) = x(t) * h(t)$.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Convolution and Correlation",
    "subtopic": "Auto-correlation",
    "question": "What does the auto-correlation function of a signal measure?",
    "correct_answer": "The similarity of the signal with a time-shifted version of itself.",
    "distractors": [
      "The similarity between two different signals.",
      "The frequency content of the signal.",
      "The total energy of the signal."
    ],
    "context": "Auto-correlation is a mathematical tool for finding repeating patterns or periodicities in a signal, or to assess the similarity of a signal with a delayed copy of itself. It is widely used in signal processing, such as for determining the fundamental frequency of a periodic signal.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "LTI System Analysis",
    "subtopic": "Frequency Response",
    "question": "For an LTI system with impulse response $h(t)$, what is its frequency response $H(j\\omega)$?",
    "correct_answer": "The Fourier Transform of its impulse response.",
    "distractors": [
      "The Laplace Transform of its impulse response.",
      "The inverse Fourier Transform of its output.",
      "The magnitude of its transfer function."
    ],
    "context": "The frequency response $H(j\\omega)$ of an LTI system is a fundamental characteristic that describes how the system reacts to different frequencies. It is obtained by taking the Fourier Transform of the system's impulse response $h(t)$.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "LTI System Analysis",
    "subtopic": "Transfer Function",
    "question": "For a discrete-time LTI system, how is the transfer function $H(z)$ defined in the z-domain?",
    "correct_answer": "The Z-transform of its impulse response $h[n]$.",
    "distractors": [
      "The Fourier Transform of its impulse response $h[n]$.",
      "The ratio of the input Z-transform to the output Z-transform.",
      "The convolution of the input and output in the z-domain."
    ],
    "context": "In the z-domain, the transfer function $H(z)$ of a discrete-time LTI system is defined as the Z-transform of its impulse response $h[n]$. This function is crucial for analyzing system properties like stability and causality.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Sampling Theorem",
    "subtopic": "Nyquist Rate",
    "question": "According to the Nyquist-Shannon sampling theorem, what is the minimum sampling rate required to perfectly reconstruct a continuous-time signal with a maximum frequency component of $f_{max}$ Hz?",
    "correct_answer": "At least $2f_{max}$ samples per second.",
    "distractors": [
      "Exactly $f_{max}$ samples per second.",
      "Less than $f_{max}$ samples per second.",
      "Greater than $4f_{max}$ samples per second."
    ],
    "context": "The Nyquist-Shannon sampling theorem states that to perfectly reconstruct a continuous-time signal from its samples, the sampling rate ($f_s$) must be at least twice the maximum frequency component ($f_{max}$) present in the signal. This minimum rate is known as the Nyquist rate ($2f_{max}$).",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Sampling Theorem",
    "subtopic": "Aliasing",
    "question": "What phenomenon occurs when a continuous-time signal is sampled at a rate below the Nyquist rate, causing high-frequency components to appear as lower frequencies?",
    "correct_answer": "Aliasing.",
    "distractors": [
      "Quantization error.",
      "Folding.",
      "Interference."
    ],
    "context": "Aliasing is a distortion that occurs when a signal is sampled at a rate lower than the Nyquist rate. High-frequency components in the original signal, when sampled insufficiently, masquerade as lower-frequency components, leading to a misrepresentation of the signal's true frequency content.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Filters and System Properties",
    "subtopic": "Causality",
    "question": "A continuous-time LTI system is considered causal if its impulse response $h(t)$ satisfies which condition?",
    "correct_answer": "$h(t) = 0$ for $t < 0$.",
    "distractors": [
      "$h(t) = 0$ for $t > 0$.",
      "$\\int_{-\\infty}^{\\infty} |h(t)| dt < \\infty$.",
      "$h(t)$ is periodic."
    ],
    "context": "Causality is a fundamental property of systems. A system is causal if its output at any given time depends only on the present and past inputs, not on future inputs. For an LTI system, this translates to its impulse response being zero for all negative time ($h(t) = 0$ for $t < 0$).",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Filters and System Properties",
    "subtopic": "Stability",
    "question": "For a discrete-time LTI system, which condition on the poles of its transfer function $H(z)$ guarantees BIBO (Bounded-Input Bounded-Output) stability?",
    "correct_answer": "All poles must lie inside the unit circle in the z-plane.",
    "distractors": [
      "All poles must lie outside the unit circle in the z-plane.",
      "All poles must lie on the unit circle in the z-plane.",
      "All zeros must lie inside the unit circle in the z-plane."
    ],
    "context": "BIBO stability is a crucial property for LTI systems, meaning a bounded input always produces a bounded output. For discrete-time LTI systems, BIBO stability is guaranteed if and only if all the poles of the system's transfer function $H(z)$ lie strictly inside the unit circle in the z-plane.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "LTI System Analysis",
    "subtopic": "Step Response",
    "question": "What is the relationship between the impulse response $h(t)$ and the step response $s(t)$ of a continuous-time LTI system?",
    "correct_answer": "$s(t)$ is the integral of $h(t)$.",
    "distractors": [
      "$s(t)$ is the derivative of $h(t)$.",
      "$s(t)$ is the convolution of $h(t)$ with itself.",
      "$s(t)$ is the Fourier transform of $h(t)$."
    ],
    "context": "The step response $s(t)$ of an LTI system is its output when the input is a unit step function $u(t)$. Since the unit step function is the integral of the unit impulse function, the step response of an LTI system is the integral of its impulse response.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Filters and System Properties",
    "subtopic": "Linearity",
    "question": "Which property of a system states that if input $x_1(t)$ produces output $y_1(t)$ and input $x_2(t)$ produces output $y_2(t)$, then input $ax_1(t) + bx_2(t)$ produces output $ay_1(t) + by_2(t)$?",
    "correct_answer": "Linearity.",
    "distractors": [
      "Time-invariance.",
      "Causality.",
      "Stability."
    ],
    "context": "Linearity is a key system property comprising two conditions: additivity (the response to a sum of inputs is the sum of responses to individual inputs) and homogeneity (scaling an input by a constant scales the output by the same constant). The combined expression encapsulates both.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Convolution",
    "subtopic": "Convolution Property",
    "question": "What is the primary purpose of convolution in continuous-time signal processing?",
    "correct_answer": "Determine the output of an LTI system for a given input and impulse response",
    "distractors": [
      "Measure the similarity between two signals",
      "Convert a signal to the frequency domain",
      "Amplify the input signal"
    ],
    "context": "Convolution in continuous-time systems combines the input signal with the system's impulse response to compute the output of a linear time-invariant (LTI) system.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Convolution",
    "subtopic": "Convolution Operation",
    "question": "What is the result of convolving a signal x(t) with an impulse function δ(t)?",
    "correct_answer": "x(t)",
    "distractors": [
      "0",
      "δ(t)",
      "x(t) * δ(t)"
    ],
    "context": "Convolving a signal x(t) with the Dirac delta function δ(t) yields x(t) itself, as the delta function acts as the identity element for convolution.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Correlation",
    "subtopic": "Cross-Correlation",
    "question": "What does the cross-correlation function measure between two signals?",
    "correct_answer": "Degree of similarity as a function of time shift",
    "distractors": [
      "Frequency content of the signals",
      "Total energy of the combined signals",
      "Difference in amplitude between signals"
    ],
    "context": "Cross-correlation measures how similar two signals are as one is shifted relative to the other, often used in signal detection and time-delay estimation.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "LTI System Analysis",
    "subtopic": "Impulse Response",
    "question": "What characterizes the impulse response of an LTI system?",
    "correct_answer": "Completely describes the system's input-output behavior",
    "distractors": [
      "Represents the system's frequency spectrum",
      "Determines the system's power consumption",
      "Is always a periodic signal"
    ],
    "context": "The impulse response h(t) of an LTI system fully characterizes its behavior, as the output for any input can be computed via convolution with h(t).",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "LTI System Analysis",
    "subtopic": "Frequency Response",
    "question": "What is the frequency response H(jω) of an LTI system defined as?",
    "correct_answer": "Fourier transform of the impulse response",
    "distractors": [
      "Laplace transform of the input signal",
      "Time-domain convolution of the system",
      "Z-transform of the output signal"
    ],
    "context": "The frequency response H(jω) of an LTI system is the Fourier transform of its impulse response h(t), describing how the system affects different frequency components.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Sampling Theorem",
    "subtopic": "Nyquist Rate",
    "question": "What is the Nyquist rate for a signal with a maximum frequency component of f_max?",
    "correct_answer": "2f_max",
    "distractors": [
      "f_max",
      "4f_max",
      "f_max/2"
    ],
    "context": "The Nyquist rate is twice the highest frequency component (f_max) of a band-limited signal, ensuring it can be perfectly reconstructed from its samples without aliasing.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Sampling Theorem",
    "subtopic": "Aliasing",
    "question": "What is the effect of sampling a signal at a frequency below the Nyquist rate?",
    "correct_answer": "Aliasing, causing frequency components to overlap",
    "distractors": [
      "Increased signal amplitude",
      "Phase distortion only",
      "Complete signal reconstruction"
    ],
    "context": "Sampling below the Nyquist rate causes aliasing, where high-frequency components appear as lower frequencies in the sampled signal, leading to distortion.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Filters and System Properties",
    "subtopic": "Causality",
    "question": "What defines a causal LTI system?",
    "correct_answer": "Output depends only on current and past inputs",
    "distractors": [
      "Output depends only on future inputs",
      "Output is independent of the input",
      "Output is always periodic"
    ],
    "context": "A causal LTI system produces an output that depends only on the current and past input values, ensuring physical realizability in real-time systems.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Filters and System Properties",
    "subtopic": "Stability",
    "question": "What is the condition for a continuous-time LTI system to be BIBO stable?",
    "correct_answer": "The impulse response is absolutely integrable",
    "distractors": [
      "The impulse response is periodic",
      "The system has finite gain",
      "The frequency response is constant"
    ],
    "context": "A continuous-time LTI system is BIBO (bounded-input, bounded-output) stable if its impulse response h(t) is absolutely integrable, ensuring bounded outputs for bounded inputs.",
    "difficulty": "advanced",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Filters and System Properties",
    "subtopic": "Filter Types",
    "question": "What is the transfer function characteristic of an ideal low-pass filter in the frequency domain?",
    "correct_answer": "Constant gain in passband, zero in stopband",
    "distractors": [
      "Linear gain increase with frequency",
      "Constant gain across all frequencies",
      "Zero gain in passband, constant in stopband"
    ],
    "context": "An ideal low-pass filter has a transfer function with constant gain in the passband (up to the cutoff frequency) and zero gain in the stopband, allowing only low frequencies to pass.",
    "difficulty": "advanced",
    "type": "mcq"
  },
   {
    "goal": "GATE ECE",
    "topic": "Control Systems",
    "subtopic": "Transfer Functions",
    "question": "What does the transfer function of a system represent?",
    "correct_answer": "The ratio of output to input in the Laplace domain with zero initial conditions",
    "distractors": ["The Fourier transform of the output", "The time-domain response of the system", "The gain of the amplifier circuit"],
    "context": "The transfer function is defined as the Laplace transform of the output divided by the Laplace transform of the input, assuming zero initial conditions.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Control Systems",
    "subtopic": "Block Diagrams and Signal Flow Graphs",
    "question": "Which of the following methods can be used to simplify a block diagram into a single transfer function?",
    "correct_answer": "Block diagram reduction rules",
    "distractors": ["Convolution theorem", "Z-transform", "Laplace inverse"],
    "context": "Block diagram reduction involves applying algebraic rules to combine blocks and feedback loops into a simplified form.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Control Systems",
    "subtopic": "Block Diagrams and Signal Flow Graphs",
    "question": "In signal flow graphs, which method is used to determine the overall transfer function?",
    "correct_answer": "Mason’s Gain Formula",
    "distractors": ["Kirchhoff’s law", "Laplace Transform", "Z-Transform"],
    "context": "Mason’s Gain Formula is used in signal flow graphs to determine the system transfer function by identifying forward paths and loops.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Control Systems",
    "subtopic": "Time Domain Analysis",
    "question": "What does the time-domain response of a first-order system include?",
    "correct_answer": "A single exponential term representing the system’s behavior",
    "distractors": ["A sinusoidal term only", "A second-order polynomial", "Multiple exponential decays"],
    "context": "The response of a first-order system typically consists of a single exponential term based on its time constant.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Control Systems",
    "subtopic": "Time Domain Analysis",
    "question": "Which performance metric measures how fast a system settles within a certain percentage of its final value?",
    "correct_answer": "Settling time",
    "distractors": ["Rise time", "Peak time", "Steady-state error"],
    "context": "Settling time is the time required for the response to remain within a specified percentage of the final value after transients die out.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Control Systems",
    "subtopic": "Transfer Functions",
    "question": "Which of the following cannot be determined directly from a system's transfer function?",
    "correct_answer": "Physical structure of the system",
    "distractors": ["Poles", "Zeros", "System stability"],
    "context": "While transfer functions give poles and zeros to analyze system behavior, they do not reveal the system’s internal structure or implementation.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Control Systems",
    "subtopic": "Time Domain Analysis",
    "question": "What is the steady-state error of a Type 0 system to a unit step input?",
    "correct_answer": "Finite and non-zero",
    "distractors": ["Zero", "Infinite", "Depends on system gain only"],
    "context": "For a Type 0 system (no integrator), the steady-state error to a step input is finite and non-zero, as it cannot perfectly track the input.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Transfer Functions",
    "subtopic": "Definition of Transfer Function",
    "question": "For a linear time-invariant (LTI) system, how is the transfer function $H(s)$ defined in the Laplace domain?",
    "correct_answer": "The ratio of the Laplace transform of the output to the Laplace transform of the input, assuming zero initial conditions.",
    "distractors": [
      "The Fourier Transform of the impulse response.",
      "The time-domain output for a unit step input.",
      "The convolution of input and output in the frequency domain."
    ],
    "context": "The transfer function $H(s)$ of an LTI system is a powerful representation in the s-domain. It's defined as the ratio of the Laplace transform of the system's output to the Laplace transform of its input, with all initial conditions set to zero. It fully characterizes the system's dynamic behavior.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Block Diagrams and Signal Flow Graphs",
    "subtopic": "Block Diagram Reduction",
    "question": "When reducing a block diagram, which rule allows for combining two blocks connected in series?",
    "correct_answer": "Multiplying their individual transfer functions.",
    "distractors": [
      "Adding their individual transfer functions.",
      "Dividing their individual transfer functions.",
      "Convolving their individual transfer functions."
    ],
    "context": "In block diagram reduction, blocks connected in series represent cascading systems. The overall transfer function of such a series connection is the product of the individual transfer functions of the blocks, assuming no loading effects between them.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Block Diagrams and Signal Flow Graphs",
    "subtopic": "Signal Flow Graphs (Mason's Gain Formula)",
    "question": "What does a 'non-touching loop' signify in Mason's Gain Formula for a signal flow graph?",
    "correct_answer": "Two or more loops that do not share any common nodes.",
    "distractors": [
      "Loops that share exactly one common node.",
      "Loops that are in cascade.",
      "Paths that do not connect to any loops."
    ],
    "context": "Mason's Gain Formula is used to find the overall transfer function of a signal flow graph. A 'non-touching loop' refers to a set of two or more individual loops within the graph that do not have any nodes in common. These are used in the denominator (delta) calculation of the formula.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Time Domain Analysis",
    "subtopic": "First-Order System Response",
    "question": "For a first-order system subjected to a unit step input, what is the 'time constant' ($\\tau$)?",
    "correct_answer": "The time required for the output to reach 63.2% of its final value.",
    "distractors": [
      "The time required for the output to reach 90% of its final value.",
      "The time taken for the output to start responding.",
      "The period of oscillation of the output."
    ],
    "context": "The time constant ($\\tau$) is a critical parameter for first-order systems. It dictates the speed of response. For a step input, it's the time it takes for the system's output to reach approximately 63.2% (1 - $e^{-1}$) of its steady-state (final) value.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Time Domain Analysis",
    "subtopic": "Second-Order System Damping",
    "question": "In a second-order underdamped system, what characteristic behavior is observed in its step response?",
    "correct_answer": "Oscillatory response with decaying amplitude.",
    "distractors": [
      "Fast, non-oscillatory rise to steady-state.",
      "Slow, non-oscillatory rise to steady-state.",
      "Constant amplitude oscillations."
    ],
    "context": "The damping ratio ($\\zeta$) determines the nature of the step response for a second-order system. An underdamped system (0 < $\\zeta$ < 1) exhibits oscillations that gradually decay in amplitude as the system settles towards its final steady-state value.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Transfer Functions",
    "subtopic": "Poles and Zeros",
    "question": "How do the poles of a system's transfer function relate to the system's natural frequencies and stability?",
    "correct_answer": "Poles are the roots of the denominator polynomial, indicating natural frequencies and dictating stability.",
    "distractors": [
      "Poles are the roots of the numerator polynomial, indicating the system's zeros.",
      "Poles represent the steady-state gain of the system.",
      "Poles indicate the input locations that produce zero output."
    ],
    "context": "Poles of a transfer function $H(s)$ are the values of 's' that make the denominator zero. They represent the natural frequencies of the system's response (its intrinsic dynamic behavior) and their locations in the s-plane directly determine the system's stability. For stability, all poles must lie in the left half of the s-plane.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Time Domain Analysis",
    "subtopic": "Steady-State Error",
    "question": "For a unity feedback control system with a step input, what type of system (based on its number of integrators) will have a zero steady-state error?",
    "correct_answer": "Type 1 or higher type system.",
    "distractors": [
      "Type 0 system.",
      "Any system with a proportional controller.",
      "Only systems with a differentiator in the forward path."
    ],
    "context": "The steady-state error of a control system for a given input depends on the 'type' of the system, which is determined by the number of integrators at the origin in its open-loop transfer function. For a unity feedback system, a Type 1 system will have zero steady-state error for a step input because the integrator drives the error to zero.",
    "difficulty": "advance",
    "type": "mcq"
  },
   {
    "goal": "GATE ECE",
    "topic": "Transfer Functions",
    "subtopic": "Definition",
    "question": "What is the transfer function of a linear time-invariant (LTI) system defined as?",
    "correct_answer": "Ratio of Laplace transform of output to input with zero initial conditions",
    "distractors": [
      "Ratio of Fourier transform of input to output",
      "Time-domain convolution of input and output",
      "Ratio of output to input in the time domain"
    ],
    "context": "The transfer function H(s) of an LTI system is defined as H(s) = Y(s)/X(s), where Y(s) and X(s) are the Laplace transforms of the output and input, respectively, assuming zero initial conditions.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Transfer Functions",
    "subtopic": "Poles and Zeros",
    "question": "What do the poles of a transfer function indicate about an LTI system?",
    "correct_answer": "Natural frequencies of the system response",
    "distractors": [
      "Amplitude of the input signal",
      "Steady-state gain of the system",
      "Frequency components of the output signal"
    ],
    "context": "The poles of a transfer function determine the natural frequencies of the system's response, influencing its transient behavior and stability.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Block Diagrams",
    "subtopic": "Block Diagram Reduction",
    "question": "What is the equivalent transfer function of two systems with transfer functions H1(s) and H2(s) connected in series?",
    "correct_answer": "H1(s) * H2(s)",
    "distractors": [
      "H1(s) + H2(s)",
      "H1(s) / H2(s)",
      "H1(s) - H2(s)"
    ],
    "context": "In a block diagram, when two systems with transfer functions H1(s) and H2(s) are connected in series, the equivalent transfer function is the product H1(s) * H2(s).",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Block Diagrams",
    "subtopic": "Feedback Systems",
    "question": "What is the closed-loop transfer function of a system with forward gain G(s) and feedback H(s) in a negative feedback configuration?",
    "correct_answer": "G(s) / (1 + G(s)H(s))",
    "distractors": [
      "G(s) * H(s)",
      "G(s) / (1 - G(s)H(s))",
      "G(s) + H(s)"
    ],
    "context": "In a negative feedback system, the closed-loop transfer function is given by G(s) / (1 + G(s)H(s)), where G(s) is the forward path gain and H(s) is the feedback path gain.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Signal Flow Graphs",
    "subtopic": "Mason’s Gain Formula",
    "question": "What does the denominator of Mason’s gain formula represent in a signal flow graph?",
    "correct_answer": "1 - sum of all loop gains + sum of products of non-touching loops",
    "distractors": [
      "Sum of all forward path gains",
      "Product of all node gains",
      "Sum of all input signal gains"
    ],
    "context": "Mason’s gain formula calculates the overall gain of a signal flow graph, with the denominator being 1 minus the sum of all individual loop gains plus the sum of products of non-touching loop gains, and so on.",
    "difficulty": "advanced",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Time Domain Analysis",
    "subtopic": "Step Response",
    "question": "What is the steady-state value of the step response of a stable LTI system with transfer function H(s)?",
    "correct_answer": "H(0)",
    "distractors": [
      "H(∞)",
      "H(jω)",
      "1/H(0)"
    ],
    "context": "For a stable LTI system, the steady-state value of the step response is given by H(0), the value of the transfer function at s = 0, according to the final value theorem.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Time Domain Analysis",
    "subtopic": "Time Constant",
    "question": "What is the time constant of a first-order LTI system with transfer function H(s) = 1/(s + a)?",
    "correct_answer": "1/a",
    "distractors": [
      "a",
      "1/s",
      "s/a"
    ],
    "context": "In a first-order LTI system with transfer function H(s) = 1/(s + a), the time constant is 1/a, determining the rate of decay of the system’s transient response.",
    "difficulty": "advanced",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Transfer Functions",
    "subtopic": "System Stability",
    "question": "For a system with transfer function G(s) = K/(s+2)(s+5), what is the condition for system stability?",
    "correct_answer": "All poles must lie in the left half of s-plane",
    "distractors": [
      "All poles must lie in the right half of s-plane",
      "At least one pole must be at origin",
      "All poles must lie on the imaginary axis"
    ],
    "context": "System stability is determined by pole locations in the s-plane. For stability, all poles of the transfer function must have negative real parts, meaning they lie in the left half of the s-plane.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Transfer Functions",
    "subtopic": "Pole-Zero Analysis",
    "question": "A transfer function H(s) = (s+3)/(s²+4s+3) has poles at which locations?",
    "correct_answer": "s = -1 and s = -3",
    "distractors": [
      "s = 1 and s = 3",
      "s = -2 ± j√2",
      "s = 0 and s = -4"
    ],
    "context": "To find poles, we factor the denominator s²+4s+3 = (s+1)(s+3), giving poles at s = -1 and s = -3. Poles are values of s that make the denominator zero.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Block Diagrams and Signal Flow Graphs",
    "subtopic": "Mason's Gain Formula",
    "question": "In Mason's gain formula, what does the term 'Δ' represent?",
    "correct_answer": "Overall system determinant",
    "distractors": [
      "Forward path gain",
      "Feedback loop gain",
      "Input-output ratio"
    ],
    "context": "In Mason's gain formula, Δ (delta) represents the overall system determinant calculated as 1 minus the sum of all individual loop gains plus the sum of products of non-touching loop pairs, and so on.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Block Diagrams and Signal Flow Graphs",
    "subtopic": "Block Diagram Reduction",
    "question": "When two blocks with transfer functions G₁(s) and G₂(s) are connected in series, the overall transfer function is:",
    "correct_answer": "G₁(s) × G₂(s)",
    "distractors": [
      "G₁(s) + G₂(s)",
      "G₁(s) / G₂(s)",
      "G₁(s) - G₂(s)"
    ],
    "context": "For blocks connected in series (cascade), the output of first block becomes input to second block. The overall transfer function is the product of individual transfer functions.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Time Domain Analysis",
    "subtopic": "Step Response",
    "question": "For a first-order system with transfer function G(s) = 5/(s+2), what is the steady-state value for unit step input?",
    "correct_answer": "2.5",
    "distractors": [
      "5",
      "0.5",
      "1"
    ],
    "context": "For unit step input, steady-state value is found using final value theorem: lim(t→∞) y(t) = lim(s→0) sY(s) = lim(s→0) s × G(s)/s = G(0) = 5/2 = 2.5.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Time Domain Analysis",
    "subtopic": "Impulse Response",
    "question": "The impulse response of a system is the inverse Laplace transform of which function?",
    "correct_answer": "Transfer function G(s)",
    "distractors": [
      "Step response",
      "Frequency response",
      "Ramp response"
    ],
    "context": "The impulse response h(t) is the output when input is unit impulse δ(t). Since L{δ(t)} = 1, the impulse response is the inverse Laplace transform of the transfer function G(s).",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Time Domain Analysis",
    "subtopic": "Second Order Systems",
    "question": "For an underdamped second-order system, the damping ratio ζ satisfies which condition?",
    "correct_answer": "0 < ζ < 1",
    "distractors": [
      "ζ > 1",
      "ζ = 1",
      "ζ < 0"
    ],
    "context": "Second-order systems are classified based on damping ratio ζ. Underdamped systems have oscillatory response with 0 < ζ < 1, critically damped has ζ = 1, and overdamped has ζ > 1.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Frequency Domain Analysis",
    "subtopic": "Bode Plots",
    "question": "On a Bode magnitude plot, what is the change in slope (in dB/decade) at the corner frequency for a simple pole?",
    "correct_answer": "-20 dB/decade.",
    "distractors": [
      "+20 dB/decade.",
      "-40 dB/decade.",
      "0 dB/decade."
    ],
    "context": "Bode plots graphically represent the frequency response of a system. For a simple pole (1/(1+sT)), the magnitude plot's slope changes by -20 dB/decade downwards at its corresponding corner frequency.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Frequency Domain Analysis",
    "subtopic": "Nyquist Plot",
    "question": "What is the primary information conveyed by the Nyquist plot regarding system stability?",
    "correct_answer": "Encircles of the critical point (-1, 0).",
    "distractors": [
      "The slope at the gain crossover frequency.",
      "The phase margin at the phase crossover frequency.",
      "The number of poles in the right-half plane."
    ],
    "context": "The Nyquist plot is a polar plot of the open-loop frequency response. Its primary use for stability analysis (Nyquist stability criterion) involves observing the encirclements of the critical point (-1, 0) by the plot, which relates to the number of unstable closed-loop poles.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Stability",
    "subtopic": "Routh-Hurwitz Criterion",
    "question": "In the Routh-Hurwitz stability criterion, if any element in the first column of the Routh array is zero while other elements in that row are non-zero, what does it indicate about the system's stability?",
    "correct_answer": "The system is unstable.",
    "distractors": [
      "The system is marginally stable.",
      "The system is stable.",
      "The system has poles at the origin."
    ],
    "context": "The Routh-Hurwitz criterion provides a systematic way to determine the stability of a linear system by examining the coefficients of its characteristic equation. A zero in the first column (with at least one non-zero element in the same row) indicates an unstable system with poles in the right-half s-plane.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Stability",
    "subtopic": "Root Locus",
    "question": "As the gain 'K' varies from zero to infinity, what path do the closed-loop poles of a system trace out?",
    "correct_answer": "The root locus.",
    "distractors": [
      "The Nyquist plot.",
      "The Bode plot.",
      "The pole-zero diagram of the open-loop system."
    ],
    "context": "The root locus is a graphical method that shows how the closed-loop poles of a system move in the s-plane as a single parameter (usually the open-loop gain K) is varied from 0 to infinity. It's a powerful tool for analyzing stability and transient response.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "PID Controllers",
    "subtopic": "Proportional Control",
    "question": "What is the immediate effect of increasing only the proportional gain ($K_p$) in a PID controller on the system's steady-state error?",
    "correct_answer": "It generally reduces the steady-state error but may not eliminate it.",
    "distractors": [
      "It eliminates the steady-state error completely.",
      "It increases the steady-state error.",
      "It has no effect on the steady-state error."
    ],
    "context": "A proportional (P) controller produces an output proportional to the error signal. Increasing $K_p$ makes the system react more strongly to errors, thereby reducing the steady-state error. However, unless the system is of Type 1 or higher, a P controller alone cannot eliminate the steady-state error for certain inputs (like a step input).",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "PID Controllers",
    "subtopic": "Integral Control",
    "question": "Which component of a PID controller is primarily responsible for eliminating steady-state errors for step inputs?",
    "correct_answer": "Integral (I) control.",
    "distractors": [
      "Proportional (P) control.",
      "Derivative (D) control.",
      "Lead compensation."
    ],
    "context": "Integral control in a PID controller integrates the error signal over time. This continuous integration drives the steady-state error to zero for step inputs (and also for ramp inputs if the system type is appropriate), as long as a steady-state error exists, the integral term continues to increase the control action.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Compensators",
    "subtopic": "Lead Compensator",
    "question": "What is the primary effect of adding a lead compensator to a control system?",
    "correct_answer": "Increases phase margin and improves transient response.",
    "distractors": [
      "Decreases phase margin and slows down response.",
      "Eliminates steady-state error for ramp inputs.",
      "Reduces noise sensitivity."
    ],
    "context": "A lead compensator (or lead network) adds phase lead to the system's frequency response at higher frequencies. This effectively increases the phase margin, thereby improving the system's stability and speeding up its transient response (e.g., reducing settling time and overshoot).",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Compensators",
    "subtopic": "Lag Compensator",
    "question": "Which type of compensator is typically used to improve the steady-state error characteristics of a control system without significantly affecting its transient response?",
    "correct_answer": "Lag compensator.",
    "distractors": [
      "Lead compensator.",
      "Proportional controller.",
      "Derivative controller."
    ],
    "context": "A lag compensator adds phase lag at lower frequencies. Its primary purpose is to improve the steady-state error performance (e.g., reduce steady-state error to a step or ramp input) by increasing the low-frequency gain, while trying to minimally affect the system's transient response and stability margins.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "State-Space Analysis",
    "subtopic": "State Variables",
    "question": "In state-space representation, what do the 'state variables' of a system represent?",
    "correct_answer": "The minimum set of variables that completely describe the system's future behavior given its present state and future inputs.",
    "distractors": [
      "The input and output signals of the system.",
      "The transfer function poles and zeros.",
      "The system's frequency response characteristics."
    ],
    "context": "State variables are a crucial concept in state-space analysis. They form a minimum set of variables whose knowledge at any given time, along with the system's inputs for all future times, is sufficient to uniquely determine the system's future behavior.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "State-Space Analysis",
    "subtopic": "Controllability",
    "question": "What does the controllability property in state-space analysis imply?",
    "correct_answer": "It is possible to transfer the system from any initial state to any desired final state in a finite time using an unconstrained input.",
    "distractors": [
      "It is possible to determine the internal state of the system by observing its outputs.",
      "The system is inherently stable regardless of the input.",
      "The system's output can be precisely tracked by a reference input."
    ],
    "context": "Controllability is a fundamental property of dynamic systems. A system is controllable if it is possible to move it from any initial state to any desired final state within a finite time by applying an appropriate unconstrained input signal. This is critical for designing effective control strategies.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Frequency Domain Analysis",
    "subtopic": "Bode Plot",
    "question": "What does the gain crossover frequency in a Bode plot represent?",
    "correct_answer": "The frequency where the magnitude is 0 dB",
    "distractors": [
      "The frequency where the phase is 0 degrees",
      "The frequency where the gain is maximum",
      "The frequency where the phase is -180 degrees"
    ],
    "context": "In a Bode plot, the gain crossover frequency is where the magnitude of the open-loop transfer function equals 0 dB, indicating unity gain.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Frequency Domain Analysis",
    "subtopic": "Nyquist Plot",
    "question": "What does the Nyquist plot represent for a system’s open-loop transfer function?",
    "correct_answer": "The plot of the transfer function in the complex plane as frequency varies",
    "distractors": [
      "The time-domain response of the system",
      "The magnitude of the transfer function only",
      "The phase response in the time domain"
    ],
    "context": "A Nyquist plot maps the open-loop transfer function G(jω) in the complex plane, showing both magnitude and phase as frequency ω varies from -∞ to +∞.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Stability",
    "subtopic": "Routh-Hurwitz Criterion",
    "question": "What does a zero in the first column of the Routh array indicate about a system’s stability?",
    "correct_answer": "Potential instability or marginal stability",
    "distractors": [
      "Guaranteed stability",
      "No effect on stability",
      "Infinite gain margin"
    ],
    "context": "In the Routh-Hurwitz criterion, a zero in the first column of the Routh array suggests potential instability or marginal stability, requiring further analysis to determine pole locations.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Stability",
    "subtopic": "Nyquist Stability Criterion",
    "question": "What condition indicates stability in the Nyquist criterion for a system with no open-loop poles in the right half-plane?",
    "correct_answer": "The Nyquist plot does not encircle the point (-1, 0)",
    "distractors": [
      "The Nyquist plot encircles the point (1, 0)",
      "The Nyquist plot crosses the real axis at (0, 0)",
      "The Nyquist plot encircles the origin"
    ],
    "context": "For a system with no open-loop poles in the right half-plane, the Nyquist stability criterion states that the system is stable if the Nyquist plot of G(jω)H(jω) does not encircle the critical point (-1, 0).",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Stability",
    "subtopic": "Root Locus",
    "question": "What does the root locus plot show for a feedback control system?",
    "correct_answer": "The path of closed-loop poles as gain varies",
    "distractors": [
      "The frequency response of the system",
      "The time-domain response of the system",
      "The open-loop gain at fixed frequencies"
    ],
    "context": "The root locus plot illustrates how the poles of the closed-loop transfer function move in the s-plane as the system gain varies from 0 to infinity.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "PID Controllers",
    "subtopic": "Proportional Control",
    "question": "What is the primary effect of increasing the proportional gain (Kp) in a PID controller?",
    "correct_answer": "Reduces steady-state error but may cause oscillations",
    "distractors": [
      "Increases steady-state error",
      "Eliminates transient response",
      "Reduces system bandwidth"
    ],
    "context": "In a PID controller, the proportional gain (Kp) reduces steady-state error by amplifying the error signal but may lead to oscillations if set too high.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "PID Controllers",
    "subtopic": "Integral Control",
    "question": "What is the role of the integral term in a PID controller?",
    "correct_answer": "Eliminates steady-state error",
    "distractors": [
      "Increases system damping",
      "Reduces transient response time",
      "Stabilizes the phase margin"
    ],
    "context": "The integral term in a PID controller accumulates the error over time, driving the steady-state error to zero, especially for step inputs.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Compensators",
    "subtopic": "Lead Compensator",
    "question": "What is the primary effect of a lead compensator on a control system?",
    "correct_answer": "Increases phase margin and improves transient response",
    "distractors": [
      "Decreases phase margin",
      "Reduces system gain",
      "Eliminates steady-state error"
    ],
    "context": "A lead compensator introduces a phase lead, increasing the phase margin and improving the transient response by speeding up the system’s response.",
    "difficulty": "advanced",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Compensators",
    "subtopic": "Lag Compensator",
    "question": "How does a lag compensator affect the steady-state performance of a control system?",
    "correct_answer": "Improves steady-state accuracy by increasing low-frequency gain",
    "distractors": [
      "Increases high-frequency gain",
      "Reduces system stability",
      "Decreases transient response speed"
    ],
    "context": "A lag compensator increases the gain at low frequencies, improving steady-state accuracy without significantly affecting the transient response or stability margins.",
    "difficulty": "advanced",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "State-Space Analysis",
    "subtopic": "State Transition Matrix",
    "question": "What does the state transition matrix represent in state-space analysis?",
    "correct_answer": "Solution to the homogeneous state equation",
    "distractors": [
      "Input-output transfer function",
      "Steady-state response of the system",
      "Frequency response of the system"
    ],
    "context": "In state-space analysis, the state transition matrix e^(At) represents the solution to the homogeneous state equation, describing how the system state evolves over time without input.",
    "difficulty": "advanced",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Control Systems",
    "subtopic": "Frequency Domain Analysis",
    "question": "What does the gain margin in a Bode plot indicate about system stability?",
    "correct_answer": "The amount by which gain can increase before the system becomes unstable",
    "distractors": [
      "The bandwidth of the system",
      "The steady-state error",
      "The damping ratio of the system"
    ],
    "context": "In frequency domain analysis, gain margin indicates how much the system gain can be increased before it reaches the point of instability, typically evaluated using Bode plots.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Control Systems",
    "subtopic": "Stability",
    "question": "Which method determines system stability without solving the characteristic equation?",
    "correct_answer": "Routh-Hurwitz criterion",
    "distractors": [
      "Bode plot method",
      "Root locus method",
      "State-space analysis"
    ],
    "context": "The Routh-Hurwitz criterion allows stability analysis using coefficients of the characteristic polynomial without explicitly solving for roots.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Control Systems",
    "subtopic": "Stability",
    "question": "In a Nyquist plot, a clockwise encirclement of -1 point indicates what condition for a closed-loop system?",
    "correct_answer": "Potential instability depending on open-loop poles in right-half plane",
    "distractors": [
      "Guaranteed stability regardless of gain",
      "Reduced phase margin",
      "Gain crossover frequency is zero"
    ],
    "context": "The Nyquist criterion relates the number of clockwise encirclements of the critical point -1 to the open-loop pole positions to determine closed-loop stability.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Control Systems",
    "subtopic": "PID Controllers",
    "question": "Which component of a PID controller helps eliminate steady-state error?",
    "correct_answer": "Integral component",
    "distractors": [
      "Proportional component",
      "Derivative component",
      "Feedback sensor"
    ],
    "context": "The integral term in a PID controller accumulates the error over time, helping eliminate steady-state offset.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Control Systems",
    "subtopic": "PID Controllers",
    "question": "What is the effect of increasing the derivative gain in a PID controller?",
    "correct_answer": "Improves response speed and reduces overshoot",
    "distractors": [
      "Increases steady-state error",
      "Eliminates system noise",
      "Increases gain margin"
    ],
    "context": "The derivative term predicts future errors and acts to dampen the system, improving transient performance and reducing overshoot.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Control Systems",
    "subtopic": "Root Locus",
    "question": "What does a root locus plot show in control systems?",
    "correct_answer": "The movement of poles with varying gain",
    "distractors": [
      "Variation of frequency response with phase",
      "The change in bandwidth with gain",
      "The damping ratio for constant gain"
    ],
    "context": "Root locus plots visualize how system poles move in the s-plane as a system parameter (usually gain) varies.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Control Systems",
    "subtopic": "Compensators",
    "question": "Which compensator increases the phase margin without changing the low-frequency gain significantly?",
    "correct_answer": "Lead compensator",
    "distractors": [
      "Lag compensator",
      "PI controller",
      "Notch filter"
    ],
    "context": "A lead compensator improves transient performance by increasing phase margin, making the system faster and more stable.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Control Systems",
    "subtopic": "Compensators",
    "question": "What is the primary purpose of using a lag compensator?",
    "correct_answer": "To reduce steady-state error",
    "distractors": [
      "To reduce phase lead",
      "To increase overshoot",
      "To shift poles to the right"
    ],
    "context": "Lag compensators increase low-frequency gain, which helps in reducing steady-state errors in control systems.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Control Systems",
    "subtopic": "State-Space Analysis",
    "question": "Which of the following is a state variable in a state-space model?",
    "correct_answer": "A variable representing system dynamics",
    "distractors": [
      "Only the output variable",
      "A constant input to the system",
      "The transfer function of the system"
    ],
    "context": "State variables represent the internal condition of a system and are essential in modeling system dynamics in state-space representation.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Control Systems",
    "subtopic": "State-Space Analysis",
    "question": "In state-space analysis, what does the matrix A represent?",
    "correct_answer": "System dynamics (state matrix)",
    "distractors": [
      "Input-output gain",
      "Measurement noise",
      "Output matrix"
    ],
    "context": "The 'A' matrix in state-space modeling defines the relationship between state variables and system dynamics.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Frequency Domain Analysis",
    "subtopic": "Bode Plot",
    "question": "In a Bode magnitude plot, what is the slope of the asymptote for a simple pole at s = -a?",
    "correct_answer": "-20 dB/decade",
    "distractors": [
      "+20 dB/decade",
      "-40 dB/decade",
      "0 dB/decade"
    ],
    "context": "A simple pole contributes -20 dB/decade slope to the magnitude plot beyond its corner frequency. This is because the magnitude decreases as 1/ω for frequencies much greater than the pole frequency.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Frequency Domain Analysis",
    "subtopic": "Nyquist Plot",
    "question": "For a type-1 system with open-loop transfer function G(s)H(s) = K/[s(s+2)], the Nyquist plot starts from which point?",
    "correct_answer": "-90° on negative imaginary axis",
    "distractors": [
      "Origin (0,0)",
      "-180° on negative real axis",
      "+90° on positive imaginary axis"
    ],
    "context": "Type-1 systems have one pole at origin. As ω approaches 0+, the magnitude approaches infinity and phase approaches -90°, so the Nyquist plot starts from -90° on the negative imaginary axis.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Frequency Domain Analysis",
    "subtopic": "Gain Margin",
    "question": "The gain margin of a system is measured at which frequency?",
    "correct_answer": "Phase crossover frequency (where phase = -180°)",
    "distractors": [
      "Gain crossover frequency (where magnitude = 0 dB)",
      "Natural frequency",
      "Corner frequency"
    ],
    "context": "Gain margin is the additional gain that can be added before the system becomes unstable. It is measured at the phase crossover frequency where the phase is exactly -180°.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Stability",
    "subtopic": "Routh-Hurwitz Criterion",
    "question": "For the characteristic equation s³ + 4s² + 5s + K = 0, what is the range of K for system stability using Routh-Hurwitz?",
    "correct_answer": "0 < K < 20",
    "distractors": [
      "K > 20",
      "K < 0",
      "0 < K < 5"
    ],
    "context": "Using Routh array, the first column elements must be positive for stability. For s³ + 4s² + 5s + K = 0, the Routh array gives conditions: K > 0 and (20-K)/4 > 0, resulting in 0 < K < 20.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Stability",
    "subtopic": "Nyquist Stability Criterion",
    "question": "According to Nyquist stability criterion, for a stable closed-loop system, the number of encirclements of (-1,0) point should be:",
    "correct_answer": "Equal to number of open-loop poles in RHP",
    "distractors": [
      "Always zero",
      "Always positive",
      "Equal to number of open-loop zeros in RHP"
    ],
    "context": "Nyquist criterion states: Z = P - N, where Z is closed-loop poles in RHP, P is open-loop poles in RHP, N is encirclements of (-1,0). For stability Z = 0, so N = P.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Stability",
    "subtopic": "Root Locus",
    "question": "In root locus construction, the breakaway point occurs where:",
    "correct_answer": "dK/ds = 0",
    "distractors": [
      "K = 0",
      "K = ∞",
      "ds/dK = 0"
    ],
    "context": "Breakaway points on root locus are points where multiple roots coincide. They occur where the gain K has a local extremum, mathematically found by setting dK/ds = 0 in the characteristic equation.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "PID Controllers",
    "subtopic": "Proportional Control",
    "question": "What is the primary effect of increasing the proportional gain Kp in a PID controller?",
    "correct_answer": "Reduces steady-state error but may cause instability",
    "distractors": [
      "Eliminates steady-state error completely",
      "Increases settling time only",
      "Only affects derivative action"
    ],
    "context": "Proportional control reduces steady-state error by amplifying the error signal. Higher Kp reduces error but can make the system less stable, potentially causing oscillations or instability.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "PID Controllers",
    "subtopic": "Integral Control",
    "question": "The integral controller Ki/s in a PID system primarily helps to:",
    "correct_answer": "Eliminate steady-state error for step inputs",
    "distractors": [
      "Improve transient response speed",
      "Reduce overshoot only",
      "Increase system bandwidth"
    ],
    "context": "Integral control accumulates error over time and eliminates steady-state error for step inputs by providing infinite gain at DC (s=0). It ensures zero steady-state error for type-0 systems.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "PID Controllers",
    "subtopic": "Derivative Control",
    "question": "The derivative term Kds in PID control is effective for:",
    "correct_answer": "Improving transient response and reducing overshoot",
    "distractors": [
      "Eliminating steady-state error",
      "Increasing system gain",
      "Reducing bandwidth"
    ],
    "context": "Derivative control anticipates future error by responding to the rate of error change. It provides damping effect, reducing overshoot and improving transient response by adding phase lead.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Compensators and State-Space Analysis",
    "subtopic": "Lead Compensator",
    "question": "A lead compensator Gc(s) = (s+3)/(s+10) provides maximum phase lead at which frequency?",
    "correct_answer": "ω = √30 rad/sec",
    "distractors": [
      "ω = 3 rad/sec",
      "ω = 10 rad/sec",
      "ω = 6.5 rad/sec"
    ],
    "context": "For lead compensator (s+a)/(s+b) where b>a, maximum phase lead occurs at ωm = √(ab). Here a=3, b=10, so ωm = √(3×10) = √30 rad/sec.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Analog Communication",
    "subtopic": "Amplitude Modulation (AM)",
    "question": "In standard Amplitude Modulation (AM), what happens to the carrier frequency when the modulating signal changes its amplitude?",
    "correct_answer": "The carrier frequency remains constant.",
    "distractors": [
      "The carrier frequency changes proportionally.",
      "The carrier frequency shifts based on the modulating signal's phase.",
      "The carrier frequency disappears."
    ],
    "context": "In Amplitude Modulation (AM), the amplitude of the high-frequency carrier wave is varied in accordance with the instantaneous amplitude of the modulating (message) signal. Crucially, the frequency and phase of the carrier signal remain constant.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Analog Communication",
    "subtopic": "Frequency Modulation (FM)",
    "question": "What is the primary advantage of Frequency Modulation (FM) over Amplitude Modulation (AM) in terms of noise immunity?",
    "correct_answer": "FM is more immune to noise due to its constant amplitude.",
    "distractors": [
      "AM has better noise immunity at higher frequencies.",
      "FM requires less bandwidth, thus less noise.",
      "FM signals are completely unaffected by noise."
    ],
    "context": "Frequency Modulation (FM) keeps the amplitude of the carrier constant and varies its frequency according to the modulating signal. Since most common noise sources primarily affect the amplitude of a signal, FM exhibits superior noise immunity compared to AM, where noise directly adds to the varying amplitude.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Digital Communication",
    "subtopic": "Amplitude Shift Keying (ASK)",
    "question": "In Binary Amplitude Shift Keying (BASK), how are binary '1' and '0' typically represented?",
    "correct_answer": "Binary '1' by a carrier signal of specific amplitude, binary '0' by no carrier or zero amplitude.",
    "distractors": [
      "Binary '1' by a high frequency, binary '0' by a low frequency.",
      "Binary '1' by a specific phase shift, binary '0' by a different phase shift.",
      "Binary '1' by a continuous carrier, binary '0' by a pulsed carrier."
    ],
    "context": "Amplitude Shift Keying (ASK) is a digital modulation technique where the amplitude of the carrier wave is varied to represent binary data. In its simplest form (BASK or On-Off Keying), a '1' is represented by the presence of a carrier signal, and a '0' by the absence of a carrier (zero amplitude).",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Digital Communication",
    "subtopic": "Phase Shift Keying (PSK)",
    "question": "What is the advantage of Differential Phase Shift Keying (DPSK) over standard PSK regarding carrier phase recovery at the receiver?",
    "correct_answer": "DPSK does not require a coherent reference carrier at the receiver.",
    "distractors": [
      "DPSK transmits twice the data rate of PSK.",
      "DPSK is more immune to amplitude variations.",
      "DPSK achieves perfect synchronization automatically."
    ],
    "context": "Differential Phase Shift Keying (DPSK) encodes data by changing the phase of the carrier relative to the phase of the *previous* symbol, rather than an absolute reference phase. This eliminates the need for a complex coherent carrier recovery circuit at the receiver, simplifying the demodulation process.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Digital Communication",
    "subtopic": "Frequency Shift Keying (FSK)",
    "question": "In binary FSK (Frequency Shift Keying), how does the system distinguish between a binary '1' and a binary '0'?",
    "correct_answer": "By transmitting different carrier frequencies for each binary digit.",
    "distractors": [
      "By changing the amplitude of a single carrier frequency.",
      "By shifting the phase of a single carrier frequency.",
      "By varying the duration of the carrier signal."
    ],
    "context": "Frequency Shift Keying (FSK) is a digital modulation scheme where digital data is represented by changes in the frequency of a carrier wave. For binary FSK, typically one frequency ($f_1$) is used to represent a binary '1' and another frequency ($f_2$) to represent a binary '0'.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Information Theory",
    "subtopic": "Entropy",
    "question": "In information theory, what does the entropy of a discrete memoryless source represent?",
    "correct_answer": "The average amount of information (or uncertainty) per source symbol.",
    "distractors": [
      "The maximum data rate that can be transmitted over a channel.",
      "The redundancy present in the source data.",
      "The signal-to-noise ratio of a communication link."
    ],
    "context": "Entropy, denoted by H, is a fundamental concept in information theory. For a discrete memoryless source, it quantifies the average amount of information or uncertainty associated with each symbol generated by the source. Higher entropy implies more unpredictable and thus more informative symbols.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Information Theory",
    "subtopic": "Channel Capacity",
    "question": "According to Shannon's Channel Capacity theorem, what is the maximum theoretical data rate of a noisy channel, given its bandwidth (B) and Signal-to-Noise Ratio (SNR)?",
    "correct_answer": "$C = B \\log_2(1 + SNR)$ bits/second.",
    "distractors": [
      "$C = B \\cdot SNR$",
      "$C = B / SNR$",
      "$C = 2B$"
    ],
    "context": "Shannon's Channel Capacity theorem, also known as Shannon-Hartley theorem, provides the theoretical upper bound on the data rate that can be reliably transmitted over a communication channel with a given bandwidth (B) and a given signal-to-noise ratio (SNR). The formula is $C = B \\log_2(1 + SNR)$.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Analog Communication",
    "subtopic": "Amplitude Modulation (AM)",
    "question": "What is the modulation index of an AM signal defined as?",
    "correct_answer": "Ratio of the amplitude of the message signal to the carrier signal",
    "distractors": [
      "Ratio of the carrier frequency to the message frequency",
      "Ratio of the carrier amplitude to the sideband amplitude",
      "Difference between the carrier and message frequencies"
    ],
    "context": "In amplitude modulation (AM), the modulation index is the ratio of the message signal amplitude to the carrier signal amplitude, determining the extent of modulation.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Analog Communication",
    "subtopic": "Frequency Modulation (FM)",
    "question": "What is the primary advantage of FM over AM?",
    "correct_answer": "Better noise immunity",
    "distractors": [
      "Higher bandwidth efficiency",
      "Simpler receiver design",
      "Lower power consumption"
    ],
    "context": "Frequency modulation (FM) encodes information in the carrier frequency, providing better noise immunity compared to AM, especially in noisy environments.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Analog Communication",
    "subtopic": "Phase Modulation (PM)",
    "question": "How is the phase of the carrier signal modified in phase modulation (PM)?",
    "correct_answer": "Proportional to the message signal amplitude",
    "distractors": [
      "Proportional to the message signal frequency",
      "Inversely proportional to the carrier amplitude",
      "Constant regardless of the message signal"
    ],
    "context": "In phase modulation (PM), the phase of the carrier signal varies linearly with the amplitude of the message signal, encoding the information in phase shifts.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Digital Communication",
    "subtopic": "Amplitude Shift Keying (ASK)",
    "question": "What is the primary characteristic of an ASK signal?",
    "correct_answer": "Carrier amplitude varies with digital data",
    "distractors": [
      "Carrier frequency varies with digital data",
      "Carrier phase varies with digital data",
      "Carrier duty cycle varies with digital data"
    ],
    "context": "In amplitude shift keying (ASK), the amplitude of the carrier signal is varied according to the digital data, while frequency and phase remain constant.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Digital Communication",
    "subtopic": "Phase Shift Keying (PSK)",
    "question": "What is the advantage of binary PSK (BPSK) over binary ASK in digital communication?",
    "correct_answer": "Better noise immunity due to phase changes",
    "distractors": [
      "Lower bandwidth requirement",
      "Simpler modulation circuit",
      "Higher data rate"
    ],
    "context": "Binary phase shift keying (BPSK) modulates the carrier phase between two values, offering better noise immunity than ASK because phase changes are less affected by amplitude noise.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Digital Communication",
    "subtopic": "Frequency Shift Keying (FSK)",
    "question": "What is the bandwidth requirement of a binary FSK system compared to a binary PSK system?",
    "correct_answer": "Higher due to multiple carrier frequencies",
    "distractors": [
      "Lower due to simpler modulation",
      "Equal to PSK bandwidth",
      "Independent of carrier frequencies"
    ],
    "context": "In frequency shift keying (FSK), the carrier frequency switches between two values, requiring a larger bandwidth than PSK due to the frequency separation needed for reliable detection.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Information Theory",
    "subtopic": "Entropy",
    "question": "What does the entropy of a discrete source measure in information theory?",
    "correct_answer": "Average uncertainty or information content per symbol",
    "distractors": [
      "Maximum channel capacity",
      "Total number of symbols in the source",
      "Signal-to-noise ratio of the channel"
    ],
    "context": "Entropy, denoted H(X), quantifies the average uncertainty or information content per symbol in a discrete source, measured in bits per symbol for a binary system.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Information Theory",
    "subtopic": "Channel Capacity",
    "question": "What is the Shannon channel capacity formula for a band-limited AWGN channel?",
    "correct_answer": "C = B * log2(1 + S/N)",
    "distractors": [
      "C = B * (S/N)",
      "C = log2(B * S/N)",
      "C = B / (1 + S/N)"
    ],
    "context": "Shannon’s channel capacity formula, C = B * log2(1 + S/N), gives the maximum data rate for reliable communication over a band-limited additive white Gaussian noise (AWGN) channel, where B is bandwidth and S/N is the signal-to-noise ratio.",
    "difficulty": "advanced",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Information Theory",
    "subtopic": "Entropy of Binary Source",
    "question": "What is the entropy of a binary source with equal probabilities (p = 0.5) for both outcomes?",
    "correct_answer": "1 bit",
    "distractors": [
      "0 bits",
      "0.5 bits",
      "2 bits"
    ],
    "context": "For a binary source with equal probabilities (p = 0.5), the entropy is H = -[0.5*log2(0.5) + 0.5*log2(0.5)] = 1 bit, representing maximum uncertainty for a binary system.",
    "difficulty": "advanced",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Analog Communication",
    "subtopic": "AM Power Efficiency",
    "question": "What is the maximum power efficiency of a standard AM signal with 100% modulation?",
    "correct_answer": "33.33%",
    "distractors": [
      "50%",
      "25%",
      "100%"
    ],
    "context": "In standard AM with 100% modulation, the maximum power efficiency is 33.33%, as the sidebands carry one-third of the total power, with the rest in the carrier.",
    "difficulty": "advanced",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Communication Systems",
    "subtopic": "Analog Communication",
    "question": "Which parameter remains constant in Amplitude Modulation (AM)?",
    "correct_answer": "Frequency of the carrier signal",
    "distractors": [
      "Amplitude of the carrier signal",
      "Phase of the carrier signal",
      "Bandwidth of the message signal"
    ],
    "context": "In AM, the frequency and phase of the carrier wave remain unchanged while its amplitude varies in proportion to the message signal.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Communication Systems",
    "subtopic": "Analog Communication",
    "question": "What is the major advantage of Frequency Modulation (FM) over Amplitude Modulation (AM)?",
    "correct_answer": "Better noise immunity",
    "distractors": [
      "Lower bandwidth requirement",
      "Simpler demodulation circuit",
      "Lower transmission power"
    ],
    "context": "FM provides greater noise immunity than AM, making it preferable for high-fidelity transmission in communication systems.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Communication Systems",
    "subtopic": "Digital Communication",
    "question": "In Frequency Shift Keying (FSK), which signal property is varied to represent digital data?",
    "correct_answer": "Frequency of the carrier signal",
    "distractors": [
      "Amplitude of the signal",
      "Phase of the signal",
      "Bit rate of the data"
    ],
    "context": "FSK is a digital modulation scheme in which the frequency of the carrier signal changes to represent binary data values.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Communication Systems",
    "subtopic": "Digital Communication",
    "question": "Which digital modulation technique shifts the phase of the carrier signal to represent binary data?",
    "correct_answer": "Phase Shift Keying (PSK)",
    "distractors": [
      "Amplitude Shift Keying (ASK)",
      "Frequency Shift Keying (FSK)",
      "Time Division Multiplexing (TDM)"
    ],
    "context": "In PSK, the phase of the carrier signal is varied in accordance with the digital input data.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Communication Systems",
    "subtopic": "Information Theory",
    "question": "In information theory, what does entropy measure?",
    "correct_answer": "Average amount of information per symbol",
    "distractors": [
      "Bandwidth efficiency",
      "Signal-to-noise ratio",
      "Transmission power"
    ],
    "context": "Entropy quantifies the uncertainty or information content of a source and is measured in bits per symbol.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Communication Systems",
    "subtopic": "Information Theory",
    "question": "What does Shannon's channel capacity theorem define?",
    "correct_answer": "Maximum data rate of error-free transmission over a noisy channel",
    "distractors": [
      "Minimum bandwidth needed for transmission",
      "Ideal signal-to-noise ratio",
      "Maximum modulation index"
    ],
    "context": "Shannon’s theorem establishes the theoretical upper limit on the rate at which data can be transmitted with zero error over a noisy communication channel.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Communication Systems",
    "subtopic": "Digital Communication",
    "question": "Which modulation scheme is least susceptible to amplitude noise?",
    "correct_answer": "Phase Shift Keying (PSK)",
    "distractors": [
      "Amplitude Shift Keying (ASK)",
      "Frequency Shift Keying (FSK)",
      "Quadrature Amplitude Modulation (QAM)"
    ],
    "context": "PSK is more robust against amplitude noise since it encodes data in the phase of the signal, not its amplitude.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Analog Communication",
    "subtopic": "Amplitude Modulation",
    "question": "In AM modulation, if the modulation index is 0.8 and carrier power is 100W, what is the total transmitted power?",
    "correct_answer": "132W",
    "distractors": [
      "180W",
      "164W",
      "100W"
    ],
    "context": "For AM, total power PT = PC(1 + μ²/2), where PC is carrier power and μ is modulation index. With PC = 100W and μ = 0.8: PT = 100(1 + 0.64/2) = 100(1.32) = 132W.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Analog Communication",
    "subtopic": "Frequency Modulation",
    "question": "What is the primary advantage of FM over AM in terms of noise performance?",
    "correct_answer": "Better noise immunity due to constant amplitude",
    "distractors": [
      "Lower bandwidth requirement",
      "Simpler receiver design",
      "Higher transmission efficiency"
    ],
    "context": "FM signals have constant amplitude, making them immune to amplitude variations caused by noise. The information is carried in frequency variations, so amplitude noise can be easily removed by limiters in FM receivers.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Analog Communication",
    "subtopic": "Phase Modulation",
    "question": "For a PM signal with phase deviation constant kp = 2 rad/V and message signal m(t) = 3cos(2πfmt), what is the maximum phase deviation?",
    "correct_answer": "6 radians",
    "distractors": [
      "2 radians",
      "3 radians",
      "12 radians"
    ],
    "context": "In PM, instantaneous phase φ(t) = kp × m(t). Maximum phase deviation occurs when m(t) is maximum. Here, max|m(t)| = 3V, so maximum phase deviation = kp × 3 = 2 × 3 = 6 radians.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Digital Communication",
    "subtopic": "Amplitude Shift Keying",
    "question": "In binary ASK with bit rate 1000 bps, what is the minimum bandwidth required using rectangular pulses?",
    "correct_answer": "1000 Hz",
    "distractors": [
      "500 Hz",
      "2000 Hz",
      "1500 Hz"
    ],
    "context": "For binary ASK with rectangular pulses, the minimum bandwidth equals the bit rate. This is because the main lobe of sinc function spectrum extends from 0 to Rb Hz, where Rb is the bit rate.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Digital Communication",
    "subtopic": "Phase Shift Keying",
    "question": "What is the probability of bit error for coherent BPSK in AWGN channel with Eb/N0 = 10 dB?",
    "correct_answer": "Q(√20) ≈ 2.87 × 10⁻⁶",
    "distractors": [
      "Q(√10) ≈ 7.83 × 10⁻⁴",
      "Q(√5) ≈ 1.35 × 10⁻²",
      "0.5 × Q(√10) ≈ 3.9 × 10⁻⁴"
    ],
    "context": "For coherent BPSK, BER = Q(√(2Eb/N0)). With Eb/N0 = 10 dB = 10 (linear), BER = Q(√20) = Q(4.47) ≈ 2.87 × 10⁻⁶, where Q is the complementary error function.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Digital Communication",
    "subtopic": "Frequency Shift Keying",
    "question": "In binary FSK, if the two frequencies are f1 = 1000 Hz and f2 = 1200 Hz, what type of FSK is this?",
    "correct_answer": "Non-coherent FSK with frequency separation 200 Hz",
    "distractors": [
      "Coherent FSK with orthogonal signals",
      "Minimum shift keying (MSK)",
      "Continuous phase FSK (CPFSK)"
    ],
    "context": "The frequency separation is |f2 - f1| = 200 Hz. For orthogonal FSK, minimum separation should be 1/T (where T is bit duration). This appears to be conventional non-coherent FSK with 200 Hz separation.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Information Theory",
    "subtopic": "Shannon Entropy",
    "question": "A binary source produces symbols with probabilities P(0) = 0.25 and P(1) = 0.75. What is the entropy of this source?",
    "correct_answer": "0.811 bits/symbol",
    "distractors": [
      "1.0 bits/symbol",
      "0.75 bits/symbol",
      "0.5 bits/symbol"
    ],
    "context": "Shannon entropy H = -Σ P(xi)log2P(xi). Here H = -[0.25×log2(0.25) + 0.75×log2(0.75)] = -[0.25×(-2) + 0.75×(-0.415)] = 0.5 + 0.311 = 0.811 bits/symbol.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Error Detection and Correction",
    "subtopic": "Parity Check",
    "question": "What is the primary limitation of using a simple parity check code for error detection?",
    "correct_answer": "It can only detect an odd number of errors.",
    "distractors": [
      "It requires very complex decoding circuits.",
      "It cannot detect any errors at all.",
      "It is inefficient in terms of bandwidth usage."
    ],
    "context": "A simple parity check adds one bit to a block of data to make the total number of '1's either even or odd. While effective for detecting single-bit errors, it fails to detect an even number of bit errors within the same block, as the parity bit would remain unchanged.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Error Detection and Correction",
    "subtopic": "Cyclic Redundancy Check (CRC)",
    "question": "Which mathematical operation is fundamental to the generation and verification of Cyclic Redundancy Check (CRC) codes?",
    "correct_answer": "Polynomial division in GF(2).",
    "distractors": [
      "Matrix multiplication.",
      "Fourier transformation.",
      "Modulo addition."
    ],
    "context": "CRC (Cyclic Redundancy Check) codes are powerful error-detecting codes widely used in digital networks. Their generation and verification rely on binary polynomial division over the Galois field GF(2), where arithmetic operations are performed modulo 2 (without carries).",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Modulation and Demodulation Techniques",
    "subtopic": "Coherent vs. Non-Coherent Detection",
    "question": "What is the primary requirement for coherent demodulation techniques that is NOT necessary for non-coherent demodulation?",
    "correct_answer": "A local oscillator synchronized in phase and frequency with the received carrier.",
    "distractors": [
      "A high signal-to-noise ratio (SNR).",
      "A low pass filter at the output.",
      "Knowledge of the symbol timing."
    ],
    "context": "Coherent demodulation requires the receiver to generate a local carrier signal that is precisely synchronized in both phase and frequency with the incoming carrier. This allows for optimal detection but adds complexity. Non-coherent demodulation avoids this strict synchronization requirement, simplifying the receiver design but often at the cost of performance.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Modulation and Demodulation Techniques",
    "subtopic": "QAM (Quadrature Amplitude Modulation)",
    "question": "How does Quadrature Amplitude Modulation (QAM) achieve higher spectral efficiency compared to simple ASK or PSK?",
    "correct_answer": "By varying both the amplitude and phase of the carrier simultaneously.",
    "distractors": [
      "By using multiple carrier frequencies.",
      "By increasing the symbol duration.",
      "By employing error correction codes."
    ],
    "context": "QAM (Quadrature Amplitude Modulation) is a spectrally efficient modulation technique that transmits data by varying both the amplitude and the phase of the carrier signal. This allows for a larger number of unique symbol states (e.g., 16-QAM, 64-QAM) within the same bandwidth, thereby increasing the data rate.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Pulse Modulation",
    "subtopic": "Pulse Amplitude Modulation (PAM)",
    "question": "In Pulse Amplitude Modulation (PAM), what characteristic of the pulse train is varied to represent the instantaneous amplitude of the analog signal?",
    "correct_answer": "The amplitude of the pulses.",
    "distractors": [
      "The width of the pulses.",
      "The position of the pulses.",
      "The frequency of the pulses."
    ],
    "context": "Pulse Amplitude Modulation (PAM) is a basic form of pulse modulation where the amplitude of regularly spaced pulses is made proportional to the instantaneous amplitude of the analog message signal. This is a fundamental step towards digital modulation schemes.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Pulse Modulation",
    "subtopic": "Pulse Code Modulation (PCM)",
    "question": "What are the three main processes involved in converting an analog signal into a digital signal using Pulse Code Modulation (PCM)?",
    "correct_answer": "Sampling, Quantization, and Encoding.",
    "distractors": [
      "Modulation, Demodulation, and Filtering.",
      "Amplification, Rectification, and Smoothing.",
      "Multiplexing, Spreading, and Decoding."
    ],
    "context": "Pulse Code Modulation (PCM) is the most common method for converting analog signals into digital form. The three key steps are: 1. Sampling (converting continuous time to discrete time), 2. Quantization (converting continuous amplitude to discrete amplitude levels), and 3. Encoding (assigning binary codes to the quantized levels).",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Probability & Random Processes in Communication",
    "subtopic": "Probability Density Function (PDF)",
    "question": "For a continuous random variable X, what does its Probability Density Function ($f_X(x)$) represent?",
    "correct_answer": "The relative likelihood for the random variable to take on a given value.",
    "distractors": [
      "The probability that the random variable is less than or equal to a given value.",
      "The average value of the random variable.",
      "The spread or dispersion of the random variable."
    ],
    "context": "The Probability Density Function (PDF) is a function whose value at any given sample (or point) in the sample space can be interpreted as providing a relative likelihood that the value of the random variable would be equal to that sample. The integral of the PDF over a range gives the probability that the random variable falls within that range.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Probability & Random Processes in Communication",
    "subtopic": "Expected Value",
    "question": "What does the expected value (or mean) of a discrete random variable signify?",
    "correct_answer": "The long-run average of the random variable if the experiment is repeated many times.",
    "distractors": [
      "The most frequent value the random variable can take.",
      "The maximum value the random variable can attain.",
      "The probability of the random variable occurring."
    ],
    "context": "The expected value, or mean ($E[X]$), of a random variable is a measure of its central tendency. It represents the average value of the random variable over a very large number of trials or observations.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Pulse Modulation",
    "subtopic": "Delta Modulation (DM)",
    "question": "What is the primary advantage of Delta Modulation (DM) over standard PCM in terms of complexity?",
    "correct_answer": "DM is simpler to implement due to its 1-bit quantization.",
    "distractors": [
      "DM offers better signal-to-noise ratio for all signals.",
      "DM eliminates the need for sampling.",
      "DM has a higher bandwidth efficiency."
    ],
    "context": "Delta Modulation (DM) is a simpler form of PCM where only a single bit is transmitted per sample, indicating whether the current sample is higher or lower than the previous reconstructed sample. This 1-bit quantization significantly reduces the complexity of the encoder and decoder compared to multi-bit PCM, although it can suffer from slope overload and granular noise.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Error Detection and Correction",
    "subtopic": "Hamming Codes",
    "question": "What is the minimum number of parity bits required for a Hamming code to correct all single-bit errors in a data block of 4 bits?",
    "correct_answer": "3 parity bits.",
    "distractors": [
      "1 parity bit.",
      "2 parity bits.",
      "4 parity bits."
    ],
    "context": "Hamming codes are a class of linear error-correcting codes capable of detecting up to two simultaneous bit errors and correcting single-bit errors. The relationship between data bits (k) and parity bits (m) is $2^m \\ge k + m + 1$. For k=4 data bits, $2^m \\ge 4 + m + 1 \\implies 2^m \\ge m + 5$. If m=2, $4 \\ge 7$ (false); if m=3, $8 \\ge 8$ (true). So, 3 parity bits are required.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Error Detection and Correction",
    "subtopic": "Parity Check",
    "question": "What is the primary purpose of a parity bit in error detection?",
    "correct_answer": "To detect single-bit errors in a data word",
    "distractors": [
      "To correct single-bit errors",
      "To detect multiple-bit errors",
      "To increase data transmission speed"
    ],
    "context": "A parity bit is added to a data word to make the total number of 1s either even or odd, enabling the detection of single-bit errors during transmission.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Error Detection and Correction",
    "subtopic": "Hamming Code",
    "question": "What is the minimum Hamming distance required to correct single-bit errors in a code?",
    "correct_answer": "3",
    "distractors": [
      "1",
      "2",
      "4"
    ],
    "context": "The Hamming distance of a code must be at least 3 to correct single-bit errors, as it allows the detection and correction of one error per codeword.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Modulation and Demodulation Techniques",
    "subtopic": "Amplitude Modulation (AM)",
    "question": "What is the primary function of a coherent detector in AM demodulation?",
    "correct_answer": "To extract the message signal using a synchronized carrier",
    "distractors": [
      "To amplify the carrier signal",
      "To filter out the message signal",
      "To convert the signal to digital form"
    ],
    "context": "In AM demodulation, a coherent detector multiplies the received signal with a carrier synchronized in phase and frequency to recover the original message signal.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Modulation and Demodulation Techniques",
    "subtopic": "Frequency Modulation (FM)",
    "question": "What component is typically used in an FM demodulator to convert frequency variations to amplitude variations?",
    "correct_answer": "Discriminator",
    "distractors": [
      "Mixer",
      "Amplifier",
      "Low-pass filter"
    ],
    "context": "In FM demodulation, a discriminator converts the frequency variations of the FM signal into amplitude variations, which are then processed to recover the message signal.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Pulse Modulation",
    "subtopic": "Pulse Amplitude Modulation (PAM)",
    "question": "What is the primary characteristic of a PAM signal?",
    "correct_answer": "Amplitude of pulses varies with the message signal",
    "distractors": [
      "Frequency of pulses varies with the message signal",
      "Width of pulses varies with the message signal",
      "Position of pulses varies with the message signal"
    ],
    "context": "In pulse amplitude modulation (PAM), the amplitude of uniformly spaced pulses is varied in proportion to the message signal’s amplitude.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Pulse Modulation",
    "subtopic": "Pulse Code Modulation (PCM)",
    "question": "What is the main advantage of PCM over analog modulation techniques?",
    "correct_answer": "Robustness to noise and distortion",
    "distractors": [
      "Lower bandwidth requirement",
      "Simpler modulation process",
      "Higher power efficiency"
    ],
    "context": "Pulse code modulation (PCM) converts analog signals to digital form, offering robustness to noise and distortion due to its binary representation, at the cost of increased bandwidth.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Pulse Modulation",
    "subtopic": "Delta Modulation (DM)",
    "question": "What is the primary limitation of delta modulation compared to PCM?",
    "correct_answer": "Slope overload distortion at high signal variations",
    "distractors": [
      "Higher bandwidth requirement",
      "Lower signal-to-noise ratio",
      "Inability to transmit digital signals"
    ],
    "context": "Delta modulation (DM) approximates the signal with a staircase function, but rapid signal changes can cause slope overload distortion, limiting its performance compared to PCM.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Probability & Random Processes",
    "subtopic": "Gaussian Random Variable",
    "question": "What is the probability density function (PDF) shape of a Gaussian random variable?",
    "correct_answer": "Bell-shaped curve",
    "distractors": [
      "Uniform distribution",
      "Exponential decay",
      "Triangular distribution"
    ],
    "context": "A Gaussian random variable has a bell-shaped PDF, characterized by its mean and variance, commonly used to model noise in communication systems.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Probability & Random Processes",
    "subtopic": "Power Spectral Density",
    "question": "What does the power spectral density (PSD) of a random process describe?",
    "correct_answer": "Power distribution across frequencies",
    "distractors": [
      "Amplitude distribution in the time domain",
      "Probability distribution of the signal",
      "Energy content of the signal"
    ],
    "context": "The power spectral density (PSD) of a random process quantifies how the power of the signal is distributed across different frequencies, crucial for analyzing noise in communication systems.",
    "difficulty": "advanced",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Probability & Random Processes",
    "subtopic": "Bit Error Rate",
    "question": "What is the bit error rate (BER) in a digital communication system primarily dependent on?",
    "correct_answer": "Signal-to-noise ratio (SNR)",
    "distractors": [
      "Carrier frequency",
      "Modulation index",
      "Sampling rate"
    ],
    "context": "The bit error rate (BER) in a digital communication system is primarily influenced by the signal-to-noise ratio (SNR), with higher SNR typically reducing the probability of bit errors.",
    "difficulty": "advanced",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Communication Systems",
    "subtopic": "Error Detection and Correction",
    "question": "Which of the following techniques is used for single-bit error detection in data transmission?",
    "correct_answer": "Parity check",
    "distractors": [
      "Hamming code",
      "CRC",
      "Reed-Solomon code"
    ],
    "context": "A parity check is a basic error detection method that identifies single-bit errors by adding a parity bit to the data stream.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Communication Systems",
    "subtopic": "Error Detection and Correction",
    "question": "Which error correction code can detect and correct single-bit errors?",
    "correct_answer": "Hamming code",
    "distractors": [
      "Parity check",
      "Block code",
      "Stop-and-wait ARQ"
    ],
    "context": "Hamming codes are widely used error-correcting codes that detect and correct single-bit errors in transmitted data.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Communication Systems",
    "subtopic": "Modulation and Demodulation Techniques",
    "question": "What is the main purpose of modulation in communication systems?",
    "correct_answer": "To shift the signal to a higher frequency for transmission",
    "distractors": [
      "To reduce signal bandwidth",
      "To encrypt the signal",
      "To amplify the signal"
    ],
    "context": "Modulation is used to convert baseband signals to higher-frequency signals suitable for long-distance transmission.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Communication Systems",
    "subtopic": "Modulation and Demodulation Techniques",
    "question": "Which demodulation technique is used to recover a signal modulated using AM?",
    "correct_answer": "Envelope detector",
    "distractors": [
      "PLL circuit",
      "Slope detector",
      "Zero crossing detector"
    ],
    "context": "An envelope detector is a simple circuit used to demodulate amplitude-modulated signals by following their envelope.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Communication Systems",
    "subtopic": "Pulse Modulation",
    "question": "Which pulse modulation technique converts analog signals into binary format?",
    "correct_answer": "Pulse Code Modulation (PCM)",
    "distractors": [
      "Pulse Amplitude Modulation (PAM)",
      "Delta Modulation (DM)",
      "Time Division Multiplexing (TDM)"
    ],
    "context": "PCM is a digital scheme that encodes analog signals into a series of binary values using sampling and quantization.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Communication Systems",
    "subtopic": "Pulse Modulation",
    "question": "What is the key difference between PCM and DM in pulse modulation?",
    "correct_answer": "DM transmits the difference between successive samples",
    "distractors": [
      "PCM has better noise immunity",
      "PCM uses analog signals",
      "DM uses frequency modulation"
    ],
    "context": "Delta Modulation transmits only the difference between successive signal samples, reducing bit requirements compared to PCM.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Communication Systems",
    "subtopic": "Pulse Modulation",
    "question": "Which modulation technique samples the amplitude of the analog signal at regular intervals?",
    "correct_answer": "Pulse Amplitude Modulation (PAM)",
    "distractors": [
      "Pulse Width Modulation",
      "Pulse Code Modulation",
      "Delta Modulation"
    ],
    "context": "PAM is an analog modulation method where the signal’s amplitude is sampled at regular intervals and transmitted as pulses.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Communication Systems",
    "subtopic": "Probability & Random Processes",
    "question": "In communication systems, what does a random process represent?",
    "correct_answer": "A sequence of random variables indexed by time",
    "distractors": [
      "A deterministic signal transformation",
      "An ideal noise-free signal",
      "A set of constant variables"
    ],
    "context": "Random processes model unpredictable signals like noise or input patterns in a communication system.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Communication Systems",
    "subtopic": "Probability & Random Processes",
    "question": "What is the probability density function (PDF) used for in communication theory?",
    "correct_answer": "To describe the likelihood of a continuous random variable",
    "distractors": [
      "To determine sampling rate",
      "To perform signal modulation",
      "To encode the transmitted signal"
    ],
    "context": "PDF gives the probability of a random variable taking values within a continuous range, essential in analyzing noise and signals.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Communication Systems",
    "subtopic": "Probability & Random Processes",
    "question": "What property defines a stationary random process?",
    "correct_answer": "Statistical properties remain constant over time",
    "distractors": [
      "It only contains discrete signals",
      "It has a high bandwidth",
      "It must be Gaussian"
    ],
    "context": "Stationary random processes have time-invariant statistical properties, which simplify analysis in signal processing.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Error Detection and Correction",
    "subtopic": "Hamming Code",
    "question": "For a (7,4) Hamming code, how many parity bits are required to detect and correct single-bit errors in a 4-bit data word?",
    "correct_answer": "3 parity bits",
    "distractors": [
      "2 parity bits",
      "4 parity bits",
      "1 parity bit"
    ],
    "context": "In (7,4) Hamming code, 7 represents total bits and 4 represents data bits. Number of parity bits = 7-4 = 3. The relationship 2^r ≥ n+r+1 gives minimum parity bits r, where n=4 data bits requires r=3 parity bits.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Error Detection and Correction",
    "subtopic": "Cyclic Redundancy Check",
    "question": "If a generator polynomial G(x) = x³ + x + 1 is used for CRC, what is the length of the CRC remainder?",
    "correct_answer": "3 bits",
    "distractors": [
      "4 bits",
      "2 bits",
      "1 bit"
    ],
    "context": "The length of CRC remainder equals the degree of generator polynomial. Since G(x) = x³ + x + 1 has degree 3, the CRC remainder will be 3 bits long. This remainder is appended to the data for error detection.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Error Detection and Correction",
    "subtopic": "Reed-Solomon Code",
    "question": "A Reed-Solomon (255, 223) code can correct how many symbol errors?",
    "correct_answer": "16 symbol errors",
    "distractors": [
      "32 symbol errors",
      "8 symbol errors",
      "223 symbol errors"
    ],
    "context": "For Reed-Solomon (n,k) code, number of correctable symbol errors t = (n-k)/2. Here, t = (255-223)/2 = 32/2 = 16 symbol errors. Each symbol is typically 8 bits in RS codes.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Modulation and Demodulation Techniques",
    "subtopic": "Quadrature Amplitude Modulation",
    "question": "In 16-QAM modulation, how many bits are transmitted per symbol?",
    "correct_answer": "4 bits per symbol",
    "distractors": [
      "2 bits per symbol",
      "8 bits per symbol",
      "16 bits per symbol"
    ],
    "context": "In M-QAM, each symbol carries log₂(M) bits. For 16-QAM, each symbol represents log₂(16) = 4 bits. The 16 constellation points are arranged in a 4×4 grid with different amplitude and phase combinations.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Modulation and Demodulation Techniques",
    "subtopic": "Coherent Detection",
    "question": "What is the main requirement for coherent detection in digital communication systems?",
    "correct_answer": "Phase synchronization between transmitter and receiver",
    "distractors": [
      "Amplitude synchronization only",
      "Frequency offset compensation",
      "Symbol timing recovery only"
    ],
    "context": "Coherent detection requires exact phase reference at the receiver that matches the transmitted carrier phase. This phase synchronization is critical for optimal demodulation and achieving minimum bit error rates in systems like BPSK and QPSK.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Modulation and Demodulation Techniques",
    "subtopic": "Envelope Detection",
    "question": "For envelope detection of AM signals to work properly, the modulation index must satisfy which condition?",
    "correct_answer": "μ ≤ 1 (100% modulation or less)",
    "distractors": [
      "μ > 1 (overmodulation allowed)",
      "μ = 0 (no modulation)",
      "μ ≥ 2 (deep modulation required)"
    ],
    "context": "Envelope detection requires μ ≤ 1 to avoid envelope distortion. When μ > 1 (overmodulation), the envelope doesn't faithfully represent the message signal, causing distortion that simple envelope detectors cannot handle properly.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Pulse Modulation",
    "subtopic": "Pulse Amplitude Modulation",
    "question": "In natural sampling PAM, what determines the amplitude of each pulse?",
    "correct_answer": "Instantaneous value of analog signal at sampling instant",
    "distractors": [
      "Average value of analog signal over sampling period",
      "Peak value of analog signal",
      "RMS value of analog signal"
    ],
    "context": "In natural sampling PAM, each pulse amplitude equals the instantaneous amplitude of the analog signal at the precise sampling time. This creates a discrete-time, continuous-amplitude representation of the original signal.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Pulse Modulation",
    "subtopic": "Pulse Code Modulation",
    "question": "For a PCM system with 8-bit quantization and sampling rate of 8 kHz, what is the bit rate?",
    "correct_answer": "64 kbps",
    "distractors": [
      "8 kbps",
      "32 kbps",
      "128 kbps"
    ],
    "context": "PCM bit rate = (number of bits per sample) × (sampling rate). Here, bit rate = 8 bits/sample × 8000 samples/sec = 64,000 bps = 64 kbps. This is the standard rate for telephone quality voice transmission.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Pulse Modulation",
    "subtopic": "Delta Modulation",
    "question": "What is the main cause of slope overload distortion in delta modulation?",
    "correct_answer": "Input signal slope exceeds maximum trackable slope",
    "distractors": [
      "Quantization noise in flat regions",
      "Insufficient sampling rate",
      "Large step size selection"
    ],
    "context": "Slope overload occurs when the input signal changes faster than the delta modulator can track. The maximum trackable slope is Δ×fs, where Δ is step size and fs is sampling frequency. When input slope exceeds this, distortion occurs.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Probability & Random Processes in Communication",
    "subtopic": "Gaussian Random Process",
    "question": "For a zero-mean Gaussian random process with variance σ², what is the probability that a sample exceeds 2σ?",
    "correct_answer": "Approximately 0.0228 or 2.28%",
    "distractors": [
      "Approximately 0.05 or 5%",
      "Approximately 0.1587 or 15.87%",
      "Exactly 0.25 or 25%"
    ],
    "context": "For zero-mean Gaussian with variance σ², P(X > 2σ) = Q(2), where Q is the complementary error function. Q(2) ≈ 0.0228, meaning about 2.28% probability of exceeding 2 standard deviations.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Vector Calculus",
    "subtopic": "Divergence",
    "question": "What physical quantity does the divergence of an electric field ($\\nabla \\cdot \\vec{E}$) represent at a given point in space?",
    "correct_answer": "The volume charge density.",
    "distractors": [
      "The circulation of the electric field.",
      "The rate of change of electric potential.",
      "The current density."
    ],
    "context": "In electromagnetics, the divergence of an electric field is directly related to the charge enclosed by a surface. According to Gauss's Law in differential form (one of Maxwell's equations), $\\nabla \\cdot \\vec{D} = \\rho_v$, where $\\vec{D} = \\epsilon \\vec{E}$ and $\\rho_v$ is the volume charge density. Therefore, $\\nabla \\cdot \\vec{E} = \\rho_v / \\epsilon$.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Vector Calculus",
    "subtopic": "Curl",
    "question": "If the curl of a vector field ($\\nabla \\times \\vec{F}$) is zero, what can be concluded about the field?",
    "correct_answer": "The field is conservative (irrotational).",
    "distractors": [
      "The field is solenoidal.",
      "The field is uniform.",
      "The field has zero divergence."
    ],
    "context": "The curl of a vector field measures its rotational tendency. If the curl is zero, it implies that the field is irrotational, or conservative. This means that the line integral of the field between any two points is independent of the path taken, and the work done around a closed loop is zero.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Electrostatics and Magnetostatics",
    "subtopic": "Coulomb's Law",
    "question": "According to Coulomb's Law, how does the electrostatic force between two point charges vary with the distance between them?",
    "correct_answer": "Inversely proportional to the square of the distance.",
    "distractors": [
      "Directly proportional to the distance.",
      "Inversely proportional to the distance.",
      "Directly proportional to the square of the distance."
    ],
    "context": "Coulomb's Law is a fundamental principle in electrostatics that quantifies the force between two stationary, electrically charged particles. The force is directly proportional to the product of the magnitudes of the charges and inversely proportional to the square of the distance between them.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Electrostatics and Magnetostatics",
    "subtopic": "Ampere's Circuital Law",
    "question": "In magnetostatics, Ampere's Circuital Law in integral form relates the line integral of the magnetic field intensity ($\\vec{H}$) around a closed path to which quantity?",
    "correct_answer": "The total current enclosed by the path.",
    "distractors": [
      "The magnetic flux density.",
      "The electric field intensity.",
      "The magnetic vector potential."
    ],
    "context": "Ampere's Circuital Law is a fundamental law in magnetostatics. It states that the line integral of the magnetic field intensity ($\\vec{H}$) around any closed path is equal to the total current ($I_{enc}$) enclosed by that path, i.e., $\\oint \\vec{H} \\cdot d\\vec{l} = I_{enc}$.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Maxwell's Equations",
    "subtopic": "Faraday's Law of Induction",
    "question": "Which of Maxwell's equations describes the relationship between a time-varying magnetic field and the induced electric field?",
    "correct_answer": "Faraday's Law of Induction.",
    "distractors": [
      "Gauss's Law for Electric Fields.",
      "Ampere's Law with Maxwell's addition.",
      "Gauss's Law for Magnetic Fields."
    ],
    "context": "Faraday's Law of Induction, one of Maxwell's equations, states that a time-varying magnetic flux through a surface induces a circulating electric field around the boundary of that surface. Mathematically, it is expressed as $\\nabla \\times \\vec{E} = -\\frac{\\partial \\vec{B}}{\\partial t}$.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Maxwell's Equations",
    "subtopic": "Displacement Current",
    "question": "What term did Maxwell add to Ampere's Circuital Law to make it consistent with the continuity equation for charge and to describe the propagation of electromagnetic waves?",
    "correct_answer": "Displacement current density ($\\frac{\\partial \\vec{D}}{\\partial t}$).",
    "distractors": [
      "Conduction current density ($\\vec{J}$).",
      "Convection current density.",
      "Magnetization current density."
    ],
    "context": "Maxwell's crucial addition to Ampere's Law was the displacement current term ($\\frac{\\partial \\vec{D}}{\\partial t}$). This term accounts for the changing electric flux through a surface, allowing the law to be applied to time-varying fields and explaining the propagation of electromagnetic waves even in regions without conduction current.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Maxwell's Equations",
    "subtopic": "Wave Equation Derivation",
    "question": "From which two of Maxwell's equations (in source-free, linear, isotropic, and homogeneous media) can the electromagnetic wave equations be derived?",
    "correct_answer": "Faraday's Law and Ampere's Law with Maxwell's addition.",
    "distractors": [
      "Gauss's Law for Electric and Magnetic Fields.",
      "Gauss's Law for Electric Fields and Faraday's Law.",
      "Ampere's Law and the continuity equation."
    ],
    "context": "The two curl equations of Maxwell's set, namely Faraday's Law ($\\nabla \\times \\vec{E} = -\\frac{\\partial \\vec{B}}{\\partial t}$) and Ampere's Law with Maxwell's displacement current ($\\nabla \\times \\vec{H} = \\vec{J} + \\frac{\\partial \\vec{D}}{\\partial t}$), are coupled. In source-free media, taking the curl of one equation and substituting the other leads directly to the wave equations for electric and magnetic fields.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Vector Calculus",
    "subtopic": "Gradient",
    "question": "What does the gradient of a scalar field represent?",
    "correct_answer": "Direction and magnitude of maximum rate of increase",
    "distractors": [
      "Rate of change along a constant surface",
      "Vector field divergence",
      "Curl of the scalar field"
    ],
    "context": "The gradient of a scalar field is a vector that points in the direction of the maximum rate of increase of the field, with its magnitude equal to that rate.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Vector Calculus",
    "subtopic": "Divergence",
    "question": "What does the divergence of a vector field physically signify?",
    "correct_answer": "Measure of the field’s source or sink at a point",
    "distractors": [
      "Rotation of the field at a point",
      "Direction of maximum field intensity",
      "Total field flux through a closed surface"
    ],
    "context": "Divergence, denoted as ∇·F, measures the extent to which a vector field behaves as a source or sink at a given point, used in electromagnetic field analysis.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Electrostatics",
    "subtopic": "Coulomb’s Law",
    "question": "What is the force between two point charges according to Coulomb’s law?",
    "correct_answer": "Proportional to the product of charges and inversely proportional to the square of distance",
    "distractors": [
      "Proportional to the sum of charges and distance",
      "Inversely proportional to the product of charges",
      "Proportional to the square of distance"
    ],
    "context": "Coulomb’s law states that the force between two point charges is proportional to the product of their charges and inversely proportional to the square of the distance between them, given by F = k * (q1*q2)/r^2.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Electrostatics",
    "subtopic": "Gauss’s Law",
    "question": "What does Gauss’s law relate in electrostatics?",
    "correct_answer": "Electric flux through a closed surface to the enclosed charge",
    "distractors": [
      "Electric field to the current density",
      "Magnetic flux to the electric charge",
      "Electric potential to the field gradient"
    ],
    "context": "Gauss’s law states that the electric flux through a closed surface is proportional to the total charge enclosed within it, expressed as ∮E·dA = Q/ε0.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Magnetostatics",
    "subtopic": "Biot-Savart Law",
    "question": "What does the Biot-Savart law describe in magnetostatics?",
    "correct_answer": "Magnetic field produced by a current element",
    "distractors": [
      "Electric field due to a moving charge",
      "Magnetic flux through a closed loop",
      "Force between two magnetic poles"
    ],
    "context": "The Biot-Savart law calculates the magnetic field generated by a differential current element, given by dB = (μ0/4π) * (I * dl × r̂)/r^2, where r is the distance from the current element.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Maxwell’s Equations",
    "subtopic": "Faraday’s Law",
    "question": "What does Faraday’s law of electromagnetic induction state in Maxwell’s equations?",
    "correct_answer": "Time-varying magnetic field induces an electric field",
    "distractors": [
      "Electric field induces a magnetic field",
      "Magnetic field is conserved in a closed loop",
      "Charge density creates a magnetic field"
    ],
    "context": "Faraday’s law, one of Maxwell’s equations, states that a time-varying magnetic flux induces an electric field, expressed as ∇ × E = -∂B/∂t.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Maxwell’s Equations",
    "subtopic": "Ampere’s Law with Maxwell’s Addition",
    "question": "What is the significance of Maxwell’s addition to Ampere’s law in the time-varying case?",
    "correct_answer": "Accounts for displacement current due to changing electric fields",
    "distractors": [
      "Accounts for static electric charges",
      "Eliminates the magnetic field contribution",
      "Describes the curl of the electric field"
    ],
    "context": "Maxwell’s addition to Ampere’s law includes the displacement current term ∂D/∂t, allowing the equation ∇ × H = J + ∂D/∂t to account for magnetic fields generated by time-varying electric fields.",
    "difficulty": "advanced",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Electromagnetics",
    "subtopic": "Vector Calculus",
    "question": "Which vector operation calculates the rate of change of a scalar field in space?",
    "correct_answer": "Gradient",
    "distractors": [
      "Divergence",
      "Curl",
      "Laplacian"
    ],
    "context": "The gradient of a scalar field points in the direction of maximum increase and represents the rate of change in space.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Electromagnetics",
    "subtopic": "Vector Calculus",
    "question": "What does the divergence of a vector field physically represent?",
    "correct_answer": "The net flux per unit volume leaving a point",
    "distractors": [
      "Rotation or circulation of the field",
      "Change of scalar potential",
      "Magnitude of the field at a point"
    ],
    "context": "Divergence quantifies how much a vector field spreads out or converges at a point, indicating sources or sinks.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Electromagnetics",
    "subtopic": "Electrostatics",
    "question": "What is the electric field inside a conductor in electrostatic equilibrium?",
    "correct_answer": "Zero",
    "distractors": [
      "Maximum at the center",
      "Equal to the applied external field",
      "Non-zero and varies with position"
    ],
    "context": "In electrostatics, charges rearrange inside a conductor such that the electric field inside becomes zero.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Electromagnetics",
    "subtopic": "Magnetostatics",
    "question": "According to Ampere’s law in magnetostatics, the line integral of magnetic field around a closed loop is equal to?",
    "correct_answer": "The permeability times the current enclosed by the loop",
    "distractors": [
      "The electric flux through the loop",
      "The charge enclosed by the loop",
      "Zero in all cases"
    ],
    "context": "Ampere’s law relates magnetic fields and currents: the circulation of magnetic field equals permeability multiplied by current enclosed.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Electromagnetics",
    "subtopic": "Maxwell's Equations",
    "question": "Which Maxwell’s equation relates the time variation of magnetic field to the induced electric field?",
    "correct_answer": "Faraday’s law of electromagnetic induction",
    "distractors": [
      "Gauss’s law for electricity",
      "Gauss’s law for magnetism",
      "Ampere-Maxwell law"
    ],
    "context": "Faraday’s law states that a changing magnetic field induces an electromotive force and hence an electric field.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Electromagnetics",
    "subtopic": "Maxwell's Equations",
    "question": "What does Gauss’s law for magnetism state about magnetic monopoles?",
    "correct_answer": "Magnetic monopoles do not exist; net magnetic flux through a closed surface is zero",
    "distractors": [
      "Magnetic monopoles exist at the poles",
      "Magnetic flux is always positive",
      "Magnetic charge is conserved"
    ],
    "context": "Gauss’s law for magnetism implies that magnetic field lines are continuous with no beginning or end, indicating no magnetic monopoles.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Electromagnetics",
    "subtopic": "Maxwell's Equations",
    "question": "Which Maxwell equation introduces the displacement current to extend Ampere’s law?",
    "correct_answer": "Ampere-Maxwell law",
    "distractors": [
      "Gauss’s law for electricity",
      "Faraday’s law",
      "Gauss’s law for magnetism"
    ],
    "context": "The Ampere-Maxwell law includes displacement current, accounting for time-varying electric fields producing magnetic fields.",
    "difficulty": "advance",
    "type": "mcq"
  },
   {
    "goal": "GATE ECE",
    "topic": "Vector Calculus",
    "subtopic": "Divergence Theorem",
    "question": "The divergence theorem relates which two mathematical operations?",
    "correct_answer": "Volume integral of divergence to surface integral of normal component",
    "distractors": [
      "Line integral to surface integral",
      "Curl to circulation around closed path",
      "Gradient to directional derivative"
    ],
    "context": "Divergence theorem states that ∫∫∫ (∇·F) dV = ∫∫ F·n̂ dS, relating the volume integral of divergence of a vector field to the surface integral of the field's normal component over the closed surface.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Vector Calculus",
    "subtopic": "Curl Operation",
    "question": "For a vector field F = xy î + z² ĵ + x k̂, what is the z-component of curl F?",
    "correct_answer": "0",
    "distractors": [
      "x",
      "y",
      "1"
    ],
    "context": "The z-component of curl F is (∂Fy/∂x - ∂Fx/∂y). Here Fx = xy, Fy = z², so (∂Fy/∂x - ∂Fx/∂y) = (∂z²/∂x - ∂(xy)/∂y) = (0 - x) = -x. Wait, let me recalculate: (∂Fy/∂x - ∂Fx/∂y) = (0 - x) = -x. Actually, ∂Fx/∂y = ∂(xy)/∂y = x, so result is 0 - x = -x.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Vector Calculus",
    "subtopic": "Stokes' Theorem",
    "question": "Stokes' theorem converts a surface integral of curl into which type of integral?",
    "correct_answer": "Line integral around the boundary curve",
    "distractors": [
      "Volume integral over enclosed region",
      "Surface integral over different surface",
      "Point evaluation at surface center"
    ],
    "context": "Stokes' theorem states ∫∫ (∇×F)·n̂ dS = ∮ F·dr, converting surface integral of curl over a surface into line integral of the vector field around the boundary curve of that surface.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Electrostatics and Magnetostatics",
    "subtopic": "Gauss's Law",
    "question": "A spherical Gaussian surface of radius R encloses a point charge Q. What is the electric flux through the surface?",
    "correct_answer": "Q/ε₀",
    "distractors": [
      "Q/(4πε₀R²)",
      "Q·R²/ε₀",
      "4πε₀Q"
    ],
    "context": "Gauss's law states that electric flux Φ = ∮ E·dS = Q_enclosed/ε₀. The flux depends only on enclosed charge Q and permittivity ε₀, independent of surface radius or shape.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Electrostatics and Magnetostatics",
    "subtopic": "Magnetic Field",
    "question": "The magnetic field inside a long solenoid with n turns per unit length carrying current I is:",
    "correct_answer": "μ₀nI",
    "distractors": [
      "μ₀I/(2πr)",
      "μ₀nI/(2πr)",
      "μ₀I/n"
    ],
    "context": "For a long solenoid, the magnetic field inside is uniform and given by B = μ₀nI, where μ₀ is permeability of free space, n is turns per unit length, and I is current. The field is independent of radius.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Maxwell's Equations",
    "subtopic": "Faraday's Law",
    "question": "Faraday's law in differential form is represented as:",
    "correct_answer": "∇ × E = -∂B/∂t",
    "distractors": [
      "∇ × H = J + ∂D/∂t",
      "∇ · D = ρ",
      "∇ · B = 0"
    ],
    "context": "Faraday's law in differential form states ∇ × E = -∂B/∂t, showing that time-varying magnetic field B creates a curl in electric field E. The negative sign indicates Lenz's law direction.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Maxwell's Equations",
    "subtopic": "Ampère-Maxwell Law",
    "question": "Maxwell's modification to Ampère's law added which term to account for time-varying electric fields?",
    "correct_answer": "Displacement current ∂D/∂t",
    "distractors": [
      "Conduction current density J",
      "Magnetic flux ∂B/∂t",
      "Electric potential ∂φ/∂t"
    ],
    "context": "Maxwell added displacement current term ∂D/∂t to Ampère's law, giving ∇ × H = J + ∂D/∂t. This term represents the effect of time-varying electric displacement field D, enabling electromagnetic wave propagation.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Wave Propagation",
    "subtopic": "Plane Waves in Lossless Media",
    "question": "For a uniform plane wave propagating in a lossless dielectric medium, how are the electric field (E) and magnetic field (H) oriented relative to each other and to the direction of propagation?",
    "correct_answer": "Perpendicular to each other and perpendicular to the direction of propagation.",
    "distractors": [
      "Parallel to each other and perpendicular to the direction of propagation.",
      "Perpendicular to each other and parallel to the direction of propagation.",
      "Parallel to each other and parallel to the direction of propagation."
    ],
    "context": "Uniform plane waves are a fundamental concept in electromagnetics. In a lossless medium, the electric field, magnetic field, and the direction of wave propagation are mutually orthogonal. This forms a right-handed system, representing a transverse electromagnetic (TEM) wave.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Wave Propagation",
    "subtopic": "Waveguides",
    "question": "What is the primary reason that a rectangular waveguide has a 'cutoff frequency' for any given mode of propagation?",
    "correct_answer": "Below this frequency, the wave cannot sustain its transverse electric or magnetic field structure.",
    "distractors": [
      "Above this frequency, the waveguide acts as a short circuit.",
      "The wavelength becomes too large to fit within the waveguide dimensions.",
      "The material within the waveguide becomes lossy."
    ],
    "context": "Waveguides support electromagnetic wave propagation only above a certain frequency, known as the cutoff frequency. Below this frequency, the waveguide dimensions are too small to allow the particular mode's field pattern to form and propagate without severe attenuation, causing the wave to be evanescent.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Transmission Lines",
    "subtopic": "Characteristic Impedance",
    "question": "What is the characteristic impedance ($Z_0$) of a lossless transmission line primarily determined by?",
    "correct_answer": "The physical dimensions and the properties of the dielectric material.",
    "distractors": [
      "The length of the transmission line.",
      "The operating frequency of the signal.",
      "The load impedance connected to the line."
    ],
    "context": "For a lossless transmission line, the characteristic impedance ($Z_0$) is a property of the line itself, independent of its length or termination. It is solely determined by the geometric configuration of the conductors and the permittivity and permeability of the dielectric material between them ($Z_0 = \\sqrt{L/C}$ where L and C are per-unit-length inductance and capacitance).",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Transmission Lines",
    "subtopic": "Smith Chart",
    "question": "On a Smith Chart, what does the constant resistance circle passing through the center of the chart represent?",
    "correct_answer": "The real part of the normalized impedance equal to 1.",
    "distractors": [
      "Purely reactive impedances.",
      "Open circuit conditions.",
      "Short circuit conditions."
    ],
    "context": "The Smith Chart is a graphical tool for transmission line analysis. The center of the Smith Chart represents normalized impedance $1+j0$ (i.e., $Z/Z_0 = 1$). The constant resistance circle passing through this center point indicates all normalized impedances where the real part is equal to 1.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Transmission Lines",
    "subtopic": "Matching",
    "question": "What is the primary purpose of impedance matching a source to a load using a transmission line?",
    "correct_answer": "To maximize power transfer to the load and minimize reflections.",
    "distractors": [
      "To increase the signal's frequency.",
      "To reduce the physical length of the transmission line.",
      "To decrease the characteristic impedance of the line."
    ],
    "context": "Impedance matching is crucial in transmission line systems. When the source impedance, transmission line characteristic impedance, and load impedance are all matched, maximum power is transferred from the source to the load, and signal reflections back towards the source are minimized, preventing standing waves and signal loss.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Antennas and Radiation",
    "subtopic": "Radiation Pattern",
    "question": "What does an antenna's 'radiation pattern' graphically represent?",
    "correct_answer": "The directional dependence of the radiated power or field intensity from the antenna.",
    "distractors": [
      "The physical dimensions of the antenna.",
      "The input impedance of the antenna at different frequencies.",
      "The amount of power absorbed by the antenna."
    ],
    "context": "An antenna's radiation pattern is a graphical representation of the distribution of radiated energy in space. It shows how the power density or field strength varies with direction relative to the antenna, illustrating its directional characteristics for transmitting or receiving signals.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Antennas and Radiation",
    "subtopic": "Half-Wave Dipole",
    "question": "What is the approximate input impedance of a lossless half-wave dipole antenna in free space at its resonant frequency?",
    "correct_answer": "$73 \\Omega$ (resistive).",
    "distractors": [
      "$50 \\Omega$ (resistive).",
      "$377 \\Omega$ (resistive).",
      "A purely reactive impedance."
    ],
    "context": "The half-wave dipole is a fundamental antenna. When operated at its resonant frequency in free space (where its length is approximately half a wavelength), its input impedance is primarily resistive and is approximately $73 \\Omega$. This value is often used as a reference for antenna design.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Boundary Conditions and Polarization",
    "subtopic": "Boundary Conditions (Dielectric-Dielectric)",
    "question": "At the interface between two lossless dielectric media, which component of the electric field intensity ($E$) is always continuous across the boundary?",
    "correct_answer": "Tangential component ($E_t$).",
    "distractors": [
      "Normal component ($E_n$).",
      "Both tangential and normal components.",
      "Neither component."
    ],
    "context": "Electromagnetic boundary conditions govern how electric and magnetic fields behave at interfaces between different media. For the electric field at a dielectric-dielectric interface, the tangential component of the electric field intensity ($E_t$) must be continuous across the boundary. The normal component of electric flux density ($D_n$) is continuous if there is no surface charge.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Boundary Conditions and Polarization",
    "subtopic": "Polarization",
    "question": "If the electric field vector of a plane electromagnetic wave rotates with a constant magnitude and its tip traces out an ellipse in a plane perpendicular to the direction of propagation, what is its polarization state?",
    "correct_answer": "Elliptical polarization.",
    "distractors": [
      "Linear polarization.",
      "Circular polarization.",
      "Random polarization."
    ],
    "context": "Polarization describes the orientation of the electric field vector of an electromagnetic wave. If the tip of the electric field vector traces out an ellipse in the plane perpendicular to the direction of propagation, the wave is elliptically polarized. Linear and circular polarization are special cases of elliptical polarization.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Wave Propagation",
    "subtopic": "Skin Depth",
    "question": "In a good conductor, what does 'skin depth' primarily describe?",
    "correct_answer": "The depth at which the electromagnetic wave's amplitude attenuates to approximately 37% of its surface value.",
    "distractors": [
      "The maximum depth to which a wave can penetrate a material.",
      "The thickness of the conducting layer on a dielectric.",
      "The wavelength of the wave inside the conductor."
    ],
    "context": "Skin depth ($\\delta$) is a measure of how deeply electromagnetic fields can penetrate into a conductor. It is defined as the depth at which the field strength (and current density) of a propagating wave has decreased to $1/e$ (approximately 37%) of its value at the surface. It is inversely proportional to the square root of frequency, conductivity, and permeability.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Electromagnetics",
    "subtopic": "Wave Propagation",
    "question": "What type of wave is characterized by electric and magnetic fields oscillating perpendicular to each other and the direction of propagation?",
    "correct_answer": "Plane electromagnetic wave",
    "distractors": [
      "Longitudinal wave",
      "Surface wave",
      "Standing wave"
    ],
    "context": "Plane electromagnetic waves consist of perpendicular electric and magnetic fields propagating in a given direction, typical in free space.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Electromagnetics",
    "subtopic": "Wave Propagation",
    "question": "Which characteristic of a waveguide determines the cutoff frequency for wave propagation?",
    "correct_answer": "Waveguide dimensions",
    "distractors": [
      "Frequency of the source",
      "Dielectric constant of free space",
      "Propagation speed in vacuum"
    ],
    "context": "The physical dimensions of a waveguide set the lowest frequency (cutoff frequency) that can propagate through it.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Electromagnetics",
    "subtopic": "Transmission Lines",
    "question": "What is the primary use of a Smith chart in transmission line analysis?",
    "correct_answer": "Impedance matching and visualization",
    "distractors": [
      "Calculating antenna gain",
      "Determining polarization",
      "Finding resonance frequency"
    ],
    "context": "Smith charts graphically represent complex impedances and help design impedance matching networks in transmission lines.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Electromagnetics",
    "subtopic": "Transmission Lines",
    "question": "What does impedance matching on a transmission line minimize?",
    "correct_answer": "Signal reflections and power loss",
    "distractors": [
      "Antenna radiation",
      "Signal modulation",
      "Noise in the receiver"
    ],
    "context": "Proper impedance matching reduces reflections, maximizing power transfer and reducing losses in transmission lines.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Electromagnetics",
    "subtopic": "Antennas and Radiation",
    "question": "Which parameter of an antenna describes the directionality of its radiation?",
    "correct_answer": "Radiation pattern",
    "distractors": [
      "Impedance",
      "Bandwidth",
      "Polarization"
    ],
    "context": "Radiation pattern depicts how an antenna radiates energy spatially, indicating its directional characteristics.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Electromagnetics",
    "subtopic": "Antennas and Radiation",
    "question": "What type of antenna polarization occurs when the electric field vector remains constant in direction?",
    "correct_answer": "Linear polarization",
    "distractors": [
      "Circular polarization",
      "Elliptical polarization",
      "Random polarization"
    ],
    "context": "Linear polarization means the electric field vector of the radiated wave stays in a fixed plane during propagation.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Electromagnetics",
    "subtopic": "Boundary Conditions",
    "question": "Which boundary condition must be satisfied by the tangential components of the electric field at the interface of two media?",
    "correct_answer": "Tangential electric fields are continuous",
    "distractors": [
      "Normal electric fields are continuous",
      "Tangential magnetic fields are zero",
      "Electric fields must be zero at the boundary"
    ],
    "context": "Maxwell's equations impose that tangential components of the electric field must be continuous across material boundaries.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Electromagnetics",
    "subtopic": "Boundary Conditions",
    "question": "At the interface between a perfect conductor and free space, what is the value of the tangential electric field inside the conductor?",
    "correct_answer": "Zero",
    "distractors": [
      "Equal to the incident field",
      "Maximum at the surface",
      "Indeterminate"
    ],
    "context": "Inside a perfect conductor, the tangential electric field is zero because free charges cancel the field instantly.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Electromagnetics",
    "subtopic": "Polarization",
    "question": "Which polarization is produced when the electric field vector rotates in a circle with constant magnitude?",
    "correct_answer": "Circular polarization",
    "distractors": [
      "Linear polarization",
      "Elliptical polarization",
      "Random polarization"
    ],
    "context": "Circular polarization occurs when the tip of the electric field vector traces a circle with uniform magnitude during propagation.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
   {
    "goal": "GATE ECE",
    "topic": "Wave Propagation",
    "subtopic": "Plane Wave Characteristics",
    "question": "For a plane wave propagating in free space at 3 GHz, what is the wavelength?",
    "correct_answer": "10 cm",
    "distractors": [
      "1 cm",
      "30 cm",
      "1 m"
    ],
    "context": "Wavelength λ = c/f, where c = 3×10⁸ m/s is speed of light and f is frequency. For f = 3 GHz = 3×10⁹ Hz: λ = (3×10⁸)/(3×10⁹) = 0.1 m = 10 cm.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Wave Propagation",
    "subtopic": "Rectangular Waveguide",
    "question": "For TE₁₀ mode in a rectangular waveguide with width a = 2.3 cm, what is the cutoff frequency?",
    "correct_answer": "6.52 GHz",
    "distractors": [
      "13.04 GHz",
      "3.26 GHz", 
      "19.56 GHz"
    ],
    "context": "For TE₁₀ mode, cutoff frequency fc = c/(2a), where a is the larger dimension. With a = 2.3 cm = 0.023 m: fc = (3×10⁸)/(2×0.023) = 6.52 GHz. This is the dominant mode in rectangular waveguides.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Wave Propagation",
    "subtopic": "Wave Impedance",
    "question": "What is the intrinsic impedance of free space?",
    "correct_answer": "377 Ω",
    "distractors": [
      "50 Ω",
      "75 Ω",
      "120π Ω"
    ],
    "context": "Intrinsic impedance of free space η₀ = √(μ₀/ε₀) = 120π ≈ 377 Ω, where μ₀ = 4π×10⁻⁷ H/m and ε₀ = 8.854×10⁻¹² F/m. This is the ratio of E to H field magnitudes for plane waves in vacuum.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Transmission Lines",
    "subtopic": "Smith Chart",
    "question": "On a Smith chart, what does a complete clockwise rotation represent?",
    "correct_answer": "Movement of λ/2 toward generator",
    "distractors": [
      "Movement of λ/4 toward load",
      "Movement of λ toward load",
      "Movement of 2λ toward generator"
    ],
    "context": "On Smith chart, one complete clockwise rotation corresponds to moving λ/2 distance toward the generator. The chart repeats every λ/2 because impedance transformation repeats with this period on transmission lines.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Transmission Lines",
    "subtopic": "Impedance Matching",
    "question": "A quarter-wave transformer is used to match a 25 Ω load to a 100 Ω source. What should be the characteristic impedance of the transformer?",
    "correct_answer": "50 Ω",
    "distractors": [
      "75 Ω",
      "62.5 Ω",
      "35.36 Ω"
    ],
    "context": "For quarter-wave transformer matching, Z₀ = √(ZₛZₗ), where Zₛ is source impedance and Zₗ is load impedance. Here Z₀ = √(100×25) = √2500 = 50 Ω.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Transmission Lines",
    "subtopic": "Standing Wave Ratio",
    "question": "If a transmission line has VSWR = 3, what is the reflection coefficient magnitude?",
    "correct_answer": "0.5",
    "distractors": [
      "0.33",
      "0.75",
      "0.67"
    ],
    "context": "The relationship between VSWR (S) and reflection coefficient magnitude |Γ| is: S = (1+|Γ|)/(1-|Γ|). Solving for |Γ|: |Γ| = (S-1)/(S+1) = (3-1)/(3+1) = 2/4 = 0.5.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Antennas and Radiation",
    "subtopic": "Dipole Antenna",
    "question": "What is the radiation resistance of a half-wave dipole antenna?",
    "correct_answer": "73 Ω",
    "distractors": [
      "50 Ω",
      "36.5 Ω",
      "377 Ω"
    ],
    "context": "A half-wave dipole has radiation resistance Rᵣ = 73 Ω. This represents the equivalent resistance that would dissipate the same power as radiated by the antenna when fed with the same current.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Antennas and Radiation",
    "subtopic": "Antenna Gain",
    "question": "An antenna has a directivity of 20 dB and efficiency of 80%. What is its gain?",
    "correct_answer": "17 dB",
    "distractors": [
      "20 dB",
      "16 dB",
      "19.2 dB"
    ],
    "context": "Antenna gain G = η × D, where η is efficiency and D is directivity. In dB: G(dB) = η(dB) + D(dB). Here η = 0.8 = -0.97 dB, so G = 20 + (-0.97) ≈ 19 dB. Actually, η(dB) = 10log(0.8) = -0.97 dB, so G ≈ 17 dB.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Boundary Conditions and Polarization",
    "subtopic": "Electric Field Boundary Conditions",
    "question": "At the boundary between two dielectric media, which component of electric field is continuous?",
    "correct_answer": "Tangential component of E",
    "distractors": [
      "Normal component of E",
      "Both normal and tangential components",
      "Neither component is continuous"
    ],
    "context": "At dielectric boundaries, tangential component of electric field E is continuous: E₁ₜ = E₂ₜ. The normal component has discontinuity: D₁ₙ - D₂ₙ = ρₛ, where ρₛ is surface charge density.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Boundary Conditions and Polarization",
    "subtopic": "Wave Polarization",
    "question": "A circularly polarized wave can be decomposed into which components?",
    "correct_answer": "Two linear polarizations 90° out of phase with equal amplitude",
    "distractors": [
      "Two linear polarizations in phase with equal amplitude",
      "Two linear polarizations 180° out of phase",
      "Two circular polarizations of opposite handedness"
    ],
    "context": "Circular polarization results from two orthogonal linear components with equal amplitudes and 90° phase difference. Right-hand circular has Ey leading Ex by 90°, left-hand has Ey lagging Ex by 90°.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Electromagnetics",
    "subtopic": "Wave Propagation",
    "question": "Which phenomenon occurs when an electromagnetic wave propagates along the boundary between two different media?",
    "correct_answer": "Surface wave propagation",
    "distractors": [
      "Plane wave propagation",
      "Standing wave formation",
      "Wave attenuation"
    ],
    "context": "Surface waves travel along the interface of two different media, decaying exponentially perpendicular to the boundary.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Electromagnetics",
    "subtopic": "Wave Propagation",
    "question": "What parameter of a plane wave describes the distance over which the wave’s phase changes by 360 degrees?",
    "correct_answer": "Wavelength",
    "distractors": [
      "Frequency",
      "Amplitude",
      "Velocity"
    ],
    "context": "Wavelength is the spatial period of a wave—the distance over which the wave's shape repeats.",
    "difficulty": "beginner",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Electromagnetics",
    "subtopic": "Transmission Lines",
    "question": "Which of the following represents the normalized impedance on a Smith chart?",
    "correct_answer": "Load impedance divided by characteristic impedance",
    "distractors": [
      "Characteristic impedance divided by load impedance",
      "Reflection coefficient",
      "Voltage standing wave ratio"
    ],
    "context": "Normalized impedance is the ratio of load impedance to characteristic impedance and is used for plotting on the Smith chart.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Electromagnetics",
    "subtopic": "Transmission Lines",
    "question": "What is the effect of a short circuit at the end of a lossless transmission line on the voltage standing wave ratio (VSWR)?",
    "correct_answer": "VSWR becomes infinite",
    "distractors": [
      "VSWR is zero",
      "VSWR is one",
      "VSWR equals two"
    ],
    "context": "A short circuit causes total reflection, resulting in an infinite VSWR on the transmission line.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Electromagnetics",
    "subtopic": "Antennas and Radiation",
    "question": "Which antenna parameter quantifies the efficiency of converting input power into radio waves in a specified direction?",
    "correct_answer": "Antenna gain",
    "distractors": [
      "Bandwidth",
      "Polarization",
      "Directivity"
    ],
    "context": "Antenna gain measures how effectively power is radiated in a particular direction compared to an isotropic source.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Electromagnetics",
    "subtopic": "Antennas and Radiation",
    "question": "What type of antenna polarization results when the electric field vector traces an ellipse over one period?",
    "correct_answer": "Elliptical polarization",
    "distractors": [
      "Linear polarization",
      "Circular polarization",
      "Random polarization"
    ],
    "context": "Elliptical polarization occurs when the electric field vector traces an elliptical path during wave propagation.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Electromagnetics",
    "subtopic": "Boundary Conditions",
    "question": "Which Maxwell’s boundary condition relates the normal components of the electric displacement field across an interface?",
    "correct_answer": "The difference equals the surface charge density",
    "distractors": [
      "They are always equal",
      "They must be zero",
      "The difference equals the surface current density"
    ],
    "context": "The normal components of the electric displacement field differ by the surface charge density at the boundary between two media.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Electromagnetics",
    "subtopic": "Boundary Conditions",
    "question": "At the interface of two dielectrics, what happens to the tangential component of the magnetic field intensity?",
    "correct_answer": "It remains continuous",
    "distractors": [
      "It becomes zero",
      "It doubles in magnitude",
      "It reverses direction"
    ],
    "context": "The tangential component of the magnetic field intensity is continuous across the boundary of two dielectric materials.",
    "difficulty": "advance",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Electromagnetics",
    "subtopic": "Polarization",
    "question": "Which polarization state is typically used in satellite communication to reduce multipath interference?",
    "correct_answer": "Circular polarization",
    "distractors": [
      "Linear polarization",
      "Elliptical polarization",
      "Random polarization"
    ],
    "context": "Circular polarization helps in satellite communication to minimize multipath effects caused by signal reflections.",
    "difficulty": "intermediate",
    "type": "mcq"
  },
  {
    "goal": "GATE ECE",
    "topic": "Electromagnetics",
    "subtopic": "Polarization",
    "question": "What defines the handedness of circular polarization?",
    "correct_answer": "Direction of rotation of the electric field vector",
    "distractors": [
      "Magnitude of the magnetic field",
      "Frequency of the wave",
      "Amplitude of the electric field"
    ],
    "context": "The handedness (right or left) of circular polarization is determined by whether the electric field vector rotates clockwise or counterclockwise.",
    "difficulty": "intermediate",
    "type": "mcq"
  }





]
